{"componentChunkName":"component---src-layout-default-tsx","path":"/foundations/density/","result":{"data":{"mdx":{"id":"6d9afc0b-e1cb-540f-a395-c79fa6f41694","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Density\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar DensityTable = makeShortcode(\"DensityTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Density is a foundational property of certain Looker Components and it plays a key role in how easy it is for a user to scan and navigate large amounts of content. Adjusting a component\\u2019s density changes its overall height and space it takes up in a UI. The higher the density, the smaller the height of the component.\"), mdx(\"p\", null, \"In general Looker Components that support density adjustments start at a medium density (e.g.: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0\"), \") and offer the ability to increase (e.g.: '-1, -2. -3\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \") or decrease (e.g.: \"), \"1`) density depending on the context and needs of the experience.\"), mdx(\"p\", null, \"A couple key things to keep in mind when using density are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Density should be adjusted at the top most level component and should not be mixed, for example:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adjust density on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"List\"), \" component, not it\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ListItem\"), \" children.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not combine a high density and low density \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MenuItem\"), \"s, in the same \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Menu\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High density components will not pass accessibility requirements, so use it judiciously and only where high density improves the experience\")), mdx(\"h2\", null, \"Components that support density\"), mdx(\"p\", null, \"Currently only list like components support density, this includes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"List\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Menu\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tree\")), mdx(DensityTable, {\n    mdxType: \"DensityTable\"\n  }), mdx(\"h2\", null, \"Helpers\"), mdx(\"p\", null, \"Looker Compnents ships a small collection of density \\\"helpers\\\". The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Density\"), \" component takes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scale\"), \" value to specify which key of the density scale to apply to children.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"<Density scale={-3}>\\n  <ListItem>This ListItem is using -3 density</ListItem>\\n</Density>\\n\")), mdx(\"p\", null, \"Also included are a set of helpers for each specific density size: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Density1\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Density0\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DensityNegative1\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DensityNegative2\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DensityNegative3\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"<Density1>\\n  <ListItem>+1 density</ListItem>\\n</Density1>\\n<Density0>\\n  <ListItem>0 density (default)</ListItem>\\n</Density0>\\n<DensityNegative3>\\n  <ListItem>-3 Density</ListItem>\\n</DensityNegative3>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Density"}}},"pageContext":{"id":"6d9afc0b-e1cb-540f-a395-c79fa6f41694"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}