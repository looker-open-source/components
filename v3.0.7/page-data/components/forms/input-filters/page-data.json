{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/forms/input-filters/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"e3004572-a2a2-533a-8f5c-6578c5e36ab8","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"InputFilters\",\n  \"github\": \"components/src/Form/Inputs/InputFilters/InputFilters.tsx\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<InputFilters />\"), \" component, displays a lits of filterable items that then have a second layer of filtering. Once the filter statement is set it can still be editable by clicking on the element itself.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \";() => {\\n  const filters = [\\n    { field: 'role', options: ['admin', 'group-admin', 'user', 'pizza'] },\\n    {\\n      field: 'group',\\n      label: 'Group',\\n      options: ['Cheddar', 'Gouda', 'Swiss', 'Mozzarella'],\\n    },\\n    {\\n      field: 'name',\\n      label: 'Name',\\n      options: ['Name 1', 'Name 2', 'Name 3'],\\n    },\\n    { field: 'status', options: ['Failed', 'In-Progress', 'Success'] },\\n    {\\n      field: 'buildAt',\\n      label: 'Last Build Time',\\n      options: ['01-22-20', '02-13-20', '05-28-20'],\\n    },\\n  ]\\n\\n  const [controlledFilters, setControlledFilters] = useState(filters)\\n\\n  return (\\n    <SpaceVertical>\\n      <InputFilters\\n        onChange={setControlledFilters}\\n        filters={controlledFilters}\\n      />\\n      <InputFilters\\n        onChange={setControlledFilters}\\n        filters={controlledFilters}\\n        hideFilterIcon\\n      />\\n    </SpaceVertical>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"components/src/Form/Inputs/InputFilters/InputFilters.tsx","status":null,"storybook":true,"storybookPath":null,"title":"InputFilters"}}},"pageContext":{"id":"e3004572-a2a2-533a-8f5c-6578c5e36ab8"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}