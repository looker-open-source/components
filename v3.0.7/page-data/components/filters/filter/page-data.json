{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/filters/filter/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"6f2ecc55-a943-5cad-9dab-0527a4a1dad7","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Filter\",\n  \"github\": \"filter-components/src/Filter/Filter.tsx\",\n  \"storybook\": true,\n  \"storybookPath\": \"Filters-Filter\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ImportMessage, {\n    packageName: \"filter-components\",\n    mdxType: \"ImportMessage\"\n  }, \"Filter\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Filter\"), \" is the top level component for rendering a\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.looker.com/reference/filter-expressions\"\n  }, \"Looker filter expression\"), \"\\nthat the user can update.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" for more out-of-the-box render of a dashboard filter, including label,\\nsuggestion fetching, and validation messaging, see the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"dashboard-filter\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"DashboardFilter\")), \" component.\"), mdx(\"h2\", null, \"expressionType\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Filter\"), \" relies on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"expressionType\"), \" to properly parse and render the expression.\\nIt can eithe rtake the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"expressionType\"), \" prop directly or derive it from filter\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"field\"), \" returned by the Looker API.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<SpaceVertical>\\n  <Filter name=\\\"Age\\\" expressionType=\\\"number\\\" expression=\\\"[0,100]\\\" />\\n  <Filter\\n    name=\\\"Age\\\"\\n    type=\\\"field_filter\\\"\\n    field={{ is_numeric: true }}\\n    expression=\\\"[0,100]\\\"\\n  />\\n</SpaceVertical>\\n\")), mdx(\"h2\", null, \"expression & onChange\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" to get updates to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"expression\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \";() => {\\n  const [expression, setExpression] = useState('[0,100]')\\n  const handleChange = value => {\\n    setExpression(value.expression)\\n  }\\n  return (\\n    <Space>\\n      <Filter\\n        name=\\\"Age\\\"\\n        expressionType=\\\"number\\\"\\n        expression={expression}\\n        onChange={handleChange}\\n      />\\n      <Paragraph>\\n        <strong>Current filter expression:</strong> {expression}\\n      </Paragraph>\\n    </Space>\\n  )\\n}\\n\")), mdx(\"p\", null, \"Alternatively, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useExpressionState\"), \" offers a shortcut.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \";() => {\\n  const stateProps = useExpressionState({ expression: '[0,100]' })\\n  return (\\n    <Space>\\n      <Filter name=\\\"Age\\\" expressionType=\\\"number\\\" {...stateProps} />\\n      <Paragraph>\\n        <strong>Current filter expression:</strong> {stateProps.expression}\\n      </Paragraph>\\n    </Space>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"Suggestions\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Filter\"), \" supports suggestions for string expression types.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Filter\\n  name=\\\"Status\\\"\\n  expressionType=\\\"string\\\"\\n  expression=\\\"pending\\\"\\n  suggestions={['complete', 'pending', 'cancelled']}\\n/>\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useSuggestable\"), \" hook will fetch and format suggestions when passed an\\ninitialized Looker SDK instance.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"static\",\n    \"static\": true\n  }, \"const FilterItem = ({ filter, sdk }) => {\\n  const { errorMessage, suggestableProps } = useSuggestable({\\n    filter,\\n    sdk,\\n  })\\n\\n  return (\\n    <Filter\\n      name=\\\"Status\\\"\\n      expressionType=\\\"string\\\"\\n      expression=\\\"pending\\\"\\n      {...suggestableProps}\\n    />\\n  )\\n}\\n\")), mdx(\"h2\", null, \"Config\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Filter\"), \" supports the various permutations of UI \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config\"), \" options that are returned in the\\nLooker API via the filter's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ui_config\"), \" property.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<SpaceVertical>\\n  <Heading as=\\\"h3\\\">String</Heading>\\n  <Space align=\\\"start\\\">\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">button_group</Heading>\\n      <Filter\\n        name=\\\"Status\\\"\\n        expressionType=\\\"string\\\"\\n        expression=\\\"pending,complete\\\"\\n        config={{ type: 'button_group' }}\\n        suggestions={['complete', 'pending', 'cancelled']}\\n      />\\n    </SpaceVertical>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">button_toggles</Heading>\\n      <Filter\\n        name=\\\"Status\\\"\\n        expressionType=\\\"string\\\"\\n        expression=\\\"pending\\\"\\n        config={{ type: 'button_toggles' }}\\n        suggestions={['complete', 'pending', 'cancelled']}\\n      />\\n    </SpaceVertical>\\n  </Space>\\n  <Space>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">taglist</Heading>\\n      <Filter\\n        name=\\\"Status\\\"\\n        expressionType=\\\"string\\\"\\n        expression=\\\"pending,complete\\\"\\n        config={{ type: 'taglist' }}\\n        suggestions={['complete', 'pending', 'cancelled']}\\n      />\\n    </SpaceVertical>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">dropdown_menu</Heading>\\n      <Filter\\n        name=\\\"Status\\\"\\n        expressionType=\\\"string\\\"\\n        expression=\\\"pending\\\"\\n        config={{ type: 'dropdown_menu' }}\\n        suggestions={['complete', 'pending', 'cancelled']}\\n      />\\n    </SpaceVertical>\\n  </Space>\\n  <Space>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">checkboxes</Heading>\\n      <Filter\\n        name=\\\"Status\\\"\\n        expressionType=\\\"string\\\"\\n        expression=\\\"pending,complete\\\"\\n        config={{ type: 'checkboxes' }}\\n        suggestions={['complete', 'pending', 'cancelled']}\\n      />\\n    </SpaceVertical>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">radio_buttons</Heading>\\n      <Filter\\n        name=\\\"Status\\\"\\n        expressionType=\\\"string\\\"\\n        expression=\\\"pending\\\"\\n        config={{ type: 'radio_buttons' }}\\n        suggestions={['complete', 'pending', 'cancelled']}\\n      />\\n    </SpaceVertical>\\n  </Space>\\n  <Divider />\\n  <Heading as=\\\"h3\\\">Date</Heading>\\n  <Space>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">relative_timeframes</Heading>\\n      <Filter\\n        name=\\\"Date\\\"\\n        expressionType=\\\"date\\\"\\n        expression=\\\"7 day\\\"\\n        config={{ type: 'relative_timeframes' }}\\n      />\\n    </SpaceVertical>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">day_picker</Heading>\\n      <Filter\\n        name=\\\"Date\\\"\\n        expressionType=\\\"date\\\"\\n        expression=\\\"2021/06/29\\\"\\n        config={{ type: 'day_picker' }}\\n      />\\n    </SpaceVertical>\\n  </Space>\\n  <SpaceVertical>\\n    <Heading as=\\\"h5\\\">day_range_picker</Heading>\\n    <Filter\\n      name=\\\"Date\\\"\\n      expressionType=\\\"date\\\"\\n      expression=\\\"2021/06/01 to 2021/06/30\\\"\\n      config={{ type: 'day_range_picker' }}\\n    />\\n  </SpaceVertical>\\n  <Divider />\\n  <Heading as=\\\"h3\\\">Number</Heading>\\n  <Space>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">slider</Heading>\\n      <Filter\\n        name=\\\"Age\\\"\\n        expressionType=\\\"number\\\"\\n        expression=\\\"55\\\"\\n        config={{ max: 120, min: 0, type: 'slider' }}\\n      />\\n    </SpaceVertical>\\n    <SpaceVertical>\\n      <Heading as=\\\"h5\\\">range_slider</Heading>\\n      <Filter\\n        name=\\\"Age\\\"\\n        expressionType=\\\"number\\\"\\n        expression=\\\"[0,45]\\\"\\n        config={{ max: 120, min: 0, type: 'range_slider' }}\\n      />\\n    </SpaceVertical>\\n  </Space>\\n</SpaceVertical>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"filter-components/src/Filter/Filter.tsx","status":null,"storybook":true,"storybookPath":"Filters-Filter","title":"Filter"}}},"pageContext":{"id":"6f2ecc55-a943-5cad-9dab-0527a4a1dad7"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}