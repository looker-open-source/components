{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/filters/dashboard-filter/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"324ca041-4fb9-53eb-8dc2-6f496c594965","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"DashboardFilter\",\n  \"github\": \"filter-components/src/DashboardFilter/DashboardFilter.tsx\",\n  \"storybook\": true,\n  \"storybookPath\": \"Filters-DashboardFilter\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ImportMessage, {\n    packageName: \"filter-components\",\n    mdxType: \"ImportMessage\"\n  }, \"DashboardFilter\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DashboardFilter\"), \" renders a dashboard filter as returned by the Looker API.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" for more direct rendering control, see the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"filter\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Filter\")), \" component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<DashboardFilter\\n  filter={{\\n    field: { is_numeric: true },\\n    id: 1,\\n    name: 'Age',\\n    type: 'field_filter',\\n  }}\\n/>\\n\")), mdx(\"h2\", null, \"expression & onChange\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" to get updates to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"expression\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \";() => {\\n  const [expression, setExpression] = useState('[0,100]')\\n  return (\\n    <SpaceVertical>\\n      <DashboardFilter\\n        filter={{\\n          field: { is_numeric: true },\\n          id: 1,\\n          name: 'Age',\\n          type: 'field_filter',\\n        }}\\n        expression={expression}\\n        onChange={setExpression}\\n      />\\n      <Paragraph>\\n        <strong>Current filter expression:</strong> {expression}\\n      </Paragraph>\\n    </SpaceVertical>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"filter-components/src/DashboardFilter/DashboardFilter.tsx","status":null,"storybook":true,"storybookPath":"Filters-DashboardFilter","title":"DashboardFilter"}}},"pageContext":{"id":"324ca041-4fb9-53eb-8dc2-6f496c594965"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}