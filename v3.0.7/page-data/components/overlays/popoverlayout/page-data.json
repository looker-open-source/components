{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/overlays/popoverlayout/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"581b8658-9e5d-595d-b518-8a22f76095df","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"PopoverLayout\",\n  \"github\": \"components/src/Popover/PopoverLayout.tsx\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PopoverLayout\"), \" component manages the popover layout components below to easily meet design-system expectations.\"), mdx(\"p\", null, \"This component composes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PopoverHeader\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PopoverContent\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PopverFooter\"), \" as needed.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PopoverHeader\"), \" will display the closing button if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"footer\"), \" is set to false.\"), mdx(\"p\", null, \"By default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PopoverFooter\"), \" will contain a dismissal button with the text \\\"Done\\\". That value can be changed by using the prop \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"closeButton\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<PopoverLayout header=\\\"Example Popover\\\">PopoverLayout content</PopoverLayout>\\n\")), mdx(\"h2\", null, \"Header hidden\"), mdx(\"p\", null, \"Use the hidden prop to hide the visible header text but still provide context for screen readers\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<PopoverLayout hideHeader header=\\\"Example Popover\\\" footer={false}>\\n  PopoverLayout content\\n</PopoverLayout>\\n\")), mdx(\"h2\", null, \"Footer extra content\"), mdx(\"p\", null, \"Use the footer prop to add an extra element to the Footer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<PopoverLayout\\n  header=\\\"Header\\\"\\n  footer={\\n    <ButtonTransparent color=\\\"neutral\\\" size=\\\"small\\\">\\n      Cancel\\n    </ButtonTransparent>\\n  }\\n>\\n  PopoverLayout content\\n</PopoverLayout>\\n\")), mdx(\"h2\", null, \"Footer closeButton\"), mdx(\"p\", null, \"Use the closeButton prop to change the default value of Footer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<PopoverLayout header=\\\"Header\\\" closeButton=\\\"Close\\\">\\n  PopoverLayout content\\n</PopoverLayout>\\n\")), mdx(\"h2\", null, \"no Footer\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<PopoverLayout header=\\\"Header\\\" footer={false}>\\n  PopoverLayout content\\n</PopoverLayout>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"components/src/Popover/PopoverLayout.tsx","status":null,"storybook":true,"storybookPath":null,"title":"PopoverLayout"}}},"pageContext":{"id":"581b8658-9e5d-595d-b518-8a22f76095df"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}