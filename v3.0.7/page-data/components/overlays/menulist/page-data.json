{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/overlays/menulist/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"5476e53e-c69f-5589-9eae-3184f9fb03a7","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MenuList\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" displays a list of choices.\"), mdx(\"h2\", null, \"Focus & Keyboard Controls\"), mdx(\"p\", null, \"When a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" is focused the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"up\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"down\"), \" arrow keys will move focus through the menu items within the list.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<MenuList>\\n  <MenuItem onClick={() => alert('Hello world!')}>Gouda</MenuItem>\\n  <MenuItem>Cheddar</MenuItem>\\n  <MenuItem>Swiss</MenuItem>\\n</MenuList>\\n\")), mdx(\"h2\", null, \"Density\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"density\"), \" prop to set the size and spacing of your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \". As \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"density\"), \" decreases, so does the height and spacing of child \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \"s.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"density\"), \" values range from -3 to 1.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Space>\\n  <MenuList density={1}>\\n    <MenuHeading>Big MenuList</MenuHeading>\\n    <MenuItem icon={<Favorite />}>Gouda</MenuItem>\\n    <MenuItem icon={<Favorite />}>Swiss</MenuItem>\\n  </MenuList>\\n  <MenuList density={-3}>\\n    <MenuHeading>Small MenuList</MenuHeading>\\n    <MenuItem icon={<Favorite />}>Gouda</MenuItem>\\n    <MenuItem icon={<Favorite />}>Swiss</MenuItem>\\n  </MenuList>\\n</Space>\\n\")), mdx(\"h2\", null, \"Windowing\"), mdx(\"p\", null, \"If a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" contains more than 100 children it will use windowing to display\\nonly the visible items for performance reasons. Windowing uses the item height to calculate\\npositioning for natural scrolling behavior.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" A parent element of your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" should have an explicit height. If no explicit height is set, your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" will attempt to render all child items and not utilize the windowing logic.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":null,"status":null,"storybook":true,"storybookPath":null,"title":"MenuList"}}},"pageContext":{"id":"5476e53e-c69f-5589-9eae-3184f9fb03a7"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}