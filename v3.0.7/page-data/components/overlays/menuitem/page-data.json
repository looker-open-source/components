{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/overlays/menuitem/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"3be1f4a6-6a2a-5c57-8c33-9900b084667f","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MenuItem\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \" is an list item containing a button for triggering actions from with in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"menu\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Menu\")), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"menulist\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"MenuList\")), \".\"), mdx(\"p\", null, \"For accessibility reasons, if you want your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \" to link somewhere then you can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"itemRole\"), \" prop to identify it as a link.\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" If using the props \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"itemRole\"), \" don't use the prop \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" as it is bad-form and defeats the purpose.\"), mdx(\"p\", null, \"An icon can optionally be assigned to each item via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"icon\"), \" property.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"itemRole=\\\"link\\\"\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" cannot be combined (use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"itemRole=\\\"button\\\" if you need to offer a disabled\"), \"MenuItem`)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<MenuList>\\n  <MenuItem icon={<Home />}>Home</MenuItem>\\n  <MenuItem\\n    itemRole=\\\"link\\\"\\n    target=\\\"_blank\\\"\\n    icon={<Public />}\\n    href=\\\"https://google.com\\\"\\n  >\\n    Away\\n  </MenuItem>\\n</MenuList>\\n\")), mdx(\"h2\", null, \"Detail & Description\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"detail\"), \" and/or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"description\"), \" prop to provide extra explanatory information on a given item.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<MenuList>\\n  <MenuItem detail=\\\"\\u2318\\u21E7\\u21B5\\\" description=\\\"this is the description\\\" icon={<LogoRings />}>\\n    Looker\\n  </MenuItem>\\n  <MenuItem description=\\\"this is the description\\\" icon={<VerifiedUser />}>\\n    Validate\\n  </MenuItem>\\n  <MenuItem detail=\\\"\\u2318\\u21E7\\u21B5\\\" icon={<PieChart />}>\\n    Pizza\\n  </MenuItem>\\n</MenuList>\\n<Divider />\\n<MenuList>\\n  <MenuItem description=\\\"this is the description\\\"icon={<Home />}>Home</MenuItem>\\n  <MenuItem\\n    detail=\\\"\\u2318\\u21E7\\u21B5\\\"\\n    href=\\\"https://google.com\\\"\\n    itemRole=\\\"link\\\"\\n    icon={<Public />}\\n    target=\\\"_blank\\\"\\n  >\\n    Away\\n  </MenuItem>\\n</MenuList>\\n\")), mdx(\"h2\", null, \"Tooltip\"), mdx(\"p\", null, \"To implement a tooltip on a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \", wrap the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \" in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tooltip\"), \" element.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<MenuList>\\n  <Tooltip content=\\\"It is gouda!\\\" placement=\\\"left\\\">\\n    <MenuItem>Gouda</MenuItem>\\n  </Tooltip>\\n  <MenuItem\\n    tooltip=\\\"I have a Swiss Cheese joke, but it's full of holes.\\\"\\n    tooltipPlacement=\\\"right\\\"\\n  >\\n    Swiss\\n  </MenuItem>\\n</MenuList>\\n\")), mdx(\"h2\", null, \"Icon\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<MenuList>\\n  <MenuItem icon={<LogoRings />}>Looker</MenuItem>\\n  <MenuItem icon={<VerifiedUser />}>Validate</MenuItem>\\n  <MenuItem icon={<PieChart />}>Pizza</MenuItem>\\n</MenuList>\\n\")), mdx(\"h2\", null, \"Artwork\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<MenuItem\\n  icon={\\n    <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <path\\n        d=\\\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM13 17H11V15H13V17ZM13 13H11V7H13V13Z\\\"\\n        fill=\\\"#7FFFD4\\\"\\n      />\\n    </svg>\\n  }\\n>\\n  Artwork\\n</MenuItem>\\n\")), mdx(\"h2\", null, \"Disabled\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" prop to indicate an option that is not currently available.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<MenuItem icon={<Beaker />} disabled>Disabled</MenuItem>\\n<MenuItem icon={<Beaker />}>Enabled</MenuItem>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":null,"status":null,"storybook":true,"storybookPath":null,"title":"MenuItem"}}},"pageContext":{"id":"3be1f4a6-6a2a-5c57-8c33-9900b084667f"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}