{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/date/field-date-range/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"1df7312a-3a65-5c78-999e-b8f3e8f6b2d7","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FieldDateRange\",\n  \"github\": \"components-date/src/FieldDateRange/FieldDateRange.tsx\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ImportMessage, {\n    packageName: \"components-date\",\n    mdxType: \"ImportMessage\"\n  }, \"FieldDateRange\"), mdx(\"p\", null, \"This component is composed of an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"InputDateRange\"), \" and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Label\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Grid columns={1}>\\n  <FieldDateRange label=\\\"Pick a date\\\" />\\n  <FieldDateRange\\n    label=\\\"Validation Error\\\"\\n    validationMessage={{\\n      message: 'Select a valid calendar date',\\n      type: 'error',\\n    }}\\n  />\\n  <FieldDateRange\\n    label=\\\"Disabled Field\\\"\\n    defaultValue={{\\n      from: new Date('May 18, 2020'),\\n      to: new Date('May 21, 2020'),\\n    }}\\n    disabled\\n  />\\n</Grid>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"components-date/src/FieldDateRange/FieldDateRange.tsx","status":null,"storybook":true,"storybookPath":null,"title":"FieldDateRange"}}},"pageContext":{"id":"1df7312a-3a65-5c78-999e-b8f3e8f6b2d7"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}