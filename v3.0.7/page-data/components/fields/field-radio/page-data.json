{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/fields/field-radio/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"a5c2dab4-cca2-5352-a126-28172db68807","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FieldRadio\",\n  \"github\": \"components/src/Form/Fields/FieldRadio/FieldRadio.tsx\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FieldRadio />\"), \" component is composed of a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Radio />\"), \" component and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Label />\"), \" component. Using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FieldRadio />\"), \" allows for rendering validation messages. By default, the label will render to the right of the radio button, however this is adjustable with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inline\"), \" property.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<FieldRadio name=\\\"radio\\\" label=\\\"Radio\\\" />\\n<FieldRadio name=\\\"radio\\\" label=\\\"Radio 2\\\" inline />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"components/src/Form/Fields/FieldRadio/FieldRadio.tsx","status":null,"storybook":true,"storybookPath":null,"title":"FieldRadio"}}},"pageContext":{"id":"a5c2dab4-cca2-5352-a126-28172db68807"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}