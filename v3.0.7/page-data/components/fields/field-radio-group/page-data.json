{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/fields/field-radio-group/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"c6e3ac5b-1837-5d88-9cf9-b3d499fe68eb","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FieldRadioGroup\",\n  \"github\": \"components/src/Form/Fields/FieldRadioGroup/FieldRadioGroup.tsx\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Groups of radios can be displayed with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FieldRadioGroup\")), mdx(\"p\", null, \"There are two \\\"inline\\\" variations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"inline\"), \" prop will put the group label and all the inputs in one line (wrapping the inputs as necessary)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"inputsInline\"), \" prop will stack the group label on top but keep all the inputs inline\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \";() => {\\n  const options = [\\n    {\\n      label: 'Cheddar',\\n      value: 'cheddar',\\n    },\\n    {\\n      label: 'Gouda',\\n      value: 'gouda',\\n    },\\n  ]\\n\\n  const optionsDisabled = [\\n    {\\n      label: 'Cheddar',\\n      value: 'cheddar',\\n    },\\n    {\\n      disabled: true,\\n      label: 'Gouda',\\n      value: 'gouda',\\n    },\\n  ]\\n\\n  return (\\n    <Grid>\\n      <FieldRadioGroup\\n        description=\\\"default layout\\\"\\n        label=\\\"Cheeses\\\"\\n        name=\\\"group1\\\"\\n        options={options}\\n      />\\n      <FieldRadioGroup\\n        description=\\\" inline layout\\\"\\n        inline\\n        label=\\\"Cheeses\\\"\\n        name=\\\"group1\\\"\\n        options={options}\\n      />\\n      <FieldRadioGroup\\n        description=\\\"Validation message and required\\\"\\n        label=\\\"Cheeses default layout\\\"\\n        name=\\\"group1\\\"\\n        options={options}\\n        required\\n        validationMessage={{\\n          message: 'Select at least 1 cheese',\\n          type: 'error',\\n        }}\\n      />\\n      <FieldRadioGroup\\n        description=\\\"Validation message and required\\\"\\n        inputsInline\\n        label=\\\"Cheeses inline inputs layout\\\"\\n        name=\\\"group1\\\"\\n        options={options}\\n        required\\n        validationMessage={{\\n          message: 'Select at least 1 cheese',\\n          type: 'error',\\n        }}\\n      />\\n      <FieldRadioGroup\\n        description=\\\"everything is disabled\\\"\\n        disabled\\n        label=\\\"Cheeses default layout\\\"\\n        name=\\\"group1\\\"\\n        options={options}\\n      />\\n      <FieldRadioGroup\\n        description=\\\"everything is disabled\\\"\\n        disabled\\n        inline\\n        name=\\\"group1\\\"\\n        label=\\\"Cheeses inline layout\\\"\\n        options={options}\\n      />\\n      <FieldRadioGroup\\n        description=\\\"only one Radio is disabled\\\"\\n        label=\\\"Cheeses default layout\\\"\\n        name=\\\"group1\\\"\\n        options={optionsDisabled}\\n      />\\n      <FieldRadioGroup\\n        description=\\\"only one Radio is disabled\\\"\\n        inline\\n        name=\\\"group1\\\"\\n        label=\\\"Cheeses inline layout\\\"\\n        options={optionsDisabled}\\n      />\\n    </Grid>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"components/src/Form/Fields/FieldRadioGroup/FieldRadioGroup.tsx","status":null,"storybook":null,"storybookPath":null,"title":"FieldRadioGroup"}}},"pageContext":{"id":"c6e3ac5b-1837-5d88-9cf9-b3d499fe68eb"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}