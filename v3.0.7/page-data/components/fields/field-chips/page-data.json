{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/fields/field-chips/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"da1f30b4-e742-5f0c-8807-e59d8b44420c","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FieldChips\",\n  \"github\": \"components/src/Form/Fields/FieldChips/FieldChips.tsx\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FieldChips />\"), \" component is composed of an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<InputChips />\"), \" component and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Label />\"), \" component. Using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FieldChips />\"), \" allows for rendering validation messages, label, details and description. By default, the label will render directly above the input field, which is the recommended convention, however this is adjustable with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inline\"), \" property.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \";() => {\\n  const [values, setValues] = React.useState([])\\n  function handleChange(newValues) {\\n    setValues(newValues)\\n  }\\n\\n  return (\\n    <FieldChips\\n      label=\\\"FieldChip's Label\\\"\\n      onChange={handleChange}\\n      values={values}\\n    />\\n  )\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \";() => {\\n  const [values, setValues] = React.useState([])\\n  function handleChange(newValues) {\\n    setValues(newValues)\\n  }\\n\\n  return (\\n    <FieldChips\\n      detail=\\\"5/50\\\"\\n      description=\\\"this is a description\\\"\\n      label=\\\"FieldChip's Label\\\"\\n      onChange={handleChange}\\n      values={values}\\n    />\\n  )\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \";() => {\\n  const [values, setValues] = React.useState([])\\n  function handleChange(newValues) {\\n    setValues(newValues)\\n  }\\n\\n  return (\\n    <FieldChips\\n      label=\\\"FieldChip's Label\\\"\\n      onChange={handleChange}\\n      validationMessage={{\\n        message: 'This is an error',\\n        type: 'error',\\n      }}\\n      values={values}\\n    />\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"components/src/Form/Fields/FieldChips/FieldChips.tsx","status":null,"storybook":true,"storybookPath":null,"title":"FieldChips"}}},"pageContext":{"id":"da1f30b4-e742-5f0c-8807-e59d8b44420c"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}