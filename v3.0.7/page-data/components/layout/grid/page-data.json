{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/layout/grid/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"04f2c71b-ffa0-5a0d-903f-30f5eb699216","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Grid\",\n  \"github\": \"components/src/Layout/Grid/Grid.tsx\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(MessageBar, {\n    intent: \"warn\",\n    noActions: true,\n    mb: \"u5\",\n    mdxType: \"MessageBar\"\n  }, mdx(Paragraph, {\n    mdxType: \"Paragraph\"\n  }, mdx(\"strong\", null, \"CAUTION:\"), \" Grid component does not render correctly on IE11, and all grid styles will be discarded. If a consistent layout on legacy browsers is important, we recommend \", mdx(Link, {\n    href: \"flex\",\n    mdxType: \"Link\"\n  }, \"Flex\"), \" for horizontal layouts and \", mdx(Link, {\n    href: \"space\",\n    mdxType: \"Link\"\n  }, \"SpaceVertical\"), \" to render a single width grid.\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Grid />\"), \" provides a simple implementation of the CSS Grid.\"), mdx(\"h2\", null, \"Default\"), mdx(\"p\", null, \"By default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Grid\"), \" has two columns with a \\\"medium\\\" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gap\"), \" between grid cells and \\\"100%\\\" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Grid>\\n  <Box2 border minHeight=\\\"5rem\\\">\\n    A\\n  </Box2>\\n  <Box2 border>B</Box2>\\n  <Box2 border>C</Box2>\\n  <Box2 border>D</Box2>\\n</Grid>\\n\")), mdx(\"h2\", null, \"Columns\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"columns\"), \" prop to specify the number of columns to display.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Grid columns={4}>\\n  <Box2 border minHeight=\\\"5rem\\\">\\n    A\\n  </Box2>\\n  <Box2 border>B</Box2>\\n  <Box2 border>C</Box2>\\n  <Box2 border>D</Box2>\\n</Grid>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Grid columns={1}>\\n  <Box2 border minHeight=\\\"5rem\\\">\\n    A\\n  </Box2>\\n  <Box2 border>B</Box2>\\n  <Box2 border>C</Box2>\\n  <Box2 border>D</Box2>\\n</Grid>\\n\")), mdx(\"h2\", null, \"Gap\"), mdx(\"p\", null, \"Specify \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gap\"), \" to change the distance between grid cells (defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"medium\"), \")\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Grid gap=\\\"u15\\\">\\n  <Box2 border minHeight=\\\"5rem\\\">\\n    A\\n  </Box2>\\n  <Box2 border>B</Box2>\\n</Grid>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Grid gap=\\\"none\\\">\\n  <Box2 border minHeight=\\\"5rem\\\">\\n    A\\n  </Box2>\\n  <Box2 border>B</Box2>\\n</Grid>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"components/src/Layout/Grid/Grid.tsx","status":null,"storybook":true,"storybookPath":null,"title":"Grid"}}},"pageContext":{"id":"04f2c71b-ffa0-5a0d-903f-30f5eb699216"}},"staticQueryHashes":["1992130076","2337259409","4275213719"]}