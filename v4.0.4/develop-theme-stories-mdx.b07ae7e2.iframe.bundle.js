"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[7909],{"../components/docs/develop/theme.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js");__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const Meta=(name="Meta",function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",props)});var name;const layoutProps={};function MDXContent({components,...props}){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(Meta,{title:"Docs/Develop/Theme",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",{id:"theme"},"Theme"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"To help stay within Looker's design principles, ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{parentName:"p",href:"https://github.com/looker-open-source/components/blob/main/packages/design-tokens/src/theme.ts",target:"_blank",rel:"nofollow noopener noreferrer"},"we publish a theme object"),", along with libraries, like Styled Components and styled-system, to easily access the theme object within components. For example, when styling components using the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"styled")," function, the theme object becomes part of a component's props:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h2",{id:"componentsprovider"},"ComponentsProvider"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Looker Components require that a Styled Components ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"ThemeProvider")," be available and that theme specified have the same structure that is provided by Looker Component's stock ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"theme")," object."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"ComponentsProvider")," is provided out-of-the-box to handle all of this."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"See below for information on extending the stock theme for your own use case."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"NOTE: For the sake of brevity examples within the documentation generally don't show the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"ComponentsProvider"),". It's injected as part of the site's code sandbox setup."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-jsx"},";() => {\n  /**\n   *  import { Button, ComponentsProvider } from '@looker/components'\n   **/\n\n  return (\n    <ComponentsProvider>\n      <Button>Just a regular button</Button>\n    </ComponentsProvider>\n  )\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"You can use the theme's properties within your custom components:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-jsx"},";() => {\n  /**\n   *  import { Button, ComponentsProvider, theme } from '@looker/components'\n   *  import styled from 'styled-components'\n   **/\n\n  const PositiveButton = styled(Button)`\n    border-color: ${({ theme }) => theme.colors.positive};\n    background-color: ${({ theme }) => theme.colors.positive};\n  `\n\n  return (\n    <ComponentsProvider>\n      <PositiveButton>Engage!</PositiveButton>\n    </ComponentsProvider>\n  )\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h2",{id:"customizing-the-theme"},"Customizing the Theme"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"You can customize the theme provided by Looker Components by passing colors, fonts, and more into the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"themeCustomizations")," prop."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-jsx"},";() => {\n  /**\n   *  import { Button, ComponentsProvider } from '@looker/components'\n   **/\n\n  return (\n    <ComponentsProvider themeCustomizations={{ colors: { key: 'hotpink' } }}>\n      <Button>Pink is so Pretty!</Button>\n    </ComponentsProvider>\n  )\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"The following colors are available for customization. The first three are most likely to require customization since they are heavily used throughout the Looker Components library:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"key: Key color is applied strategically across the UI. Used for default action buttons, toggle switches, interactive component accents"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"text: Default text color"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"background: Default page background used for application background")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"These colors are less likely to require customization:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"pageBackground: Used as page background in some themes. pageBackground and background have a subtle difference, wherein the pageBackground is closer to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"li"},"ui1"),' but blends are calculated from a more "absolute" background color (white or black)'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"link: Link text color, used for Breadcrumb, link"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"critical: Critical intent color used for: Delete button, error and validation messages"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"warn: Warn intent color used for Warning banner"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"positive: Positive intent color used for Positive banner"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"inform: Inform intent color used for Info banner"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"calculation: Indicates a calculated value"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"dimension: Indicates dimensionality"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"measure: Indicates a measure"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"title: Used by Heading. This is generally identical to colors.text5"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"body: Used by Paragraph, Ul/Ol. This is generally identical to colors.text5")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"The following font family options may be customized (use the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"fontSources")," property to specify the sources):"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"body: Used for body text"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"brand: Used for headings"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"code: Used for code snippets")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Additional properties to customize:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"brandAnimation: The Google Material ripple effect for pressable elements"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"externalLabel: True sets the field label style to external, false sets it to the Google Material floating label style")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h2",{id:"nesting-componentsprovider-themeproviders"},"Nesting ComponentsProvider (ThemeProviders)"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"ExtendComponentsThemeProvider")," is a Styled Components' ThemeProvider that acts as a React Context and in so doing is able to support the standard behavior of nested contexts - the theme defined nearest to the component will be the version used."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-jsx"},";() => {\n  /**\n   *  import { Button, ComponentsProvider } from '@looker/components'\n   **/\n\n  return (\n    <ComponentsProvider>\n      <Space>\n        <Button>Stock Theme</Button>\n\n        <ExtendComponentsThemeProvider\n          themeCustomizations={{ colors: { key: 'hotpink' } }}\n        >\n          <Button>Button with Custom Theme</Button>\n        </ExtendComponentsThemeProvider>\n      </Space>\n    </ComponentsProvider>\n  )\n}\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Develop/Theme",includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null)};const __WEBPACK_DEFAULT_EXPORT__=componentMeta,__namedExportsOrder=["__page"]}}]);