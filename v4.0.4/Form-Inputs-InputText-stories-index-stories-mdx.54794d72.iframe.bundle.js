"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[2487],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Inputs/InputText/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},"data-autofocus":{defaultValue:null,description:"",name:"data-autofocus",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"",name:"data-testid",required:!1,type:{name:"string"}},type:{defaultValue:{value:"text"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"month"'},{value:'"password"'},{value:'"week"'}]}},autoResize:{defaultValue:null,description:"Allows the input width to resize with the value or placeholder\nStyles will default to `width: auto` and `display: inline-flex`\nDo not use with children",name:"autoResize",required:!1,type:{name:"boolean"}},noErrorIcon:{defaultValue:null,description:"Don't show the error icon when validationType is 'error'",name:"noErrorIcon",required:!1,type:{name:"boolean"}},after:{defaultValue:null,description:"Content to place after the input\nIf a string is used, formatting will be automatically applied\nIf JSX is used, it will displace the built-in validation icon",name:"after",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"",name:"iconAfter",required:!1,type:{name:"IconType"}},before:{defaultValue:null,description:"Content to place before the input\nIf a string is used, formatting will be automatically applied",name:"before",required:!1,type:{name:"ReactNode"}},iconBefore:{defaultValue:null,description:"",name:"iconBefore",required:!1,type:{name:"IconType"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputText/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/InputText/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.InputText,title:"Docs/InputText",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"inputtext"},"InputText"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<InputText />")," component renders a single text input element on the page, with no accompanying label. It is generally used to construct higher-order components like the ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldText />"),". If you are building a form, you probably want to use ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldText />")," instead as it provides label and validation support."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport { InputText } from '../InputText'\nimport type { InputTextProps } from '../types'\n\nexport default function Basic(props: InputTextProps) {\n  return <InputText {...props} />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"before--after"},"Before & After"),(0,esm.kt)("p",null,"Use ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconBefore")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconAfter")," to render an icon before or after the input."),(0,esm.kt)("p",null,"For more custom content, ",(0,esm.kt)("inlineCode",{parentName:"p"},"before")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"after")," accept a React node. A string is passed to ",(0,esm.kt)("inlineCode",{parentName:"p"},"before")," or ",(0,esm.kt)("inlineCode",{parentName:"p"},"after")," will have formatting applied, while JSX will be rendered as-is.\nIf both ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconBefore")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"before"),", or ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconAfter")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"after")," are passed, a warning will appear in the console and the ",(0,esm.kt)("inlineCode",{parentName:"p"},"InputText")," will not render."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { SpaceVertical, Space } from \'../../../../Layout\'\nimport { Tooltip } from \'../../../../Tooltip\'\nimport { Span } from \'../../../../Text\'\nimport { InputText } from \'../InputText\'\n\nexport default function BeforeAfter() {\n  return (\n    <SpaceVertical>\n      <Space>\n        <InputText iconBefore={<MaterialIcons.Settings />} />\n        <InputText iconAfter={<MaterialIcons.Done />} />\n      </Space>\n      <Space>\n        <InputText before="$" />\n        <InputText\n          after={\n            <Tooltip placement="top" content="Try again">\n              <Span color="critical" fontSize="xsmall">\n                Oops!\n              </Span>\n            </Tooltip>\n          }\n        />\n      </Space>\n    </SpaceVertical>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"autoresize"},"autoResize"),(0,esm.kt)("p",null,"Use ",(0,esm.kt)("inlineCode",{parentName:"p"},"autoResize")," to allow the width of the component to adjust to the current value or placeholder."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport { InputText } from \'../InputText\'\n\nexport default function AutoResize() {\n  return <InputText autoResize placeholder="Start typing" />\n}\n',mdxType:"Editor"}),(0,esm.kt)("h3",{id:"disabled"},"Disabled"),(0,esm.kt)("p",null,"Use the disable property to make an input field un-editable."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport { InputText } from \'../InputText\'\n\nexport default function Disabled() {\n  return <InputText disabled value="A value" />\n}\n',mdxType:"Editor"}),(0,esm.kt)("h3",{id:"placeholders"},"Placeholders"),(0,esm.kt)("p",null,"Placeholders are used to give a hint to the user of the expected value for the input. They should not be used as a complete replacement of labels."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport { InputText } from \'../InputText\'\n\nexport default function Placeholder() {\n  return <InputText placeholder="Placeholder" />\n}\n',mdxType:"Editor"}),(0,esm.kt)("h3",{id:"readonly-property"},"ReadOnly Property"),(0,esm.kt)("p",null,"As the name suggests, ",(0,esm.kt)("inlineCode",{parentName:"p"},"readOnly")," makes the text un-editable."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport { InputText } from \'../InputText\'\n\nexport default function ReadOnly() {\n  return <InputText value="You can\'t change me." readOnly />\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"accessibility"},"Accessibility"),(0,esm.kt)("p",null,"Use ",(0,esm.kt)("inlineCode",{parentName:"p"},"FieldInputText")," to ensure accessibility. If you must use ",(0,esm.kt)("inlineCode",{parentName:"p"},"InputText")," on its own,\nalways follow ",(0,esm.kt)("a",{parentName:"p",href:"https://www.w3.org/WAI/tutorials/forms/labels/",target:"_blank",rel:"nofollow noopener noreferrer"},"best practices for accessible labeling"),"."),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.InputText,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/InputText",component:src.InputText,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);