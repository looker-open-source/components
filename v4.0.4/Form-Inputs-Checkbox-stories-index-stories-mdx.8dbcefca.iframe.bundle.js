"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[7669],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Inputs/Checkbox/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"MixedBoolean"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},"data-autofocus":{defaultValue:null,description:"",name:"data-autofocus",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"",name:"data-testid",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Checkbox/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/Checkbox/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.Checkbox,title:"Docs/Form/Inputs/Checkbox",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"checkbox"},"Checkbox"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Checkbox />")," component renders a single checkbox element on the page, with no accompanying label. It is generally used to construct higher-order components like the ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldCheckbox />"),". If you are building a form, you probably want to use ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldCheckbox />")," instead as it provides label support."),(0,esm.kt)("h2",{id:"checked-property"},"Checked Property"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Checkbox />"),' component can be rendered in three different states: checked, unchecked, and "mixed". In addition to the standard boolean, rendering a "mixed" value can be used to indicate that only a fraction of related sub-options have been selected.'),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { Checkbox } from '../Checkbox'\n\nexport default function Checked() {\n  return <Checkbox checked />\n}\n",mdxType:"Editor"}),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Note:"),' The "mixed" value is only available to the ',(0,esm.kt)("inlineCode",{parentName:"p"},"checked")," property and not available to ",(0,esm.kt)("inlineCode",{parentName:"p"},"defaultChecked")," property."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from \'react\'\nimport { Checkbox } from \'../Checkbox\'\n\nexport default function Checked() {\n  return <Checkbox checked="mixed" />\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"onchange-property"},"onChange Property"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"Checkbox")," accepts an onChange callback, which can be used for toggling checkbox state."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from 'react'\nimport { Checkbox } from '../Checkbox'\n\nexport default function OnChange() {\n  const [checked, setChecked] = useState(true)\n  const handleChange = () => setChecked(!checked)\n  return <Checkbox checked={checked} onChange={handleChange} />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"advanced-use-controlling-parentchild-mixed-states"},"Advanced Use: Controlling parent/child mixed states"),(0,esm.kt)("p",null,"Using a mixed state checkbox can be used to establish a parent and child relationship between multiple options. This is an advanced use and will likely require bespoke state management. In an attempt to facilitate a standard UX, we've create a hook and state pattern."),(0,esm.kt)("p",null,"This may not be sufficient for your own use case, but it may provide a good starting point and reference for how it should work."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from \'react\'\nimport { UnorderedList } from \'../../../../UnorderedList\'\nimport { FieldCheckbox } from \'../../../Fields\'\nimport { useMixedStateCheckbox } from \'../useMixedStateCheckbox\'\nimport type { MixedBoolean } from \'../Checkbox\'\n\nexport default function MixedStates() {\n  // Set up local state and child change handlers\n  const [parentState, setParentState] = useState(false as MixedBoolean)\n  const [appleState, setAppleState] = useState(false as MixedBoolean)\n  const [bananaState, setBananaState] = useState(true as MixedBoolean)\n  const handleAppleChange = () => setAppleState(!appleState)\n  const handleBananaChange = () => setBananaState(!bananaState)\n\n  // Establish checkbox hierarchy for use in custom hook\n  const fruitTree = {\n    children: [\n      { setState: setAppleState, state: appleState },\n      { setState: setBananaState, state: bananaState },\n    ],\n    parent: {\n      setState: setParentState,\n      state: parentState,\n    },\n  }\n\n  // Sync parent/child states and get provided parent change handler\n  const handleParentChange = useMixedStateCheckbox(fruitTree)\n\n  return (\n    <UnorderedList>\n      <li>\n        <FieldCheckbox\n          label="All Fruit"\n          value="all-fruit"\n          onChange={handleParentChange}\n          checked={parentState}\n        />\n      </li>\n      <li>\n        <UnorderedList pl="u5">\n          <li>\n            <FieldCheckbox\n              label="🍏"\n              value="apple"\n              onChange={handleAppleChange}\n              checked={appleState}\n            />\n          </li>\n          <li>\n            <FieldCheckbox\n              value="apple"\n              onChange={handleBananaChange}\n              checked={bananaState}\n              label="🍌"\n            />\n          </li>\n        </UnorderedList>\n      </li>\n    </UnorderedList>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"name-and-id"},"Name and ID"),(0,esm.kt)("p",null,"A name and ID can be specified in the ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Checkbox />")," component. Names are important if the checkbox is used in the context of a form, in which case a name is required for the value of the checkbox to be captured."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from \'react\'\nimport { Checkbox } from \'../Checkbox\'\nimport type { CheckboxProps } from \'../Checkbox\'\n\nexport default function Basic(props: CheckboxProps) {\n  return <Checkbox name="someName" id="someId" {...props} />\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"disabled-property"},"Disabled Property"),(0,esm.kt)("p",null,"Use the disable property to gray out the checkbox, making it unclickable."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { Checkbox } from '../Checkbox'\n\nexport default function Disabled() {\n  return <Checkbox disabled />\n}\n",mdxType:"Editor"}),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { Checkbox } from '../Checkbox'\n\nexport default function DisabledChecked() {\n  return <Checkbox disabled checked />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"readonly-property"},"ReadOnly property"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"Checkbox")," will ignore user-actions on a ",(0,esm.kt)("inlineCode",{parentName:"p"},"Checkbox")," with the ",(0,esm.kt)("inlineCode",{parentName:"p"},"readOnly")," property enabled, similar to ",(0,esm.kt)("inlineCode",{parentName:"p"},"disabled")," but without greying out the option."),(0,esm.kt)("p",null,"NOTE: In HTML specifying ",(0,esm.kt)("inlineCode",{parentName:"p"},"readonly")," on ",(0,esm.kt)("em",{parentName:"p"},"only")," prevents changes to ",(0,esm.kt)("inlineCode",{parentName:"p"},"value")," attribute of the checkbox and therefore allowing the user to still check and uncheck the checkbox."),(0,esm.kt)("p",null,"In most cases we emulate the HTML specification where it has an existing decision or feature. However, the specification's behavior around checkboxes with a ",(0,esm.kt)("inlineCode",{parentName:"p"},"readonly")," attribute is rather unintuitive."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { Checkbox } from '../Checkbox'\n\nexport default function ReadOnly() {\n  return <Checkbox readOnly />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"accessibility"},"Accessibility"),(0,esm.kt)("p",null,"Use ",(0,esm.kt)("inlineCode",{parentName:"p"},"FieldCheckbox")," to ensure accessibility. If you must use ",(0,esm.kt)("inlineCode",{parentName:"p"},"Checkbox")," on its own, always associate a ",(0,esm.kt)("inlineCode",{parentName:"p"},"label"),", either by wrapping it around the ",(0,esm.kt)("inlineCode",{parentName:"p"},"Checkbox"),", or using the ",(0,esm.kt)("inlineCode",{parentName:"p"},"for")," attribute corresponding to the ",(0,esm.kt)("inlineCode",{parentName:"p"},"Checkbox")," id attribute."),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.Checkbox,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Form/Inputs/Checkbox",component:src.Checkbox,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);