"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[740],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Dialog/Confirm/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),Confirm=__webpack_require__("../components/src/Dialog/Confirm/Confirm.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");const Critical="/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { Confirm, ButtonOutline } from '../../..'\n\nexport default function Critical() {\n  return (\n    <Confirm\n      title=\"Confirm Something\"\n      message=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\n      onConfirm={close => {\n        alert('You did something')\n        close()\n      }}\n      buttonColor=\"critical\"\n      width={['10rem', '20rem', '30rem', '40rem']}\n    >\n      {open => (\n        <ButtonOutline color=\"critical\" onClick={open}>\n          Something destructive\n        </ButtonOutline>\n      )}\n    </Confirm>\n  )\n}\n";function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:Confirm.I,title:"Docs/Dialog/Confirm",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"confirm"},"Confirm"),(0,esm.kt)("p",null,"Confirm provides a helpful composition of dialog components to drive the most common use case: driving user action to confirm or cancel a specific outcome."),(0,esm.kt)("h1",{id:"standard-use"},"Standard Use"),(0,esm.kt)("p",null,"Confirm makes use of the render prop pattern to provide ",(0,esm.kt)("inlineCode",{parentName:"p"},"open")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"close")," functions to be called when needed."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { Confirm, ButtonOutline } from '../../..'\n\nexport default function Basic() {\n  return (\n    <Confirm\n      title=\"Confirm Something\"\n      message=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\n      onConfirm={close => {\n        alert('You did something')\n        close()\n      }}\n      width={['10rem', '20rem', '30rem', '40rem']}\n    >\n      {open => <ButtonOutline onClick={open}>Do something</ButtonOutline>}\n    </Confirm>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("p",null,"Updating color and text of the button"),(0,esm.kt)(Editor.Editor,{code:Critical,mdxType:"Editor"}),(0,esm.kt)("h1",{id:"useconfirm"},"useConfirm"),(0,esm.kt)("p",null,"If you want more control over markup and state, we provide a custom hook that returns the opener function and rendered confirmation dialog. The following example illustrates how the opener can be called outside the Confirm component."),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-jsx"},";() => {\n  function handleConfirm(close) {\n    alert('You deleted it')\n    close()\n  }\n\n  const [confirmationDialog, openDialog] = useConfirm({\n    confirmLabel: 'Yes, Delete all',\n    buttonColor: 'critical',\n    title: `Delete all`,\n    message: 'Are you sure you want to delete all?',\n    onConfirm: handleConfirm,\n  })\n\n  return (\n    <>\n      {confirmationDialog}\n      <ButtonOutline onClick={openDialog}>useConfirm</ButtonOutline>\n    </>\n  )\n}\n")),(0,esm.kt)("h1",{id:"confirmlayout"},"ConfirmLayout"),(0,esm.kt)("p",null,'We\'ve found that most Dialogs involve the same common elements: Title, Message, a primary action (usually "Confirm"), and a secondary action (usually "Cancel").'),(0,esm.kt)("p",null,"To help standardize that layout, we created the ",(0,esm.kt)("inlineCode",{parentName:"p"},"ConfirmLayout")," component for composing the relevant pieces. This is handy if you need something like Confirm in a separate context (e.g. when you need to lay out surface content for use in ",(0,esm.kt)("a",{parentName:"p",href:"/components/dialogs/dialog"},(0,esm.kt)("inlineCode",{parentName:"a"},"Dialog")),")."),(0,esm.kt)(Editor.Editor,{code:Critical,mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:Confirm.I,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Dialog/Confirm",component:Confirm.I,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);