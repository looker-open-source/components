"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[3386],{"../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Controlled:()=>Controlled,ControlledInputValue:()=>ControlledInputValue,CustomIndicator:()=>CustomIndicator,ListLayout:()=>ListLayout,NoIndicator:()=>NoIndicator,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),ComboboxMulti=__webpack_require__("../components/src/Form/Inputs/Combobox/ComboboxMulti/ComboboxMulti.tsx"),esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js"),ComboboxMultiInput=__webpack_require__("../components/src/Form/Inputs/Combobox/ComboboxMultiInput/ComboboxMultiInput.tsx"),ComboboxMultiOption=__webpack_require__("../components/src/Form/Inputs/Combobox/ComboboxMultiOption/ComboboxMultiOption.tsx"),ComboboxList=__webpack_require__("../components/src/Form/Inputs/Combobox/ComboboxList/ComboboxList.tsx");function Basic(props){const{width=300,...restProps}=props;return react.createElement(ComboboxMulti.K,(0,esm_extends.Z)({width:300},restProps),react.createElement(ComboboxMultiInput.g,{onClear:()=>alert("CLEAR"),freeInput:!0}),react.createElement(ComboboxList.Vu,null,react.createElement(ComboboxMultiOption.o,{value:"Apples"}),react.createElement(ComboboxMultiOption.o,{value:"Oranges"}),react.createElement(ComboboxMultiOption.o,{value:"Grapes"}),react.createElement(ComboboxMultiOption.o,{value:"Bananas"}),react.createElement(ComboboxMultiOption.o,{value:"Pineapples"})))}try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{values:{defaultValue:null,description:"The current option (controlled)",name:"values",required:!1,type:{name:"ComboboxOptionObject[]"}},defaultValues:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValues",required:!1,type:{name:"ComboboxOptionObject[]"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxMultiCallback"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function Controlled(props){const{width=300,values:valuesProp=[{value:"Bananas"}],onChange:_onChange,...restProps}=props,[options,setOptions]=(0,react.useState)(valuesProp);return react.createElement(ComboboxMulti.K,(0,esm_extends.Z)({width,values:options,onChange:newOptions=>{setOptions(newOptions)}},restProps),react.createElement(ComboboxMultiInput.g,{onClear:()=>alert("CLEAR"),freeInput:!0}),react.createElement(ComboboxList.Vu,null,react.createElement(ComboboxMultiOption.o,{value:"Apples"}),react.createElement(ComboboxMultiOption.o,{value:"Oranges"}),react.createElement(ComboboxMultiOption.o,{value:"Grapes"}),react.createElement(ComboboxMultiOption.o,{value:"Bananas"}),react.createElement(ComboboxMultiOption.o,{value:"Pineapples"})))}try{Controlled.displayName="Controlled",Controlled.__docgenInfo={description:"",displayName:"Controlled",props:{values:{defaultValue:null,description:"The current option (controlled)",name:"values",required:!1,type:{name:"ComboboxOptionObject[]"}},defaultValues:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValues",required:!1,type:{name:"ComboboxOptionObject[]"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxMultiCallback"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/Controlled.tsx#Controlled"]={docgenInfo:Controlled.__docgenInfo,name:"Controlled",path:"../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/Controlled.tsx#Controlled"})}catch(__react_docgen_typescript_loader_error){}var SpaceVertical=__webpack_require__("../components/src/Layout/Space/SpaceVertical/SpaceVertical.tsx"),Paragraph=__webpack_require__("../components/src/Text/Paragraph/Paragraph.tsx"),Button=__webpack_require__("../components/src/Button/Button.tsx");function ControlledInputValue(props){const{width=300,values:valuesProp=[{value:"Apples"}],onChange:_onChange,...restProps}=props,[inputValue,setInputValue]=(0,react.useState)("starting value"),[values,setValues]=(0,react.useState)(valuesProp);return react.createElement(SpaceVertical.s,{width,align:"start"},react.createElement(Paragraph.n,null,"Current inputValue: ",inputValue),react.createElement(Button.z,{onClick:()=>setInputValue("bananas")},"Change Input Value"),react.createElement(ComboboxMulti.K,(0,esm_extends.Z)({values,onChange:setValues},restProps),react.createElement(ComboboxMultiInput.g,{autoComplete:!1,inputValue,onInputChange:setInputValue,freeInput:!0}),react.createElement(ComboboxList.Vu,{persistSelection:!0},react.createElement(ComboboxMultiOption.o,{value:"Apples"}),react.createElement(ComboboxMultiOption.o,{value:"Oranges"}),react.createElement(ComboboxMultiOption.o,{value:"Grapes"}),react.createElement(ComboboxMultiOption.o,{value:"Bananas"}),react.createElement(ComboboxMultiOption.o,{value:"Pineapples"}))))}try{ControlledInputValue.displayName="ControlledInputValue",ControlledInputValue.__docgenInfo={description:"",displayName:"ControlledInputValue",props:{values:{defaultValue:null,description:"The current option (controlled)",name:"values",required:!1,type:{name:"ComboboxOptionObject[]"}},defaultValues:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValues",required:!1,type:{name:"ComboboxOptionObject[]"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxMultiCallback"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/ControlledInputValue.tsx#ControlledInputValue"]={docgenInfo:ControlledInputValue.__docgenInfo,name:"ControlledInputValue",path:"../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/ControlledInputValue.tsx#ControlledInputValue"})}catch(__react_docgen_typescript_loader_error){}const Indicator=({isActive,isSelected})=>{let indicator;return indicator=isSelected?">>":isActive?">":"",react.createElement(react.Fragment,null,indicator)};function CustomIndicator(props){const{width=300,...restProps}=props;return react.createElement(ComboboxMulti.K,(0,esm_extends.Z)({width},restProps),react.createElement(ComboboxMultiInput.g,{onClear:()=>alert("CLEAR"),placeholder:"Custom indicator"}),react.createElement(ComboboxList.Vu,{indicator:Indicator,persistSelection:!0},react.createElement(ComboboxMultiOption.o,{value:"Apples"}),react.createElement(ComboboxMultiOption.o,{value:"Oranges"}),react.createElement(ComboboxMultiOption.o,{value:"Grapes"}),react.createElement(ComboboxMultiOption.o,{value:"Bananas"}),react.createElement(ComboboxMultiOption.o,{value:"Pineapples"})))}try{CustomIndicator.displayName="CustomIndicator",CustomIndicator.__docgenInfo={description:"",displayName:"CustomIndicator",props:{values:{defaultValue:null,description:"The current option (controlled)",name:"values",required:!1,type:{name:"ComboboxOptionObject[]"}},defaultValues:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValues",required:!1,type:{name:"ComboboxOptionObject[]"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxMultiCallback"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/CustomIndicator.tsx#CustomIndicator"]={docgenInfo:CustomIndicator.__docgenInfo,name:"CustomIndicator",path:"../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/CustomIndicator.tsx#CustomIndicator"})}catch(__react_docgen_typescript_loader_error){}var Label=__webpack_require__("../components/src/Form/Label/Label.tsx"),Form=__webpack_require__("../components/src/Form/index.ts"),Card=__webpack_require__("../components/src/Card/Card.tsx");function ListLayout(){const[containerWidth,setContainerWidth]=(0,react.useState)(400);return react.createElement(SpaceVertical.s,{p:"u5"},react.createElement(Label._,null,"Move slider to adjust container width:"),react.createElement(Form.Slider,{min:100,max:1e3,step:10,value:containerWidth,onChange:e=>{setContainerWidth(parseInt(e.currentTarget.value,10))},width:400}),react.createElement(Card.Z,{p:20,width:containerWidth+40},react.createElement(SpaceVertical.s,null,react.createElement(ComboboxMulti.K,null,react.createElement(ComboboxMultiInput.g,{placeholder:"width=500"}),react.createElement(ComboboxList.Vu,{width:500},react.createElement(ComboboxMultiOption.o,{value:"Apples"}),react.createElement(ComboboxMultiOption.o,{value:"Oranges"}),react.createElement(ComboboxMultiOption.o,{value:"Grapes"}),react.createElement(ComboboxMultiOption.o,{value:"Bananas"}),react.createElement(ComboboxMultiOption.o,{value:"Pineapples"}))),react.createElement(ComboboxMulti.K,null,react.createElement(ComboboxMultiInput.g,{placeholder:"minWidth=420"}),react.createElement(ComboboxList.Vu,{minWidth:420},react.createElement(ComboboxMultiOption.o,{value:"Apples"}),react.createElement(ComboboxMultiOption.o,{value:"Oranges"}),react.createElement(ComboboxMultiOption.o,{value:"Grapes"}),react.createElement(ComboboxMultiOption.o,{value:"Bananas"}),react.createElement(ComboboxMultiOption.o,{value:"Pineapples"}))))))}function NoIndicator(props){const{width=300,...restProps}=props;return react.createElement(ComboboxMulti.K,(0,esm_extends.Z)({width},restProps),react.createElement(ComboboxMultiInput.g,{onClear:()=>alert("CLEAR"),placeholder:"indicator={false}"}),react.createElement(ComboboxList.Vu,{indicator:!1,persistSelection:!0},react.createElement(ComboboxMultiOption.o,{value:"Apples"}),react.createElement(ComboboxMultiOption.o,{value:"Oranges"}),react.createElement(ComboboxMultiOption.o,{value:"Grapes"}),react.createElement(ComboboxMultiOption.o,{value:"Bananas"}),react.createElement(ComboboxMultiOption.o,{value:"Pineapples"})))}try{NoIndicator.displayName="NoIndicator",NoIndicator.__docgenInfo={description:"",displayName:"NoIndicator",props:{values:{defaultValue:null,description:"The current option (controlled)",name:"values",required:!1,type:{name:"ComboboxOptionObject[]"}},defaultValues:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValues",required:!1,type:{name:"ComboboxOptionObject[]"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxMultiCallback"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/NoIndicator.tsx#NoIndicator"]={docgenInfo:NoIndicator.__docgenInfo,name:"NoIndicator",path:"../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/NoIndicator.tsx#NoIndicator"})}catch(__react_docgen_typescript_loader_error){}const index_stories={argTypes:defaultArgTypes.W,component:ComboboxMulti.K,parameters:{storyshots:{disable:!0}},title:"Stories/ComboboxMulti"},__namedExportsOrder=["Basic","Controlled","ControlledInputValue","CustomIndicator","ListLayout","NoIndicator"];try{indexstories.displayName="indexstories",indexstories.__docgenInfo={description:"",displayName:"indexstories",props:{values:{defaultValue:null,description:"The current option (controlled)",name:"values",required:!1,type:{name:"ComboboxOptionObject[]"}},defaultValues:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValues",required:!1,type:{name:"ComboboxOptionObject[]"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxMultiCallback"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/index.stories.tsx#indexstories"]={docgenInfo:indexstories.__docgenInfo,name:"indexstories",path:"../components/src/Form/Inputs/Combobox/ComboboxMulti/stories/index.stories.tsx#indexstories"})}catch(__react_docgen_typescript_loader_error){}},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);