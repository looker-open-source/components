"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[6008],{"../components/src/Form/Fields/FieldChips/FieldChips.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoResize:()=>AutoResize,AutoResizeFloatingLabel:()=>AutoResizeFloatingLabel,Basic:()=>Basic,Controlled:()=>Controlled,FieldChipOptions:()=>FieldChipOptions,FloatingLabel:()=>FloatingLabel,Overflow:()=>Overflow,Truncate:()=>Truncate,ValidationDuplicate:()=>ValidationDuplicate,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),_looker_components_providers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../components-providers/src/ExtendComponentsProvider.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_looker_storybook__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/defaultArgTypes.ts"),_Layout__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../components/src/Layout/Grid/Grid.tsx"),_Layout__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../components/src/Layout/Space/SpaceVertical/SpaceVertical.tsx"),_Text__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../components/src/Text/Paragraph/Paragraph.tsx"),_FieldChips__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../components/src/Form/Fields/FieldChips/FieldChips.tsx");const __WEBPACK_DEFAULT_EXPORT__={argTypes:_looker_storybook__WEBPACK_IMPORTED_MODULE_1__.W,component:_FieldChips__WEBPACK_IMPORTED_MODULE_2__.H,title:"FieldChips"},Template=({externalLabel=!0,initialValues,...args})=>{const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValues||["apples"]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_looker_components_providers__WEBPACK_IMPORTED_MODULE_3__.O,{themeCustomizations:{defaults:{externalLabel}}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FieldChips__WEBPACK_IMPORTED_MODULE_2__.H,(0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__.Z)({},args,{values,onChange:setValues})))},Basic=Template.bind({});Basic.args={label:"Basic"};const FloatingLabel=Template.bind({});FloatingLabel.args={externalLabel:!1,label:"Floating Label"};const Truncate=Template.bind({});Truncate.args={...Basic.args,initialValues:["A very long token that will truncate"],label:"Truncate",width:250};const Overflow=Template.bind({});Overflow.args={...Basic.args,initialValues:["California","Wyoming","Nevada","Wisconsin","Mississippi","Missouri","New York","New Jersey"],label:"Overflow",maxHeight:145,width:200};const AutoResize=Template.bind({});AutoResize.args={...Basic.args,autoResize:!0,label:"Auto Resize",maxWidth:"50vw",placeholder:"Auto Resize"};const AutoResizeFloatingLabel=Template.bind({});AutoResizeFloatingLabel.args={...AutoResize.args,externalLabel:!1,placeholder:"Auto Resize"};const FieldChipOptions=()=>{const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(["apples"]),handleChange=vals=>setValues(vals);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Layout__WEBPACK_IMPORTED_MODULE_5__.r,{columns:1},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FieldChips__WEBPACK_IMPORTED_MODULE_2__.H,{label:"FieldChip's Label",onChange:handleChange,values}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FieldChips__WEBPACK_IMPORTED_MODULE_2__.H,{detail:"5/50",description:"this is a description",label:"FieldChip's Label",onChange:handleChange,values}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FieldChips__WEBPACK_IMPORTED_MODULE_2__.H,{label:"FieldChip's Label",onChange:handleChange,validationMessage:{message:"This is an error",type:"error"},values}))};FieldChipOptions.parameters={storyshots:{disable:!0}};const Controlled=()=>{const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(["bananas"]),[inputValue,setInputValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("oranges");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FieldChips__WEBPACK_IMPORTED_MODULE_2__.H,{values,inputValue,onChange:vals=>setValues(vals),onInputChange:value=>setInputValue(value),summary:"summary"})};Controlled.parameters={storyshots:{disable:!0}};const emailValidator=/^(([^<>()[\]\\.,:\s@"]+(\.[^<>()[\]\\.,:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ValidationDuplicate=()=>{const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(["bob@internet.com"]),[invalid,setInvalid]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[duplicate,setDuplicate]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Layout__WEBPACK_IMPORTED_MODULE_6__.s,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FieldChips__WEBPACK_IMPORTED_MODULE_2__.H,{values,onChange:vals=>{setInvalid(""),setDuplicate(""),setValues(vals)},placeholder:"Email validation",validate:val=>emailValidator.test(val),onValidationFail:values=>setInvalid(`Invalid email: ${values.join(", ")}`),onDuplicate:values=>setDuplicate(`Duplicate email: ${values.join(", ")}`)}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Text__WEBPACK_IMPORTED_MODULE_7__.n,null,invalid," ",duplicate))};ValidationDuplicate.parameters={storyshots:{disable:!0}},Basic.parameters={storySource:{source:"({ externalLabel = true, initialValues, ...args }) => {\n  const [values, setValues] = useState<string[]>(initialValues || ['apples'])\n\n  return (\n    <ExtendComponentsThemeProvider\n      themeCustomizations={{ defaults: { externalLabel } }}\n    >\n      <FieldChips {...args} values={values} onChange={setValues} />\n    </ExtendComponentsThemeProvider>\n  )\n}"},...Basic.parameters},FloatingLabel.parameters={storySource:{source:"({ externalLabel = true, initialValues, ...args }) => {\n  const [values, setValues] = useState<string[]>(initialValues || ['apples'])\n\n  return (\n    <ExtendComponentsThemeProvider\n      themeCustomizations={{ defaults: { externalLabel } }}\n    >\n      <FieldChips {...args} values={values} onChange={setValues} />\n    </ExtendComponentsThemeProvider>\n  )\n}"},...FloatingLabel.parameters},Truncate.parameters={storySource:{source:"({ externalLabel = true, initialValues, ...args }) => {\n  const [values, setValues] = useState<string[]>(initialValues || ['apples'])\n\n  return (\n    <ExtendComponentsThemeProvider\n      themeCustomizations={{ defaults: { externalLabel } }}\n    >\n      <FieldChips {...args} values={values} onChange={setValues} />\n    </ExtendComponentsThemeProvider>\n  )\n}"},...Truncate.parameters},Overflow.parameters={storySource:{source:"({ externalLabel = true, initialValues, ...args }) => {\n  const [values, setValues] = useState<string[]>(initialValues || ['apples'])\n\n  return (\n    <ExtendComponentsThemeProvider\n      themeCustomizations={{ defaults: { externalLabel } }}\n    >\n      <FieldChips {...args} values={values} onChange={setValues} />\n    </ExtendComponentsThemeProvider>\n  )\n}"},...Overflow.parameters},AutoResize.parameters={storySource:{source:"({ externalLabel = true, initialValues, ...args }) => {\n  const [values, setValues] = useState<string[]>(initialValues || ['apples'])\n\n  return (\n    <ExtendComponentsThemeProvider\n      themeCustomizations={{ defaults: { externalLabel } }}\n    >\n      <FieldChips {...args} values={values} onChange={setValues} />\n    </ExtendComponentsThemeProvider>\n  )\n}"},...AutoResize.parameters},AutoResizeFloatingLabel.parameters={storySource:{source:"({ externalLabel = true, initialValues, ...args }) => {\n  const [values, setValues] = useState<string[]>(initialValues || ['apples'])\n\n  return (\n    <ExtendComponentsThemeProvider\n      themeCustomizations={{ defaults: { externalLabel } }}\n    >\n      <FieldChips {...args} values={values} onChange={setValues} />\n    </ExtendComponentsThemeProvider>\n  )\n}"},...AutoResizeFloatingLabel.parameters},FieldChipOptions.parameters={storySource:{source:'() => {\n  const [values, setValues] = useState<string[]>([\'apples\'])\n  const handleChange = (vals: string[]) => setValues(vals)\n\n  return (\n    <Grid columns={1}>\n      <FieldChips\n        label="FieldChip\'s Label"\n        onChange={handleChange}\n        values={values}\n      />\n      <FieldChips\n        detail="5/50"\n        description="this is a description"\n        label="FieldChip\'s Label"\n        onChange={handleChange}\n        values={values}\n      />\n      <FieldChips\n        label="FieldChip\'s Label"\n        onChange={handleChange}\n        validationMessage={{\n          message: \'This is an error\',\n          type: \'error\',\n        }}\n        values={values}\n      />\n    </Grid>\n  )\n}'},...FieldChipOptions.parameters},Controlled.parameters={storySource:{source:"() => {\n  const [values, setValues] = useState<string[]>(['bananas'])\n  const [inputValue, setInputValue] = useState('oranges')\n  const handleChange = (vals: string[]) => setValues(vals)\n  const handleInputChange = (value: string) => setInputValue(value)\n\n  return (\n    <FieldChips\n      values={values}\n      inputValue={inputValue}\n      onChange={handleChange}\n      onInputChange={handleInputChange}\n      summary=\"summary\"\n    />\n  )\n}"},...Controlled.parameters},ValidationDuplicate.parameters={storySource:{source:"() => {\n  const [values, setValues] = useState<string[]>(['bob@internet.com'])\n  const [invalid, setInvalid] = useState('')\n  const [duplicate, setDuplicate] = useState('')\n\n  const handleChange = (vals: string[]) => {\n    setInvalid('')\n    setDuplicate('')\n    setValues(vals)\n  }\n\n  const handleInvalid = (values: string[]) =>\n    setInvalid(`Invalid email: ${values.join(', ')}`)\n\n  const handleDuplicate = (values: string[]) =>\n    setDuplicate(`Duplicate email: ${values.join(', ')}`)\n\n  return (\n    <SpaceVertical>\n      <FieldChips\n        values={values}\n        onChange={handleChange}\n        placeholder=\"Email validation\"\n        validate={(val: string) => emailValidator.test(val)}\n        onValidationFail={handleInvalid}\n        onDuplicate={handleDuplicate}\n      />\n      <Paragraph>\n        {invalid} {duplicate}\n      </Paragraph>\n    </SpaceVertical>\n  )\n}"},...ValidationDuplicate.parameters};const __namedExportsOrder=["Basic","FloatingLabel","Truncate","Overflow","AutoResize","AutoResizeFloatingLabel","FieldChipOptions","Controlled","ValidationDuplicate"]},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);