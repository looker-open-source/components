"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[1815],{"../components/src/Form/ValidationMessage/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),ValidationMessage=__webpack_require__("../components/src/Form/ValidationMessage/ValidationMessage.tsx"),esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js");function Basic(props){const{message="Error",type="error",...restProps}=props;return react.createElement(ValidationMessage.y,(0,esm_extends.Z)({message,type},restProps))}try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"The type of validation, therefore changing the message's text color. Accepts: error.",name:"type",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},message:{defaultValue:null,description:"The validation message to render.\nI18n recommended: content that is user visible should be treated for i18n",name:"message",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/ValidationMessage/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/ValidationMessage/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}const index_stories={argTypes:defaultArgTypes.W,component:ValidationMessage.y,parameters:{storyshots:{disable:!0}},title:"Stories/ValidationMessage"},__namedExportsOrder=["Basic"];try{indexstories.displayName="indexstories",indexstories.__docgenInfo={description:"",displayName:"indexstories",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"The type of validation, therefore changing the message's text color. Accepts: error.",name:"type",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},message:{defaultValue:null,description:"The validation message to render.\nI18n recommended: content that is user visible should be treated for i18n",name:"message",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/ValidationMessage/stories/index.stories.tsx#indexstories"]={docgenInfo:indexstories.__docgenInfo,name:"indexstories",path:"../components/src/Form/ValidationMessage/stories/index.stories.tsx#indexstories"})}catch(__react_docgen_typescript_loader_error){}},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);