{"version":3,"file":"ContextWrapper.js","names":["React","SWRConfig","ComponentsProvider","SDKContext","DataState","mockSDKWithListeners","ContextWrapper","children","initialState","createElement","value","provider","Map","Provider"],"sources":["../../../src/testUtils/ContextWrapper.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react';\nimport type { ReactNode } from 'react';\nimport { SWRConfig } from 'swr';\nimport { ComponentsProvider } from '@looker/components';\nimport type { Looker40SDK } from '@looker/sdk';\nimport { SDKContext } from '../SDKContext';\nimport type { DataStore } from '../hooks';\nimport { DataState } from '../hooks';\nimport { mockSDKWithListeners } from '.';\n\ntype ContextWrapperProps = {\n  initialState?: DataStore;\n  children?: ReactNode;\n};\n\nexport const ContextWrapper = ({\n  children,\n  initialState,\n}: ContextWrapperProps) => {\n  return (\n    <ComponentsProvider>\n      <SWRConfig value={{ provider: () => new Map() }}>\n        <SDKContext.Provider value={mockSDKWithListeners as Looker40SDK}>\n          <DataState.Provider initialState={initialState}>\n            {children}\n          </DataState.Provider>\n        </SDKContext.Provider>\n      </SWRConfig>\n    </ComponentsProvider>\n  );\n};\n"],"mappings":"AAIA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,KAAK;AAC/B,SAASC,kBAAkB,QAAQ,oBAAoB;AAEvD,SAASC,UAAU,QAAQ,eAAe;AAE1C,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,oBAAoB,QAAQ,GAAG;AAOxC,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAC7BC,QAAQ;EACRC;AACmB,CAAC,KAAK;EACzB,OACER,KAAA,CAAAS,aAAA,CAACP,kBAAkB,QACjBF,KAAA,CAAAS,aAAA,CAACR,SAAS;IAACS,KAAK,EAAE;MAAEC,QAAQ,EAAEA,CAAA,KAAM,IAAIC,GAAG,CAAC;IAAE;EAAE,GAC9CZ,KAAA,CAAAS,aAAA,CAACN,UAAU,CAACU,QAAQ;IAACH,KAAK,EAAEL;EAAoC,GAC9DL,KAAA,CAAAS,aAAA,CAACL,SAAS,CAACS,QAAQ;IAACL,YAAY,EAAEA;EAAa,GAC5CD,QACiB,CACD,CACZ,CACO,CAAC;AAEzB,CAAC","ignoreList":[]}