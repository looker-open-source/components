// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InlineInputText renders an input with a placeholder 1`] = `
.c1 {
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  caret-color: #262D33;
  height: 100%;
  left: 0;
  outline: none;
  padding: 0;
  position: absolute;
  text-align: inherit;
  text-transform: inherit;
  top: 0;
  width: 100%;
}

.c2 {
  white-space: pre;
  color: #939BA5;
  text-align: inherit;
}

.c0 {
  color: inherit;
  border: none;
  border-bottom: 1px dashed;
  border-bottom-color: #C1C6CC;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
  min-width: 2rem;
  text-align: inherit;
}

.c0:focus,
.c0:hover {
  outline: none;
  border-bottom-color: #6C43E0;
  background-color: #F5F6F7;
}

.c0:focus {
  border-bottom-style: solid;
}

<div
  className="c0"
  data-testid="inlineInputText"
>
  <input
    className="c1"
    onChange={[Function]}
    type="text"
    value=""
  />
  <div
    className="c2"
  >
    this is the placeholder
  </div>
</div>
`;

exports[`InlineInputText renders an input with no value 1`] = `
.c1 {
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  caret-color: #262D33;
  height: 100%;
  left: 0;
  outline: none;
  padding: 0;
  position: absolute;
  text-align: inherit;
  text-transform: inherit;
  top: 0;
  width: 100%;
}

.c2 {
  white-space: pre;
  color: #939BA5;
  text-align: inherit;
}

.c0 {
  color: inherit;
  border: none;
  border-bottom: 1px dashed;
  border-bottom-color: #C1C6CC;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
  min-width: 2rem;
  text-align: inherit;
}

.c0:focus,
.c0:hover {
  outline: none;
  border-bottom-color: #6C43E0;
  background-color: #F5F6F7;
}

.c0:focus {
  border-bottom-style: solid;
}

<div
  className="c0"
  data-testid="inlineInputText"
>
  <input
    className="c1"
    onChange={[Function]}
    type="text"
    value=""
  />
  <div
    className="c2"
  >
     
  </div>
</div>
`;

exports[`InlineInputText renders an input with specific predefined value 1`] = `
.c1 {
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  caret-color: #262D33;
  height: 100%;
  left: 0;
  outline: none;
  padding: 0;
  position: absolute;
  text-align: inherit;
  text-transform: inherit;
  top: 0;
  width: 100%;
}

.c2 {
  white-space: pre;
  color: transparent;
  text-align: inherit;
}

.c0 {
  color: inherit;
  border: none;
  border-bottom: 1px dashed;
  border-bottom-color: #C1C6CC;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
  min-width: 2rem;
  text-align: inherit;
}

.c0:focus,
.c0:hover {
  outline: none;
  border-bottom-color: #6C43E0;
  background-color: #F5F6F7;
}

.c0:focus {
  border-bottom-style: solid;
}

<div
  className="c0"
  data-testid="inlineInputText"
>
  <input
    className="c1"
    onChange={[Function]}
    type="text"
    value="type here..."
  />
  <div
    className="c2"
  >
    type here...
  </div>
</div>
`;
