"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[6937],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Inputs/TextArea/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{resize:{defaultValue:{value:"vertical"},description:"Allows the end-user to resize vertical height of textarea",name:"resize",required:!1,type:{name:"TextAreaResize"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/TextArea/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/TextArea/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.TextArea,title:"Docs/TextArea",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"textarea"},"TextArea"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"TextArea")," component offers a multi-line text editor. If you are building a form ",(0,esm.kt)("inlineCode",{parentName:"p"},"FieldTextArea")," may be a better fit."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { TextArea } from '../..'\nimport type { TextAreaProps } from '../TextArea'\n\nexport default function Basic(props: TextAreaProps) {\n  return <TextArea {...props} placeholder=\"Placholder text\" />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"defaultvalue"},"DefaultValue"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { TextArea } from '../..'\n\nexport default function DefaultValue() {\n  return <TextArea defaultValue=\"A value\" />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"allowing-textarea-to-be-resized"},"Allowing TextArea to be resized"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"true")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"vertical")," will allow the ",(0,esm.kt)("inlineCode",{parentName:"p"},"TextArea")," height to be resized. Alternatively, ",(0,esm.kt)("inlineCode",{parentName:"p"},"none")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"false")," will not allow resizing."),(0,esm.kt)(Editor.Editor,{code:'/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from \'react\'\nimport { TextArea } from \'../..\'\n\nexport default function Resize() {\n  return (\n    <>\n      <TextArea resize placeholder="resize vertically" />\n      <TextArea resize="none" placeholder="no resize" />\n      <TextArea resize={false} placeholder="no resize" />\n      <TextArea resize="vertical" placeholder="only resize vertically" />\n    </>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"disabled"},"Disabled"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { TextArea } from '../..'\n\nexport default function Disabled() {\n  return <TextArea disabled />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"error-message"},"Error Message"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { TextArea } from '../..'\n\nexport default function Error() {\n  return <TextArea validationType=\"error\" />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.TextArea,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/TextArea",component:src.TextArea,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);