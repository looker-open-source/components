"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[4431],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Fieldset/stories/Fieldset.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>Fieldset_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),Fieldset=__webpack_require__("../components/src/Fieldset/Fieldset.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:Fieldset.p,title:"Docs/Fieldset",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"fieldset"},"Fieldset"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Fieldset />")," component is used to wrap Field components into groups."),(0,esm.kt)("h2",{id:"legend"},"Legend"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"legend")," property allows for a heading which is by default aligned above and to the left."),(0,esm.kt)(Editor.Editor,{code:'/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from \'react\'\nimport { Fieldset } from \'../\'\nimport { FieldText } from \'../../Form\'\n\nexport default function Basic() {\n  return (\n    <Fieldset legend="This is the Legend">\n      <FieldText label="First Label" />\n      <FieldText label="Second Label" />\n      <FieldText label="Third Label" />\n    </Fieldset>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"inline"},"Inline"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset")," can be displayed inline"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Fieldset } from '../'\nimport { FieldText } from '../../Form'\n\nexport default function Inline() {\n  return (\n    <Fieldset inline legend=\"This is the Legend\">\n      <FieldText label=\"First Label\" />\n      <FieldText label=\"Second Label\" />\n      <FieldText\n        label=\"Third Label\"\n        validationMessage={{ message: 'This is an error', type: 'error' }}\n      />\n    </Fieldset>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("p",null,"Likewise, ",(0,esm.kt)("inlineCode",{parentName:"p"},"Field")," can be individually displayed as inline inside ",(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset")),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Fieldset } from '../'\nimport { FieldText } from '../../Form'\n\nexport default function Inline() {\n  return (\n    <Fieldset legend=\"This is the Legend\">\n      <FieldText inline label=\"First Label\" />\n      <FieldText inline label=\"Second Label\" />\n    </Fieldset>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"hidelabel-and-fieldshidelabel"},"hideLabel and fieldsHideLabel"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"fieldsHideLabel")," visually hides all child ",(0,esm.kt)("inlineCode",{parentName:"p"},"Label"),"s inside a ",(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset"),", while preserving them in the DOM to improve accessibility."),(0,esm.kt)("p",null,"Additionally, each individual ",(0,esm.kt)("inlineCode",{parentName:"p"},"Field")," accepts a ",(0,esm.kt)("inlineCode",{parentName:"p"},"hideLabel")," prop to hide that single label, or override the containing ",(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset")," label settings."),(0,esm.kt)(Editor.Editor,{code:'/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from \'react\'\nimport { Fieldset } from \'../\'\nimport { FieldText } from \'../../Form\'\n\nexport default function Inline() {\n  return (\n    <>\n      <Fieldset fieldsHideLabel legend="Group 1">\n        <FieldText label="First Label" />\n        <FieldText label="Second Label" />\n        Override the `fieldsHideLabel` prop in the parent:\n        <FieldText label="Third Label" hideLabel={false} />\n      </Fieldset>\n      <Fieldset legend="Group 2">\n        <FieldText label="First Label" hideLabel />\n        <FieldText label="Second Label" />\n        <FieldText label="Third Label" />\n      </Fieldset>\n    </>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"accordion"},"Accordion"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset")," offers an accordion mode via the ",(0,esm.kt)("inlineCode",{parentName:"p"},"accordion")," prop."),(0,esm.kt)("p",null,"In accordion mode, the ",(0,esm.kt)("inlineCode",{parentName:"p"},"legend")," acts as a disclosure and clicking on it will show (or hide) the ",(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset"),"'s ",(0,esm.kt)("inlineCode",{parentName:"p"},"children"),"."),(0,esm.kt)(Editor.Editor,{code:'/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from \'react\'\nimport { Fieldset } from \'../\'\nimport { FieldCheckbox } from \'../../Form\'\n\nexport default function Accordion() {\n  return (\n    <Fieldset legend="This is the Legend" accordion>\n      <FieldCheckbox name="box1" label="you can click here" />\n      <FieldCheckbox name="box2" label="here too" />\n      <FieldCheckbox name="box3" label="also here" />\n    </Fieldset>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Note:")," Using accordion mode without passing a value to ",(0,esm.kt)("inlineCode",{parentName:"p"},"legend")," will throw a console warning and will result in a regular ",(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset"),"."),(0,esm.kt)("h3",{id:"controlling-a-fieldset-accordion"},"Controlling a Fieldset Accordion"),(0,esm.kt)("p",null,"All ",(0,esm.kt)("inlineCode",{parentName:"p"},"Accordion")," props pertaining to open state control can be used on ",(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset"),". Simply pass said props to ",(0,esm.kt)("inlineCode",{parentName:"p"},"Fieldset")," while the ",(0,esm.kt)("inlineCode",{parentName:"p"},"accordion")," prop is true."),(0,esm.kt)("p",null,"Viable ",(0,esm.kt)("inlineCode",{parentName:"p"},"Accordion")," props include:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"defaultOpen"),(0,esm.kt)("li",{parentName:"ul"},"isOpen"),(0,esm.kt)("li",{parentName:"ul"},"toggleOpen"),(0,esm.kt)("li",{parentName:"ul"},"onOpen"),(0,esm.kt)("li",{parentName:"ul"},"onClose")),(0,esm.kt)("p",null,"For more details on the props listed above, visit the ",(0,esm.kt)("a",{parentName:"p",href:"../content/accordion"},"Accordion documentation"),"."),(0,esm.kt)(Editor.Editor,{code:'/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from \'react\'\nimport { Fieldset } from \'../\'\nimport { FieldCheckbox } from \'../../\'\n\nexport default function AccordionControlled() {\n  return (\n    <Fieldset\n      legend="This is the Legend"\n      accordion\n      defaultOpen\n      onOpen={() => alert(\'Opening the pod bay doors\')}\n      onClose={() => alert(\'Closing the pod bay doors\')}\n    >\n      <FieldCheckbox name="box1" label="you can click here" />\n      <FieldCheckbox name="box2" label="here too" />\n      <FieldCheckbox name="box3" label="also here" />\n    </Fieldset>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)(dist_esm.ArgsTable,{of:Fieldset.p,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Fieldset",component:Fieldset.p,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const Fieldset_stories=componentMeta,__namedExportsOrder=["__page"]}}]);