"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[1151],{"../components/src/Form/Fields/FieldRadioGroup/FieldRadioGroup.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),_looker_components__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),__webpack_require__("../components/src/index.ts"));function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const Meta=(name="Meta",function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",props)});var name;const layoutProps={};function MDXContent({components,...props}){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(Meta,{component:_looker_components__WEBPACK_IMPORTED_MODULE_3__.FieldRadioGroup,title:"Docs/Components/Fields/FieldRadioGroup",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",{id:"fieldradiogroup"},"FieldRadioGroup"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Groups of radios can be displayed with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"FieldRadioGroup")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,'There are two "inline" variations:'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"li"},"inline")," prop will put the group label and all the inputs in one line (wrapping the inputs as necessary)"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("li",{parentName:"ul"},"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"li"},"inputsInline")," prop will stack the group label on top but keep all the inputs inline")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",{parentName:"pre",className:"language-jsx"},';() => {\n  const options = [\n    {\n      label: \'Cheddar\',\n      value: \'cheddar\',\n    },\n    {\n      label: \'Gouda\',\n      value: \'gouda\',\n    },\n  ]\n\n  const optionsDisabled = [\n    {\n      label: \'Cheddar\',\n      value: \'cheddar\',\n    },\n    {\n      disabled: true,\n      label: \'Gouda\',\n      value: \'gouda\',\n    },\n  ]\n\n  return (\n    <Grid>\n      <FieldRadioGroup\n        description="default layout"\n        label="Cheeses"\n        name="group1"\n        options={options}\n      />\n      <FieldRadioGroup\n        description=" inline layout"\n        inline\n        label="Cheeses"\n        name="group1"\n        options={options}\n      />\n      <FieldRadioGroup\n        description="Validation message and required"\n        label="Cheeses default layout"\n        name="group1"\n        options={options}\n        required\n        validationMessage={{\n          message: \'Select at least 1 cheese\',\n          type: \'error\',\n        }}\n      />\n      <FieldRadioGroup\n        description="Validation message and required"\n        inputsInline\n        label="Cheeses inline inputs layout"\n        name="group1"\n        options={options}\n        required\n        validationMessage={{\n          message: \'Select at least 1 cheese\',\n          type: \'error\',\n        }}\n      />\n      <FieldRadioGroup\n        description="everything is disabled"\n        disabled\n        label="Cheeses default layout"\n        name="group1"\n        options={options}\n      />\n      <FieldRadioGroup\n        description="everything is disabled"\n        disabled\n        inline\n        name="group1"\n        label="Cheeses inline layout"\n        options={options}\n      />\n      <FieldRadioGroup\n        description="only one Radio is disabled"\n        label="Cheeses default layout"\n        name="group1"\n        options={optionsDisabled}\n      />\n      <FieldRadioGroup\n        description="only one Radio is disabled"\n        inline\n        name="group1"\n        label="Cheeses inline layout"\n        options={optionsDisabled}\n      />\n    </Grid>\n  )\n}\n')))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Components/Fields/FieldRadioGroup",component:_looker_components__WEBPACK_IMPORTED_MODULE_3__.FieldRadioGroup,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null)};const __WEBPACK_DEFAULT_EXPORT__=componentMeta,__namedExportsOrder=["__page"]}}]);