"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[4981],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Inputs/InputFilters/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},filters:{defaultValue:null,description:"",name:"filters",required:!0,type:{name:"FieldFilter[]"}},hideFilterIcon:{defaultValue:null,description:"",name:"hideFilterIcon",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:'Placeholder text for input when empty\n\nI18n recommended: content that is user visible should be treated for i18n\n\nDefaults to internationalized "Filter List"',name:"placeholder",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(filters: FieldFilter[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputFilters/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/InputFilters/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}try{CustomFilter.displayName="CustomFilter",CustomFilter.__docgenInfo={description:"",displayName:"CustomFilter",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},filters:{defaultValue:null,description:"",name:"filters",required:!0,type:{name:"FieldFilter[]"}},hideFilterIcon:{defaultValue:null,description:"",name:"hideFilterIcon",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:'Placeholder text for input when empty\n\nI18n recommended: content that is user visible should be treated for i18n\n\nDefaults to internationalized "Filter List"',name:"placeholder",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(filters: FieldFilter[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputFilters/stories/CustomFilter.tsx#CustomFilter"]={docgenInfo:CustomFilter.__docgenInfo,name:"CustomFilter",path:"../components/src/Form/Inputs/InputFilters/stories/CustomFilter.tsx#CustomFilter"})}catch(__react_docgen_typescript_loader_error){}try{FilterSelected.displayName="FilterSelected",FilterSelected.__docgenInfo={description:"",displayName:"FilterSelected",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},filters:{defaultValue:null,description:"",name:"filters",required:!0,type:{name:"FieldFilter[]"}},hideFilterIcon:{defaultValue:null,description:"",name:"hideFilterIcon",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:'Placeholder text for input when empty\n\nI18n recommended: content that is user visible should be treated for i18n\n\nDefaults to internationalized "Filter List"',name:"placeholder",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(filters: FieldFilter[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputFilters/stories/FilterSelected.tsx#FilterSelected"]={docgenInfo:FilterSelected.__docgenInfo,name:"FilterSelected",path:"../components/src/Form/Inputs/InputFilters/stories/FilterSelected.tsx#FilterSelected"})}catch(__react_docgen_typescript_loader_error){}try{HideFilterIcon.displayName="HideFilterIcon",HideFilterIcon.__docgenInfo={description:"",displayName:"HideFilterIcon",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},filters:{defaultValue:null,description:"",name:"filters",required:!0,type:{name:"FieldFilter[]"}},hideFilterIcon:{defaultValue:null,description:"",name:"hideFilterIcon",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:'Placeholder text for input when empty\n\nI18n recommended: content that is user visible should be treated for i18n\n\nDefaults to internationalized "Filter List"',name:"placeholder",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(filters: FieldFilter[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputFilters/stories/HideFilterIcon.tsx#HideFilterIcon"]={docgenInfo:HideFilterIcon.__docgenInfo,name:"HideFilterIcon",path:"../components/src/Form/Inputs/InputFilters/stories/HideFilterIcon.tsx#HideFilterIcon"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.InputFilters,title:"Docs/InputFilters",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"inputfilters"},"InputFilters"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"<InputFilters />")," component, displays a lits of filterable items that then have a second layer of filtering. Once the filter statement is set it can still be editable by clicking on the element itself."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from 'react'\nimport { InputFilters } from '../'\nimport type { InputFiltersProps } from '../'\n\nconst mockFilters = [\n  { field: 'role', options: ['admin', 'group-admin', 'user', 'pizza'] },\n  {\n    field: 'group',\n    label: 'Group',\n    options: ['Cheddar', 'Gouda', 'Swiss', 'Mozzarella'],\n  },\n  {\n    field: 'name',\n    label: 'Name',\n    options: ['Name 1', 'Name 2', 'Name 3'],\n  },\n  { field: 'status', options: ['Failed', 'In-Progress', 'Success'] },\n  {\n    field: 'buildAt',\n    label: 'Last Build Time',\n    options: ['01-22-20', '02-13-20', '05-28-20'],\n  },\n]\n\nexport default function Basic(props: InputFiltersProps) {\n  const {\n    filters: filtersProp = mockFilters,\n    onChange: _onChange,\n    ...restProps\n  } = props\n\n  const [controlledFilters, setControlledFilters] = useState(filtersProp)\n\n  return (\n    <InputFilters\n      onChange={setControlledFilters}\n      filters={controlledFilters}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"hide-filter-icon"},"Hide Filter Icon"),(0,esm.kt)("p",null,"You can render the filter input box without the filter icon by setting ",(0,esm.kt)("inlineCode",{parentName:"p"},"hideFilterIcon")," to ",(0,esm.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from 'react'\nimport { InputFilters } from '../'\nimport type { InputFiltersProps } from '../'\n\nconst mockFilters = [\n  { field: 'role', options: ['admin', 'group-admin', 'user', 'pizza'] },\n  {\n    field: 'group',\n    label: 'Group',\n    options: ['Cheddar', 'Gouda', 'Swiss', 'Mozzarella'],\n  },\n  {\n    field: 'name',\n    label: 'Name',\n    options: ['Name 1', 'Name 2', 'Name 3'],\n  },\n  { field: 'status', options: ['Failed', 'In-Progress', 'Success'] },\n  {\n    field: 'buildAt',\n    label: 'Last Build Time',\n    options: ['01-22-20', '02-13-20', '05-28-20'],\n  },\n]\n\nexport default function Basic(props: InputFiltersProps) {\n  const {\n    hideFilterIcon = true,\n    filters: filtersProp = mockFilters,\n    onChange: _onChange,\n    ...restProps\n  } = props\n\n  const [controlledFilters, setControlledFilters] = useState(filtersProp)\n\n  return (\n    <InputFilters\n      hideFilterIcon={hideFilterIcon}\n      onChange={setControlledFilters}\n      filters={controlledFilters}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"default-selected-filters"},"Default Selected Filters"),(0,esm.kt)("p",null,"Define the ",(0,esm.kt)("inlineCode",{parentName:"p"},"value")," an a single filter item to have it render selected by default."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from 'react'\nimport { InputFilters } from '..'\nimport type { InputFiltersProps } from '..'\n\nconst filterWithValue = {\n  field: 'status',\n  formatValue: (value: string) => value.toUpperCase(),\n  options: ['Failed', 'Success'],\n  value: 'Success',\n}\n\nexport default function FilterSelected({\n  filters: filtersProp = [filterWithValue],\n  ...args\n}: InputFiltersProps) {\n  const [controlledFilters, setControlledFilters] = useState(filtersProp)\n\n  return (\n    <InputFilters\n      {...args}\n      filters={controlledFilters}\n      onChange={setControlledFilters}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"custom-filters"},"Custom Filters"),(0,esm.kt)("p",null,'Filters are able to render custom components for inputting user generated content for the value. In the example below, try adding the filter labeled "important".'),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { FormEvent } from 'react'\nimport React, { useState } from 'react'\nimport { InputFilters } from '..'\nimport type { InputFiltersProps, FieldFilter } from '../'\nimport { InputText } from '../../'\nimport type { InputFilterEditorRenderProp } from '../types'\n\nconst EditorComponent: InputFilterEditorRenderProp = ({\n  closeEditor,\n  onChange,\n  value = '',\n}) => {\n  const handleChange = (event: FormEvent<HTMLInputElement>) => {\n    onChange(event.currentTarget.value)\n  }\n  return (\n    <InputText\n      data-autofocus=\"true\"\n      value={value}\n      onChange={handleChange}\n      onBlur={closeEditor}\n    />\n  )\n}\n\nconst customFilters: FieldFilter[] = [\n  {\n    editor: EditorComponent,\n    field: 'important',\n    label: 'Important',\n  },\n]\n\nexport default function CustomFilter({\n  filters: filtersProp = customFilters,\n  ...args\n}: InputFiltersProps) {\n  const [controlledFilters, setControlledFilters] = useState(filtersProp)\n\n  return (\n    <InputFilters\n      {...args}\n      filters={controlledFilters}\n      onChange={setControlledFilters}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)(dist_esm.ArgsTable,{of:src.InputFilters,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/InputFilters",component:src.InputFilters,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);