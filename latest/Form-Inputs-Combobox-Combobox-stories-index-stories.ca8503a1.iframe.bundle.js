"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[1889],{"../components/src/Form/Inputs/Combobox/Combobox/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Controlled:()=>Controlled,CustomIndicator:()=>CustomIndicator,ListLayout:()=>ListLayout,Loading:()=>LoadingState,NoIndicator:()=>NoIndicator,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),Combobox=__webpack_require__("../components/src/Form/Inputs/Combobox/Combobox/Combobox.tsx"),esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js"),ComboboxList=__webpack_require__("../components/src/Form/Inputs/Combobox/ComboboxList/ComboboxList.tsx"),ComboboxOption=__webpack_require__("../components/src/Form/Inputs/Combobox/ComboboxOption/ComboboxOption.tsx"),ComboboxInput=__webpack_require__("../components/src/Form/Inputs/Combobox/ComboboxInput/ComboboxInput.tsx");function Basic(props){const{width=300,...restProps}=props;return react.createElement(Combobox.h,(0,esm_extends.Z)({width:300},restProps),react.createElement(ComboboxInput.gA,null),react.createElement(ComboboxList.Gk,null,react.createElement(ComboboxOption.O2,{value:"Apples super long text to see what wrapping looks like"}),react.createElement(ComboboxOption.O2,{value:"Oranges"}),react.createElement(ComboboxOption.O2,{value:"Grapes"}),react.createElement(ComboboxOption.O2,{value:"Bananas"}),react.createElement(ComboboxOption.O2,{value:"Pineapples"}),react.createElement(ComboboxOption.O2,{value:"",label:"Create New Option",highlightText:!1})))}try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{value:{defaultValue:null,description:"The current option (controlled)",name:"value",required:!1,type:{name:"ComboboxOptionObject"}},defaultValue:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValue",required:!1,type:{name:"ComboboxOptionObject"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/Combobox/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/Combobox/Combobox/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}var Space=__webpack_require__("../components/src/Layout/Space/Space/Space.tsx"),Button=__webpack_require__("../components/src/Button/Button.tsx");function Controlled(props){const{width=300,value:valueProp={value:"Bananas"},onChange:_onChange,...restProps}=props,[option,setOption]=(0,react.useState)(valueProp);return react.createElement(Space.T,null,react.createElement(Button.z,{onClick:()=>{setOption({value:"Pineapples"})}},"Select Pineapples"),react.createElement(Combobox.h,(0,esm_extends.Z)({width,value:option,onChange:newOption=>{setOption(newOption)}},restProps),react.createElement(ComboboxInput.gA,null),react.createElement(ComboboxList.Gk,null,react.createElement(ComboboxOption.O2,{value:"Apples"}),react.createElement(ComboboxOption.O2,{value:"Oranges"}),react.createElement(ComboboxOption.O2,{value:"Grapes"}),react.createElement(ComboboxOption.O2,{value:"Bananas"}),react.createElement(ComboboxOption.O2,{value:"Pineapples"}),react.createElement(ComboboxOption.O2,{value:"Apples2"}),react.createElement(ComboboxOption.O2,{value:"Oranges2"}),react.createElement(ComboboxOption.O2,{value:"Grapes2"}),react.createElement(ComboboxOption.O2,{value:"Bananas2"}),react.createElement(ComboboxOption.O2,{value:"Pineapples2"}),react.createElement(ComboboxOption.O2,{value:"Apples3"}),react.createElement(ComboboxOption.O2,{value:"Oranges3"}),react.createElement(ComboboxOption.O2,{value:"Grapes3"}),react.createElement(ComboboxOption.O2,{value:"Bananas3"}),react.createElement(ComboboxOption.O2,{value:"Pineapples3"}),react.createElement(ComboboxOption.O2,{value:"Apples4"}),react.createElement(ComboboxOption.O2,{value:"Oranges4"}),react.createElement(ComboboxOption.O2,{value:"Grapes4"}),react.createElement(ComboboxOption.O2,{value:"Bananas4"}),react.createElement(ComboboxOption.O2,{value:"Pineapples4"}))))}try{Controlled.displayName="Controlled",Controlled.__docgenInfo={description:"",displayName:"Controlled",props:{value:{defaultValue:null,description:"The current option (controlled)",name:"value",required:!1,type:{name:"ComboboxOptionObject"}},defaultValue:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValue",required:!1,type:{name:"ComboboxOptionObject"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/Combobox/stories/Controlled.tsx#Controlled"]={docgenInfo:Controlled.__docgenInfo,name:"Controlled",path:"../components/src/Form/Inputs/Combobox/Combobox/stories/Controlled.tsx#Controlled"})}catch(__react_docgen_typescript_loader_error){}const Indicator=({isActive,isSelected})=>{let indicator;return indicator=isSelected?">>":isActive?">":"",react.createElement(react.Fragment,null,indicator)};function CustomIndicator(props){const{width=300,...restProps}=props;return react.createElement(Combobox.h,(0,esm_extends.Z)({width,value:{value:"Grapes"}},restProps),react.createElement(ComboboxInput.gA,{placeholder:"Custom indicator"}),react.createElement(ComboboxList.Gk,{indicator:Indicator,persistSelection:!0},react.createElement(ComboboxOption.O2,{value:"Apples"}),react.createElement(ComboboxOption.O2,{value:"Oranges"}),react.createElement(ComboboxOption.O2,{value:"Grapes"}),react.createElement(ComboboxOption.O2,{value:"Bananas"}),react.createElement(ComboboxOption.O2,{value:"Pineapples"})))}try{CustomIndicator.displayName="CustomIndicator",CustomIndicator.__docgenInfo={description:"",displayName:"CustomIndicator",props:{value:{defaultValue:null,description:"The current option (controlled)",name:"value",required:!1,type:{name:"ComboboxOptionObject"}},defaultValue:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValue",required:!1,type:{name:"ComboboxOptionObject"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/Combobox/stories/CustomIndicator.tsx#CustomIndicator"]={docgenInfo:CustomIndicator.__docgenInfo,name:"CustomIndicator",path:"../components/src/Form/Inputs/Combobox/Combobox/stories/CustomIndicator.tsx#CustomIndicator"})}catch(__react_docgen_typescript_loader_error){}var Label=__webpack_require__("../components/src/Form/Label/Label.tsx"),Form=__webpack_require__("../components/src/Form/index.ts"),Card=__webpack_require__("../components/src/Card/Card.tsx"),SpaceVertical=__webpack_require__("../components/src/Layout/Space/SpaceVertical/SpaceVertical.tsx");function ListLayout(){const[containerWidth,setContainerWidth]=(0,react.useState)(400);return react.createElement(SpaceVertical.s,{p:"u5"},react.createElement(Label._,null,"Move slider to adjust container width:"),react.createElement(Form.Slider,{min:100,max:1e3,step:10,value:containerWidth,onChange:e=>{setContainerWidth(parseInt(e.currentTarget.value,10))},width:400}),react.createElement(Card.Z,{p:20,width:containerWidth+40},react.createElement(SpaceVertical.s,null,react.createElement(Combobox.h,null,react.createElement(ComboboxInput.gA,{placeholder:"width=500"}),react.createElement(ComboboxList.Gk,{width:500},react.createElement(ComboboxOption.O2,{value:"Apples"}),react.createElement(ComboboxOption.O2,{value:"Oranges"}),react.createElement(ComboboxOption.O2,{value:"Grapes"}),react.createElement(ComboboxOption.O2,{value:"Bananas"}),react.createElement(ComboboxOption.O2,{value:"Pineapples"}))),react.createElement(Combobox.h,null,react.createElement(ComboboxInput.gA,{placeholder:"minWidth=420"}),react.createElement(ComboboxList.Gk,{minWidth:420},react.createElement(ComboboxOption.O2,{value:"Apples"}),react.createElement(ComboboxOption.O2,{value:"Oranges"}),react.createElement(ComboboxOption.O2,{value:"Grapes"}),react.createElement(ComboboxOption.O2,{value:"Bananas"}),react.createElement(ComboboxOption.O2,{value:"Pineapples"}))))))}function LoadingState(props){const{width=300,...restProps}=props,[loading,setLoading]=(0,react.useState)(!0);return react.createElement(Space.T,null,loading?react.createElement(Button.z,{onClick:()=>{setLoading(!1)}},"Stop Loading"):react.createElement(Button.z,{onClick:()=>{setLoading(!0)}},"Start Loading"),react.createElement(Combobox.h,(0,esm_extends.Z)({width},restProps,{value:loading?{value:""}:void 0}),react.createElement(ComboboxInput.gA,null),react.createElement(ComboboxList.Gk,null,loading?react.createElement(ComboboxOption.O2,{value:"Loading..."}):react.createElement(react.Fragment,null,react.createElement(ComboboxOption.O2,{value:"Apples"}),react.createElement(ComboboxOption.O2,{value:"Oranges"})))))}try{Loading.displayName="Loading",Loading.__docgenInfo={description:"",displayName:"Loading",props:{value:{defaultValue:null,description:"The current option (controlled)",name:"value",required:!1,type:{name:"ComboboxOptionObject"}},defaultValue:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValue",required:!1,type:{name:"ComboboxOptionObject"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/Combobox/stories/Loading.tsx#Loading"]={docgenInfo:Loading.__docgenInfo,name:"Loading",path:"../components/src/Form/Inputs/Combobox/Combobox/stories/Loading.tsx#Loading"})}catch(__react_docgen_typescript_loader_error){}function NoIndicator(props){const{width=300,...restProps}=props;return react.createElement(Combobox.h,(0,esm_extends.Z)({width},restProps),react.createElement(ComboboxInput.gA,{placeholder:"indicator={false}"}),react.createElement(ComboboxList.Gk,{indicator:!1,persistSelection:!0},react.createElement(ComboboxOption.O2,{value:"Apples"}),react.createElement(ComboboxOption.O2,{value:"Oranges"}),react.createElement(ComboboxOption.O2,{value:"Grapes"}),react.createElement(ComboboxOption.O2,{value:"Bananas"}),react.createElement(ComboboxOption.O2,{value:"Pineapples"}),react.createElement(ComboboxOption.O2,{value:"",label:"Create New Option",highlightText:!1})))}try{NoIndicator.displayName="NoIndicator",NoIndicator.__docgenInfo={description:"",displayName:"NoIndicator",props:{value:{defaultValue:null,description:"The current option (controlled)",name:"value",required:!1,type:{name:"ComboboxOptionObject"}},defaultValue:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValue",required:!1,type:{name:"ComboboxOptionObject"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/Combobox/stories/NoIndicator.tsx#NoIndicator"]={docgenInfo:NoIndicator.__docgenInfo,name:"NoIndicator",path:"../components/src/Form/Inputs/Combobox/Combobox/stories/NoIndicator.tsx#NoIndicator"})}catch(__react_docgen_typescript_loader_error){}const index_stories={argTypes:defaultArgTypes.W,component:Combobox.h,parameters:{storyshots:{disable:!0}},title:"Stories/Combobox"},__namedExportsOrder=["Basic","Controlled","CustomIndicator","ListLayout","Loading","NoIndicator"];try{indexstories.displayName="indexstories",indexstories.__docgenInfo={description:"",displayName:"indexstories",props:{value:{defaultValue:null,description:"The current option (controlled)",name:"value",required:!1,type:{name:"ComboboxOptionObject"}},defaultValue:{defaultValue:null,description:"The initial option (uncontrolled)",name:"defaultValue",required:!1,type:{name:"ComboboxOptionObject"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Called when an option is selected (not when user types – use ComboboxInput.onChange for that)",name:"onChange",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Combobox/Combobox/stories/index.stories.tsx#indexstories"]={docgenInfo:indexstories.__docgenInfo,name:"indexstories",path:"../components/src/Form/Inputs/Combobox/Combobox/stories/index.stories.tsx#indexstories"})}catch(__react_docgen_typescript_loader_error){}},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);