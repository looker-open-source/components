"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[6851],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../filter-components/src/DashboardFilter/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),DashboardFilter=__webpack_require__("../filter-components/src/DashboardFilter/DashboardFilter.tsx"),ImportMessage=__webpack_require__("./src/ImportMessage.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{expression:{defaultValue:null,description:"The current value of the filter.\nSee {@link https://docs.looker.com/reference/filter-expressions Looker Filter Expressions}.",name:"expression",required:!1,type:{name:"string"}},filter:{defaultValue:{value:"{\n    field: { is_numeric: true },\n    id: '1',\n    name: 'Cost',\n    type: 'field_filter',\n    allow_multiple_values: true,\n  }"},description:"A dashboard filter as defined in @looker/sdk",name:"filter",required:!1,type:{name:"IDashboardFilter"}},onChange:{defaultValue:null,description:"Called when the filter expression is changed",name:"onChange",required:!0,type:{name:"(expression: string) => void"}},sdk:{defaultValue:null,description:"An initialized Looker SDK instance",name:"sdk",required:!1,type:{name:"IAPIMethods"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../filter-components/src/DashboardFilter/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../filter-components/src/DashboardFilter/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:DashboardFilter.a,title:"Filters/Docs/DashboardFilter",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"dashboardfilter"},"DashboardFilter"),(0,esm.kt)(ImportMessage.ImportMessage,{packageName:"filter-components",mdxType:"ImportMessage"},"DashboardFilter"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"DashboardFilter")," renders a dashboard filter as returned by the Looker API."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Note:")," for more direct rendering control, see the ",(0,esm.kt)("a",{parentName:"p",href:"filter"},(0,esm.kt)("inlineCode",{parentName:"a"},"Filter"))," component."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { DashboardFilter } from '../DashboardFilter'\nimport type { DashboardFilterProps } from '../DashboardFilter'\n\nexport default function Basic({\n  filter = {\n    field: { is_numeric: true },\n    id: '1',\n    name: 'Cost',\n    type: 'field_filter',\n    allow_multiple_values: true,\n  },\n  ...props\n}: DashboardFilterProps) {\n  return <DashboardFilter filter={filter} {...props} />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"expression--onchange"},"expression & onChange"),(0,esm.kt)("p",null,"Use ",(0,esm.kt)("inlineCode",{parentName:"p"},"onChange")," to get updates to the ",(0,esm.kt)("inlineCode",{parentName:"p"},"expression"),"."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from 'react'\nimport { Paragraph, SpaceVertical } from '@looker/components'\nimport { DashboardFilter } from '../DashboardFilter'\n\nexport default function ExpressionOnChange() {\n  const [expression, setExpression] = useState('[0,100]')\n  return (\n    <SpaceVertical>\n      <DashboardFilter\n        filter={{\n          field: { is_numeric: true },\n          id: '1',\n          name: 'Age',\n          type: 'field_filter',\n        }}\n        expression={expression}\n        onChange={setExpression}\n      />\n      <Paragraph>\n        <strong>Current filter expression:</strong> {expression}\n      </Paragraph>\n    </SpaceVertical>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"suggestions"},"Suggestions"),(0,esm.kt)("p",null,"When the filter is on a field where the ",(0,esm.kt)("inlineCode",{parentName:"p"},"suggestable")," property is true,\nthe supplied ",(0,esm.kt)("inlineCode",{parentName:"p"},"sdk")," instance will be used to fetch the suggested values."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from 'react'\nimport { DashboardFilter } from '../DashboardFilter'\n\nexport default function Suggestions() {\n  const [expression, setExpression] = useState('')\n  return (\n    <DashboardFilter\n      filter={{\n        field: { suggestable: true },\n        name: 'Status',\n        type: 'field_filter',\n        ui_config: { type: 'button_group' },\n        allow_multiple_values: true,\n      }}\n      sdk={\n        {\n          // Mock sdk instance used to fetch suggested values\n          ok: (value: any) => value,\n          get: () =>\n            Promise.resolve({\n              suggestions: ['complete', 'pending', 'cancelled'],\n            }),\n        } as any\n      }\n      expression={expression}\n      onChange={setExpression}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"required"},"Required"),(0,esm.kt)("p",null,"When ",(0,esm.kt)("inlineCode",{parentName:"p"},"required")," is true an error message will render below the filter when the expression is empty."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from 'react'\nimport { DashboardFilter } from '../DashboardFilter'\n\nexport default function Required() {\n  const [expression, setExpression] = useState('')\n  return (\n    <DashboardFilter\n      filter={{\n        field: { is_numeric: true },\n        id: '1',\n        name: 'Age',\n        required: true,\n        type: 'field_filter',\n      }}\n      expression={expression}\n      onChange={setExpression}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:DashboardFilter.a,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Filters/Docs/DashboardFilter",component:DashboardFilter.a,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);