"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[4866],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Card/stories/CardContent/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),CardContent=__webpack_require__("../components/src/Card/CardContent.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:CardContent.a,title:"Docs/CardContent",mdxType:"Meta"}),(0,esm.kt)("h2",{id:"cardcontent"},"CardContent"),(0,esm.kt)("p",null,"Using the ",(0,esm.kt)("inlineCode",{parentName:"p"},"CardContent")," component quickly gives your content consistent spacing inside your ",(0,esm.kt)("inlineCode",{parentName:"p"},"Card"),". You can then use other components to layout your ",(0,esm.kt)("inlineCode",{parentName:"p"},"Card"),"."),(0,esm.kt)(Editor.Editor,{code:'/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from \'react\'\nimport { Card } from \'../../Card\'\nimport { CardContent } from \'../../CardContent\'\nimport { Paragraph, Heading } from \'../../../Text\'\n\nexport default () => {\n  return (\n    <Card raised>\n      <CardContent>\n        <Heading fontSize="xxxlarge">ðŸŽ‰ Looker Release Notes ðŸŽ‰</Heading>\n        <Heading as="h4" fontSize="small">\n          Read all about our latest features\n        </Heading>\n        <Paragraph fontSize="xsmall" color="text1">\n          Last updated 3 days ago\n        </Paragraph>\n      </CardContent>\n    </Card>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:CardContent.a,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/CardContent",component:CardContent.a,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);