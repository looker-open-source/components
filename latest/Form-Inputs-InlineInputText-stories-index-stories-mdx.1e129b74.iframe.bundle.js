"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[7494],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Inputs/InlineInputText/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.InlineInputText,title:"Docs/InlineInputText",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"inlineinputtext"},"InlineInputText"),(0,esm.kt)("p",null,"An input styled as text, with an underline and hover styles to indicate it is editable."),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"InlineInputText")," implements ",(0,esm.kt)("inlineCode",{parentName:"p"},"InputText")," internally â€“ see ",(0,esm.kt)("a",{parentName:"p",href:"?path=/docs/docs-inputtext--docs"},"that component's documentation")," for more information."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { Space } from '../../../../Layout'\nimport { Heading, Paragraph } from '../../../../Text'\nimport { InlineInputText } from '../InlineInputText'\n\nexport default function HeadingParagraph() {\n  return (\n    <Space around>\n      <Heading>\n        <InlineInputText value=\"Type here...\" />\n      </Heading>\n      <Paragraph color=\"text1\">\n        <InlineInputText placeholder=\"Type here...\" />\n      </Paragraph>\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"simple"},"Simple"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"simple")," prop to remove the underline except on hover and focus."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { InlineInputText } from '../InlineInputText'\n\nexport default function Simple() {\n  return <InlineInputText simple value=\"Some text here\" />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"disabled"},"Disabled"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"disabled")," prop to make the input uneditable and greyed out."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { InlineInputText } from '../InlineInputText'\n\nexport default function Disabled() {\n  return <InlineInputText disabled value=\"You can't change me.\" />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"readonly"},"ReadOnly"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"readOnly")," prop to make the input uneditable and have no underline."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { InlineInputText } from '../InlineInputText'\n\nexport default function ReadOnly() {\n  return <InlineInputText readOnly value=\"You can't change me.\" />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.InlineInputText,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/InlineInputText",component:src.InlineInputText,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);