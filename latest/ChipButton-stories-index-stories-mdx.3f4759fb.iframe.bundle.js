"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[3439],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/ChipButton/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),ChipButton=__webpack_require__("../components/src/ChipButton/ChipButton.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:ChipButton.m,title:"Docs/ChipButton",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"chipbutton"},"ChipButton"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"ChipButton")," component is a compact button element."),(0,esm.kt)("h2",{id:"basic"},"Basic"),(0,esm.kt)("p",null,"It has some basic functionality"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { ChipButton } from '../..'\n\nexport default function Basic() {\n  return <ChipButton>Basic</ChipButton>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"deletable"},"Deletable"),(0,esm.kt)("p",null,"It can have ",(0,esm.kt)("inlineCode",{parentName:"p"},"onDelete")," available"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { ChipButton } from '../..'\n\nexport default function Deletable() {\n  return <ChipButton onDelete={() => alert('Deletable')}>Deletable</ChipButton>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"disabled"},"Disabled"),(0,esm.kt)("p",null,"It can be disabled."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { ChipButton } from '../..'\n\nexport default function Disabled() {\n  return <ChipButton disabled={true}>Disabled</ChipButton>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"maxwidth"},"MaxWidth"),(0,esm.kt)("p",null,"The width of the ",(0,esm.kt)("inlineCode",{parentName:"p"},"ChipButton")," will accomodate its contents, by default. Setting a ",(0,esm.kt)("inlineCode",{parentName:"p"},"maxWidth")," will cause any overflow text to be truncated with ellipses."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { ChipButton, Space } from '../..'\n\nexport default function MaxWidth() {\n  return (\n    <Space gap=\"u1\">\n      <ChipButton maxWidth={150}>short</ChipButton>\n      <ChipButton maxWidth={150}>\n        Very long text inside the chip will be truncated\n      </ChipButton>\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"prefix"},"Prefix"),(0,esm.kt)("p",null,"Optional string parameter that will be added before a ",(0,esm.kt)("inlineCode",{parentName:"p"},"ChipButton"),"'s contents and separated by a colon."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { ChipButton } from '../..'\n\nexport default function Prefix() {\n  return <ChipButton prefix=\"role\">admin</ChipButton>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:ChipButton.m,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/ChipButton",component:ChipButton.m,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);