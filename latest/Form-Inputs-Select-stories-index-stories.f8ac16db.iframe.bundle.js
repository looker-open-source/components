"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[6284],{"../components/src/Form/Inputs/Select/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoResize:()=>AutoResize,Basic:()=>Basic,Description:()=>Description,Detail:()=>Detail,Disabled:()=>Disabled,Error:()=>Error,Filtering:()=>Filtering,Groups:()=>Groups,ListLayout:()=>ListLayout,Loading:()=>Loading,Placeholder:()=>Placeholder,Preface:()=>Preface,ScrollIntoView:()=>ScrollIntoView,ShowCreate:()=>ShowCreate,Windowing:()=>Windowing,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),Select=__webpack_require__("../components/src/Form/Inputs/Select/Select.tsx"),esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js");function Basic(props){return react.createElement(Select.P,(0,esm_extends.Z)({},props,{options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"}]}))}try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{autoResize:{defaultValue:null,description:"Allows the select width to resize with the current value or placeholder\nContainer will default to `display: inline-flex` and container & list will default to `width: auto`",name:"autoResize",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Value of the current selected option (controlled)",name:"value",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Value of the initial option",name:"defaultValue",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Handle an option being selected",name:"onChange",required:!1,type:{name:"((value: string) => void)"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Options may be flat or grouped, label is optional â€“ without it the value is used",name:"options",required:!1,type:{name:"SelectOptionProps[]"}},isClearable:{defaultValue:null,description:"The user can clear the current value by clicking an x icon button",name:"isClearable",required:!1,type:{name:"boolean"}},onFilter:{defaultValue:null,description:"Handle when the user types in the field,\nor the menu opens with a pre-populated value",name:"onFilter",required:!1,type:{name:"((term: string) => void)"}},listLayout:{defaultValue:null,description:"Control the dimensions of the list\n(use this to untether the list width from the input width)",name:"listLayout",required:!1,type:{name:"LayoutProps<Required<Theme<TLengthStyledSystem>>>"}},windowing:{defaultValue:null,description:"Render only the options visible in the scroll window\ndefaults to false for <100 options, true for >=100 options",name:"windowing",required:!1,type:{name:"boolean"}},isFilterable:{defaultValue:null,description:"The user can type in the input (default false to mimic traditional select tag)",name:"isFilterable",required:!1,type:{name:"boolean"}},noOptionsLabel:{defaultValue:null,description:"Text to show when there are no available options",name:"noOptionsLabel",required:!1,type:{name:"string"}},showCreate:{defaultValue:null,description:"Add an on-the-fly option mirroring the typed text (use when isFilterable = true)\nWhen `true`, notInOptions is used to show/hide and can be included in a custom function",name:"showCreate",required:!1,type:{name:"boolean"}},formatCreateLabel:{defaultValue:null,description:"Format the label of the on-the-fly create option (use with canCreate)",name:"formatCreateLabel",required:!1,type:{name:"((inputText: string) => ReactNode)"}},isLoading:{defaultValue:{value:"false"},description:"Render a spinner in the list instead of any options",name:"isLoading",required:!1,type:{name:"boolean"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},noErrorIcon:{defaultValue:null,description:"Don't show the error icon when validationType is 'error'",name:"noErrorIcon",required:!1,type:{name:"boolean"}},indicator:{defaultValue:null,description:"Customize the area to the left of the label, which by default\nrenders a check mark for the selected option or a spacer\nUse a ReactNode, function component or render-prop-style function, or false to remove",name:"indicator",required:!1,type:{name:"ReactNode | ComboboxOptionIndicatorFunction"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Select/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/Select/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function Placeholder(){return react.createElement(Select.P,{placeholder:"Select your cheese of choice...",options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"}]})}function Description(){return react.createElement(Select.P,{maxWidth:400,options:[{description:"Popular in the US",label:"Cheddar",value:"cheddar"},{description:"Dutch sheeps milk",label:"Gouda",value:"gouda"},{description:"Full of holes",label:"Swiss",value:"swiss"}]})}function Detail(){return react.createElement(Select.P,{maxWidth:400,placeholder:"Select food",options:[{detail:"Cheese",value:"Gouda"},{detail:"Fruit",value:"Apple"}]})}function Preface(){return react.createElement(Select.P,{maxWidth:400,placeholder:"Select a field",options:[{description:"Cost to stock - not the price the customer paid",label:"Cost",preface:"Inventory items",value:"inventory_items.cost"},{label:"Count",preface:"Order Items",value:"order_items.count"},{description:"What the customer actually paid",label:"Sale Price",preface:"Order Items",value:"order_items.sale_price"},{description:"Base retail price",label:"Retail Price",preface:"Inventory Items",value:"inventory_items.retail_price"},{label:"Count",preface:"Inventory Items",value:"inventory_items.count"}]})}function Disabled(){return react.createElement(Select.P,{disabled:!0,options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"}]})}function Error(){return react.createElement(Select.P,{options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"}],validationType:"error"})}function Loading(){return react.createElement(Select.P,{maxWidth:400,placeholder:"Loading options",isLoading:!0})}function Filtering(){const[value,setValue]=(0,react.useState)(),[searchTerm,setSearchTerm]=(0,react.useState)("");const newOptions=(0,react.useMemo)((()=>{const options=[{label:"Apples",value:"1"},{label:"Bananas",value:"2"},{label:"Oranges",value:"3"},{label:"Pineapples",value:"4"},{label:"Kiwis",value:"5"}];return""===searchTerm?options:options.filter((option=>option.label.toLowerCase().indexOf(searchTerm.toLowerCase())>-1))}),[searchTerm]);return react.createElement(Select.P,{maxWidth:400,options:newOptions,"aria-label":"Fruits",placeholder:"Controlled, searchable, clearable",isClearable:!0,isFilterable:!0,value,onChange:function handleChange(value){setValue(value)},onFilter:function handleFilter(term){setSearchTerm(term)}})}function ShowCreate(){const[value,setValue]=(0,react.useState)(),[searchTerm,setSearchTerm]=(0,react.useState)(""),newOptions=(0,react.useMemo)((()=>{const options=[{value:"Apples"},{value:"Bananas"},{value:"Oranges"},{value:"Pineapples"},{value:"Kiwis"}];return""===searchTerm?options:options.filter((option=>option.value.toLowerCase().indexOf(searchTerm.toLowerCase())>-1))}),[searchTerm]);return react.createElement(Select.P,{maxWidth:400,options:newOptions,"aria-label":"Fruits",placeholder:"Controlled, searchable, creatable",isFilterable:!0,value,onChange:setValue,onFilter:setSearchTerm,showCreate:!0,formatCreateLabel:function formatCreateLabel(inputValue){return`Add new fruit: ${inputValue}`}})}function Groups(){return react.createElement(Select.P,{maxWidth:400,options:[{label:"CHEESES",options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"}]},{label:"FRUITS",options:[{label:"Grapes",value:"grape"},{label:"Apples",value:"apple"},{label:"Strawberries",value:"strawberries"}]},{options:[{label:"Pizza",value:"pizza"},{label:"Hamburgers",value:"hamburgers"}]}]})}function ScrollIntoView(){return react.createElement(Select.P,{maxWidth:400,placeholder:"Select your cheese of choice...",options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"},{label:"String",value:"string"},{label:"Parmigiano Reggiano",value:"parmesan"},{label:"Roquefort",value:"roquefort"},{label:"Brie",value:"brie"},{label:"Gruyere",value:"gruyere"},{label:"Feta",value:"feta"},{label:"Mozzarella",value:"mozzarella"},{label:"Manchego",value:"manchego"},{label:"Gorgonzola",value:"gorgonzola"},{label:"Epoisses",value:"epoisses"},{label:"Monterey Jack",value:"monterey-jack"},{label:"Muenster",value:"muenster"},{label:"Provolone",value:"provolone"},{label:"Blue",value:"blue"},{label:"Camembert",value:"camembert"},{label:"Havarti",value:"havarti"},{label:"Ricotta",value:"ricotta"},{label:"Mascarpone",scrollIntoView:!0,value:"mascarpone"}]})}function Windowing(){const options1k=Array.from(Array(1e3),((_,index)=>({value:`${index}`})));return react.createElement(Select.P,{maxWidth:400,placeholder:"So many options...",options:options1k})}var Space=__webpack_require__("../components/src/Layout/Space/Space/Space.tsx");function ListLayout(){return react.createElement(Space.T,null,react.createElement(Select.P,{maxWidth:400,listLayout:{width:"auto"},placeholder:"Accommodate wide options",options:[{label:"Short label",value:"short"},{label:"Incredibly long label that causes the list to be wider than the input",value:"long"}]}),react.createElement(Select.P,{maxWidth:400,listLayout:{maxHeight:300,maxWidth:700,width:"90vw"},options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"},{label:"String",value:"string"},{label:"Parmigiano Reggiano",value:"parmesan"},{label:"Roquefort",value:"roquefort"},{label:"Brie",value:"brie"},{label:"Gruyere",value:"gruyere"},{label:"Feta",value:"feta"},{label:"Mozzarella",value:"mozzarella"},{label:"Manchego",value:"manchego"},{label:"Gorgonzola",value:"gorgonzola"},{label:"Epoisses",value:"epoisses"},{label:"Monterey Jack",value:"monterey-jack"},{label:"Muenster",value:"muenster"},{label:"Provolone",value:"provolone"},{label:"Blue",value:"blue"},{label:"Camembert",value:"camembert"},{label:"Havarti",value:"havarti"},{label:"Ricotta",value:"ricotta"},{label:"Mascarpone",value:"mascarpone"}]}))}function AutoResize(){return react.createElement(Select.P,{autoResize:!0,placeholder:"Width adjusts to current value",options:[{label:"Short label",value:"short"},{label:"Very long label that widens the input considerably",value:"long"}]})}const index_stories={argTypes:defaultArgTypes.W,component:Select.P,parameters:{storyshots:{disable:!0}},title:"Stories/Select"},__namedExportsOrder=["Basic","Placeholder","Description","Detail","Preface","Disabled","Error","Loading","Filtering","ShowCreate","Groups","ScrollIntoView","Windowing","ListLayout","AutoResize"];try{indexstories.displayName="indexstories",indexstories.__docgenInfo={description:"",displayName:"indexstories",props:{autoResize:{defaultValue:null,description:"Allows the select width to resize with the current value or placeholder\nContainer will default to `display: inline-flex` and container & list will default to `width: auto`",name:"autoResize",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Value of the current selected option (controlled)",name:"value",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Value of the initial option",name:"defaultValue",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Handle an option being selected",name:"onChange",required:!1,type:{name:"((value: string) => void)"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Options may be flat or grouped, label is optional â€“ without it the value is used",name:"options",required:!1,type:{name:"SelectOptionProps[]"}},isClearable:{defaultValue:null,description:"The user can clear the current value by clicking an x icon button",name:"isClearable",required:!1,type:{name:"boolean"}},onFilter:{defaultValue:null,description:"Handle when the user types in the field,\nor the menu opens with a pre-populated value",name:"onFilter",required:!1,type:{name:"((term: string) => void)"}},listLayout:{defaultValue:null,description:"Control the dimensions of the list\n(use this to untether the list width from the input width)",name:"listLayout",required:!1,type:{name:"LayoutProps<Required<Theme<TLengthStyledSystem>>>"}},windowing:{defaultValue:null,description:"Render only the options visible in the scroll window\ndefaults to false for <100 options, true for >=100 options",name:"windowing",required:!1,type:{name:"boolean"}},isFilterable:{defaultValue:null,description:"The user can type in the input (default false to mimic traditional select tag)",name:"isFilterable",required:!1,type:{name:"boolean"}},noOptionsLabel:{defaultValue:null,description:"Text to show when there are no available options",name:"noOptionsLabel",required:!1,type:{name:"string"}},showCreate:{defaultValue:null,description:"Add an on-the-fly option mirroring the typed text (use when isFilterable = true)\nWhen `true`, notInOptions is used to show/hide and can be included in a custom function",name:"showCreate",required:!1,type:{name:"boolean"}},formatCreateLabel:{defaultValue:null,description:"Format the label of the on-the-fly create option (use with canCreate)",name:"formatCreateLabel",required:!1,type:{name:"((inputText: string) => ReactNode)"}},isLoading:{defaultValue:{value:"false"},description:"Render a spinner in the list instead of any options",name:"isLoading",required:!1,type:{name:"boolean"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},noErrorIcon:{defaultValue:null,description:"Don't show the error icon when validationType is 'error'",name:"noErrorIcon",required:!1,type:{name:"boolean"}},indicator:{defaultValue:null,description:"Customize the area to the left of the label, which by default\nrenders a check mark for the selected option or a spacer\nUse a ReactNode, function component or render-prop-style function, or false to remove",name:"indicator",required:!1,type:{name:"ReactNode | ComboboxOptionIndicatorFunction"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Select/stories/index.stories.tsx#indexstories"]={docgenInfo:indexstories.__docgenInfo,name:"indexstories",path:"../components/src/Form/Inputs/Select/stories/index.stories.tsx#indexstories"})}catch(__react_docgen_typescript_loader_error){}},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);