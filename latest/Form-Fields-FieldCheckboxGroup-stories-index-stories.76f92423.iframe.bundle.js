"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[8854],{"../components/src/Form/Fields/FieldCheckboxGroup/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Disabled:()=>Disabled,DisabledOption:()=>DisabledOption,Inline:()=>Inline,Required:()=>Required,Validation:()=>Validation_Disabled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),FieldCheckboxGroup=__webpack_require__("../components/src/Form/Fields/FieldCheckboxGroup/FieldCheckboxGroup.tsx"),esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js");function Basic(props){const{options=[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"},{label:"Roquefort",value:"roquefort"}],...rest}=props;return react.createElement(FieldCheckboxGroup.D,(0,esm_extends.Z)({autoFocus:!0,defaultValue:["cheddar"],description:"Pick all your cheeses",label:"Cheeses",options},rest))}try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{inputsInline:{defaultValue:null,description:"",name:"inputsInline",required:!1,type:{name:"boolean"}},legend:{defaultValue:null,description:"Displayed above the children of Fieldset\nI18n recommended: content that is user visible should be treated for i18n",name:"legend",required:!1,type:{name:"ReactNode"}},wrap:{defaultValue:{value:"false"},description:"Allowed fields to wrap if they exceed the container width",name:"wrap",required:!1,type:{name:"boolean"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"Use this property (alongside toggleOpen) if you wish to use the component in a `controlled` manner.\nisOpen determines whether the Accordion is currently open or closed",name:"isOpen",required:!1,type:{name:"boolean"}},toggleOpen:{defaultValue:null,description:"Use this property (alongside isOpen) if you wish to use the component in a `controlled` manner.\ntoggleOpen is a function that should control the value / state of isOpen",name:"toggleOpen",required:!1,type:{name:"((isOpen: boolean) => void)"}},defaultOpen:{defaultValue:null,description:"Use this property if you wish to use the component in a `uncontrolled` manner and have it open when initially rendering.\nComponent will hold internal state and open and close on disclosure click",name:"defaultOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback that is triggered when closing the Accordion (i.e. when clicking on an open Accordion)",name:"onClose",required:!1,type:{name:"(() => void)"}},onOpen:{defaultValue:null,description:"Callback that is triggered when opening the Accordion (i.e. when clicking on a closed Accordion)",name:"onOpen",required:!1,type:{name:"(() => void)"}},gap:{defaultValue:{value:"medium"},description:"Amount of space between fields",name:"gap",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"none"'},{value:'"u4"'},{value:'"xxxsmall"'},{value:'"xxsmall"'},{value:'"xsmall"'},{value:'"medium"'},{value:'"large"'},{value:'"xlarge"'},{value:'"xxlarge"'},{value:'"xxxlarge"'},{value:'"xxxxlarge"'},{value:'"u05"'},{value:'"u1"'},{value:'"u2"'},{value:'"u3"'},{value:'"u5"'},{value:'"u6"'},{value:'"u7"'},{value:'"u8"'},{value:'"u9"'},{value:'"u10"'},{value:'"u11"'},{value:'"u12"'},{value:'"u13"'},{value:'"u14"'},{value:'"u15"'},{value:'"u16"'}]}},accordion:{defaultValue:{value:"false"},description:"If true, the Fieldset will be wrapped by an Accordion structure (i.e. a collapsible section)",name:"accordion",required:!1,type:{name:"boolean"}},fieldsHideLabel:{defaultValue:null,description:"",name:"fieldsHideLabel",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"CheckboxGroupOptionProps[]"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: string[]) => void)"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldCheckboxGroup/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Fields/FieldCheckboxGroup/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function Disabled(){return react.createElement(FieldCheckboxGroup.D,{autoFocus:!0,defaultValue:["cheddar"],description:"Pick all your cheeses",label:"Cheeses",options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"},{label:"Roquefort",value:"roquefort"}],disabled:!0})}function DisabledOption(){return react.createElement(FieldCheckboxGroup.D,{autoFocus:!0,defaultValue:["cheddar"],description:"Pick all your cheeses",label:"Cheeses",options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{disabled:!0,label:"Swiss",value:"swiss"},{label:"Roquefort",value:"roquefort"}]})}function Required(){return react.createElement(FieldCheckboxGroup.D,{autoFocus:!0,defaultValue:["cheddar"],description:"Pick all your cheeses",label:"Cheeses",options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"},{label:"Roquefort",value:"roquefort"}],required:!0})}function Inline(){return react.createElement(FieldCheckboxGroup.D,{autoFocus:!0,defaultValue:["cheddar"],description:"Pick all your cheeses",label:"Cheeses",options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"},{label:"Roquefort",value:"roquefort"}],inline:!0})}function Validation_Disabled(){return react.createElement(FieldCheckboxGroup.D,{autoFocus:!0,defaultValue:["cheddar"],description:"Pick all your cheeses",label:"Cheeses",options:[{label:"Cheddar",value:"cheddar"},{label:"Gouda",value:"gouda"},{label:"Swiss",value:"swiss"},{label:"Roquefort",value:"roquefort"}],validationMessage:{message:"Select at least 1 cheese",type:"error"}})}const index_stories={argTypes:defaultArgTypes.W,component:FieldCheckboxGroup.D,parameters:{storyshots:{disable:!0}},title:"Stories/FieldCheckboxGroup"},__namedExportsOrder=["Basic","Disabled","DisabledOption","Required","Inline","Validation"];try{indexstories.displayName="indexstories",indexstories.__docgenInfo={description:"",displayName:"indexstories",props:{inputsInline:{defaultValue:null,description:"",name:"inputsInline",required:!1,type:{name:"boolean"}},legend:{defaultValue:null,description:"Displayed above the children of Fieldset\nI18n recommended: content that is user visible should be treated for i18n",name:"legend",required:!1,type:{name:"ReactNode"}},wrap:{defaultValue:{value:"false"},description:"Allowed fields to wrap if they exceed the container width",name:"wrap",required:!1,type:{name:"boolean"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"Use this property (alongside toggleOpen) if you wish to use the component in a `controlled` manner.\nisOpen determines whether the Accordion is currently open or closed",name:"isOpen",required:!1,type:{name:"boolean"}},toggleOpen:{defaultValue:null,description:"Use this property (alongside isOpen) if you wish to use the component in a `controlled` manner.\ntoggleOpen is a function that should control the value / state of isOpen",name:"toggleOpen",required:!1,type:{name:"((isOpen: boolean) => void)"}},defaultOpen:{defaultValue:null,description:"Use this property if you wish to use the component in a `uncontrolled` manner and have it open when initially rendering.\nComponent will hold internal state and open and close on disclosure click",name:"defaultOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback that is triggered when closing the Accordion (i.e. when clicking on an open Accordion)",name:"onClose",required:!1,type:{name:"(() => void)"}},onOpen:{defaultValue:null,description:"Callback that is triggered when opening the Accordion (i.e. when clicking on a closed Accordion)",name:"onOpen",required:!1,type:{name:"(() => void)"}},gap:{defaultValue:{value:"medium"},description:"Amount of space between fields",name:"gap",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"none"'},{value:'"u4"'},{value:'"xxxsmall"'},{value:'"xxsmall"'},{value:'"xsmall"'},{value:'"medium"'},{value:'"large"'},{value:'"xlarge"'},{value:'"xxlarge"'},{value:'"xxxlarge"'},{value:'"xxxxlarge"'},{value:'"u05"'},{value:'"u1"'},{value:'"u2"'},{value:'"u3"'},{value:'"u5"'},{value:'"u6"'},{value:'"u7"'},{value:'"u8"'},{value:'"u9"'},{value:'"u10"'},{value:'"u11"'},{value:'"u12"'},{value:'"u13"'},{value:'"u14"'},{value:'"u15"'},{value:'"u16"'}]}},accordion:{defaultValue:{value:"false"},description:"If true, the Fieldset will be wrapped by an Accordion structure (i.e. a collapsible section)",name:"accordion",required:!1,type:{name:"boolean"}},fieldsHideLabel:{defaultValue:null,description:"",name:"fieldsHideLabel",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"CheckboxGroupOptionProps[]"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: string[]) => void)"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldCheckboxGroup/stories/index.stories.tsx#indexstories"]={docgenInfo:indexstories.__docgenInfo,name:"indexstories",path:"../components/src/Form/Fields/FieldCheckboxGroup/stories/index.stories.tsx#indexstories"})}catch(__react_docgen_typescript_loader_error){}},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);