"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[9615],{"../visualizations/src/Visualization/stories/Line.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultYAxisSingleMeasure:()=>DefaultYAxisSingleMeasure,Line:()=>Line,Pivot:()=>Pivot,PointStyleFilled:()=>PointStyleFilled,PointStyleNone:()=>PointStyleNone,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("../../node_modules/core-js/modules/esnext.async-iterator.map.js"),__webpack_require__("../../node_modules/core-js/modules/esnext.iterator.map.js"),__webpack_require__("../../node_modules/react/index.js")),_Visualization__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../visualizations/src/Visualization/Visualization.tsx"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../visualizations-adapters/src/utils/tabularResponse.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../visualizations-adapters/src/fixtures/mockSdkDataResponse.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../visualizations-adapters/src/utils/buildChartConfig.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../visualizations-adapters/src/fixtures/mockSdkConfigResponse.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../visualizations-adapters/src/fixtures/mockSdkFieldsResponse.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../visualizations-adapters/src/utils/buildPivotFields.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("../visualizations-adapters/src/fixtures/mockPivots.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("../visualizations-adapters/src/utils/tabularPivotResponse.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("../visualizations-adapters/src/fixtures/mockSdkPivotDataResponse.ts"),_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("../visualizations-adapters/src/fixtures/mockConfig.ts");const __WEBPACK_DEFAULT_EXPORT__={component:_Visualization__WEBPACK_IMPORTED_MODULE_3__.F,title:"Visualizations/Stories/Line"},Template=({config:configProp,...restProps})=>{const data=(0,_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_4__.B)([..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_5__.w]),config=(0,_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_6__.J)({config:{..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_7__.M,...configProp,type:"line"},data,fields:_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_8__.B});return react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Visualization__WEBPACK_IMPORTED_MODULE_3__.F,(0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__.Z)({config,data,fields:_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_8__.B,height:600,width:800},restProps))},Line=Template.bind({});Line.args={config:{series:[{visible:!0},{visible:!0}]}};const PointStyleFilled=Template.bind({});PointStyleFilled.args={config:{series:[{style:"filled"},{style:"filled"}]}};const PointStyleNone=Template.bind({});PointStyleNone.args={config:{series:[{style:"none"},{style:"none"}]}};const Pivot=()=>{const mockPivotFields=(0,_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_10__.r)({fields:{..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_8__.B},pivots:_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_11__.m}),mockPivotData=(0,_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_12__.V)({data:[..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_13__.l],fields:{..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_8__.B},pivots:_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_11__.m}),config=(0,_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_6__.J)({config:{..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_14__.nq,type:"area"},data:mockPivotData,fields:mockPivotFields});return react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Visualization__WEBPACK_IMPORTED_MODULE_3__.F,{config,data:mockPivotData,fields:mockPivotFields,height:600,width:800})};Pivot.parameters={storyshots:{disable:!0}};const DefaultYAxisSingleMeasure=()=>{const fields={..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_8__.B,measures:_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_8__.B.measures.slice(0,1)},data=(0,_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_4__.B)([..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_5__.w].map((datum=>{const{"orders.average_total_amount_of_order_usd":_ordersAverageEtc,...rest}=datum;return rest}))),config=(0,_looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_6__.J)({config:{..._looker_visualizations_adapters__WEBPACK_IMPORTED_MODULE_7__.M,y_axes:void 0,type:"line"},data,fields});return react__WEBPACK_IMPORTED_MODULE_2__.createElement(_Visualization__WEBPACK_IMPORTED_MODULE_3__.F,{config,data,fields,height:600,width:800})};Line.parameters={storySource:{source:"({\n  config: configProp,\n  ...restProps\n}) => {\n  const data = tabularResponse([...mockSdkDataResponse])\n\n  const config = buildChartConfig({\n    config: {\n      ...mockSdkConfigResponse,\n      ...configProp,\n      type: 'line',\n    },\n    data,\n    fields: mockSdkFieldsResponse as Fields,\n  })\n\n  return (\n    <Visualization\n      config={config}\n      data={data}\n      fields={mockSdkFieldsResponse as Fields}\n      height={600}\n      width={800}\n      {...restProps}\n    />\n  )\n}"},...Line.parameters},PointStyleFilled.parameters={storySource:{source:"({\n  config: configProp,\n  ...restProps\n}) => {\n  const data = tabularResponse([...mockSdkDataResponse])\n\n  const config = buildChartConfig({\n    config: {\n      ...mockSdkConfigResponse,\n      ...configProp,\n      type: 'line',\n    },\n    data,\n    fields: mockSdkFieldsResponse as Fields,\n  })\n\n  return (\n    <Visualization\n      config={config}\n      data={data}\n      fields={mockSdkFieldsResponse as Fields}\n      height={600}\n      width={800}\n      {...restProps}\n    />\n  )\n}"},...PointStyleFilled.parameters},PointStyleNone.parameters={storySource:{source:"({\n  config: configProp,\n  ...restProps\n}) => {\n  const data = tabularResponse([...mockSdkDataResponse])\n\n  const config = buildChartConfig({\n    config: {\n      ...mockSdkConfigResponse,\n      ...configProp,\n      type: 'line',\n    },\n    data,\n    fields: mockSdkFieldsResponse as Fields,\n  })\n\n  return (\n    <Visualization\n      config={config}\n      data={data}\n      fields={mockSdkFieldsResponse as Fields}\n      height={600}\n      width={800}\n      {...restProps}\n    />\n  )\n}"},...PointStyleNone.parameters},Pivot.parameters={storySource:{source:"() => {\n  const mockPivotFields = buildPivotFields({\n    fields: {\n      ...mockSdkFieldsResponse,\n    } as Fields,\n    pivots: mockPivots,\n  })\n\n  const mockPivotData = tabularPivotResponse({\n    data: [...mockSdkPivotDataResponse],\n    fields: {\n      ...mockSdkFieldsResponse,\n    } as Fields,\n    pivots: mockPivots,\n  })\n\n  const config = buildChartConfig({\n    config: { ...mockLineConfig, type: 'area' },\n    data: mockPivotData,\n    fields: mockPivotFields,\n  })\n\n  return (\n    <Visualization\n      config={config}\n      data={mockPivotData}\n      fields={mockPivotFields}\n      height={600}\n      width={800}\n    />\n  )\n}"},...Pivot.parameters},DefaultYAxisSingleMeasure.parameters={storySource:{source:"() => {\n  const fields = {\n    ...mockSdkFieldsResponse,\n    measures: mockSdkFieldsResponse.measures.slice(0, 1), // removes the average measure field\n  } as Fields\n\n  const data = tabularResponse(\n    [...mockSdkDataResponse].map(datum => {\n      const {\n        'orders.average_total_amount_of_order_usd': _ordersAverageEtc,\n        ...rest\n      } = datum\n      return rest\n    })\n  )\n\n  const config = buildChartConfig({\n    config: {\n      ...mockSdkConfigResponse,\n      y_axes: undefined,\n      type: 'line',\n    },\n    data,\n    fields,\n  })\n\n  return (\n    <Visualization\n      config={config}\n      data={data}\n      fields={fields}\n      height={600}\n      width={800}\n    />\n  )\n}"},...DefaultYAxisSingleMeasure.parameters};const __namedExportsOrder=["Line","PointStyleFilled","PointStyleNone","Pivot","DefaultYAxisSingleMeasure"]}}]);