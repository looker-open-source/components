"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[3652],{"../components/src/Form/Fields/FieldSelectMulti/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Description:()=>Description,Detail:()=>Detail,Disabled:()=>Disabled,FloatingLabel:()=>FloatingLabel,FreeInput:()=>FreeInput,Required:()=>Required,Validation:()=>Validation,Values:()=>Values,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),FieldSelectMulti=__webpack_require__("../components/src/Form/Fields/FieldSelectMulti/FieldSelectMulti.tsx"),esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js");function Basic(props){return react.createElement(FieldSelectMulti.F,(0,esm_extends.Z)({label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0},props))}try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:{value:"false"},description:"Should the list close after an option is selected",name:"closeOnSelect",required:!1,type:{name:"boolean"}},defaultValues:{defaultValue:null,description:"Value of the initial option",name:"defaultValues",required:!1,type:{name:"string[]"}},onChange:{defaultValue:null,description:"Handle an option being selected",name:"onChange",required:!1,type:{name:"((values?: string[]) => void)"}},values:{defaultValue:null,description:"Values of the current selected option (controlled)",name:"values",required:!1,type:{name:"string[]"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Options may be flat or grouped, label is optional â€“ without it the value is used",name:"options",required:!1,type:{name:"SelectOptionProps[]"}},windowing:{defaultValue:null,description:"Render only the options visible in the scroll window\ndefaults to false for <100 options, true for >=100 options",name:"windowing",required:!1,type:{name:"boolean"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},noErrorIcon:{defaultValue:null,description:"Don't show the error icon when validationType is 'error'",name:"noErrorIcon",required:!1,type:{name:"boolean"}},indicator:{defaultValue:null,description:"Customize the area to the left of the label, which by default\nrenders a check mark for the selected option or a spacer\nUse a ReactNode, function component or render-prop-style function, or false to remove",name:"indicator",required:!1,type:{name:"ReactNode | ComboboxOptionIndicatorFunction"}},isFilterable:{defaultValue:null,description:"The user can type in the input (default false to mimic traditional select tag)",name:"isFilterable",required:!1,type:{name:"boolean"}},onFilter:{defaultValue:null,description:"Handle when the user types in the field,\nor the menu opens with a pre-populated value",name:"onFilter",required:!1,type:{name:"((term: string) => void)"}},noOptionsLabel:{defaultValue:null,description:"Text to show when there are no available options",name:"noOptionsLabel",required:!1,type:{name:"string"}},listLayout:{defaultValue:null,description:"Control the dimensions of the list\n(use this to untether the list width from the input width)",name:"listLayout",required:!1,type:{name:"LayoutProps<Required<Theme<TLengthStyledSystem>>>"}},showCreate:{defaultValue:null,description:"Add an on-the-fly option mirroring the typed text (use when isFilterable = true)\nWhen `true`, notInOptions is used to show/hide and can be included in a custom function",name:"showCreate",required:!1,type:{name:"boolean"}},formatCreateLabel:{defaultValue:null,description:"Format the label of the on-the-fly create option (use with canCreate)",name:"formatCreateLabel",required:!1,type:{name:"((inputText: string) => ReactNode)"}},isLoading:{defaultValue:{value:"false"},description:"Render a spinner in the list instead of any options",name:"isLoading",required:!1,type:{name:"boolean"}},chipIconLabel:{defaultValue:{value:"Delete"},description:"customize the tooltip on the closing icon",name:"chipIconLabel",required:!1,type:{name:"string"}},clearIconLabel:{defaultValue:null,description:"customize the tooltip on the closing icon",name:"clearIconLabel",required:!1,type:{name:"string"}},freeInput:{defaultValue:{value:"false"},description:"Allows inputting of values (whether found in options or not) via typing or pasting\nUse validate, onValidationFail, and onDuplicate for validation on typed or pasted values",name:"freeInput",required:!1,type:{name:"boolean"}},removeOnBackspace:{defaultValue:{value:"true"},description:"Set to false to disable the removal of the last value on backspace key",name:"removeOnBackspace",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:"for checking each value before converting to a chip",name:"validate",required:!1,type:{name:"((value: string) => boolean)"}},formatInputValue:{defaultValue:null,description:"Callback to format each value entered, before validation.\nDefaults to `value.trim()`, set to `false` to avoid trimming whitespace.",name:"formatInputValue",required:!1,type:{name:"FormatInputValue"}},onValidationFail:{defaultValue:null,description:"callback when values fail validation",name:"onValidationFail",required:!1,type:{name:"((values: string[]) => void)"}},onDuplicate:{defaultValue:null,description:"callback when values are duplicates",name:"onDuplicate",required:!1,type:{name:"((values: string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldSelectMulti/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Fields/FieldSelectMulti/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function Description(){return react.createElement(FieldSelectMulti.F,{description:"this is the description",label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0})}function Detail(){return react.createElement(FieldSelectMulti.F,{detail:"detail...",label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0})}function Validation(){return react.createElement(FieldSelectMulti.F,{label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0,validationMessage:{message:"This is an error",type:"error"}})}function Disabled(){return react.createElement(FieldSelectMulti.F,{description:"disabled",label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0,disabled:!0})}function Required(){return react.createElement(FieldSelectMulti.F,{description:"required",label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0,required:!0})}function FloatingLabel(){return react.createElement(FieldSelectMulti.F,{label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0,externalLabel:!1})}function Values(){return react.createElement(FieldSelectMulti.F,{label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0,defaultValues:["Apples","Oranges"]})}function FreeInput(){return react.createElement(FieldSelectMulti.F,{description:"free input, write anything",label:"Label",options:[{label:"Grape",value:"grape"},{label:"Banana",value:"banana"},{label:"Apple",value:"apple"}],placeholder:"Search fruits",isFilterable:!0,freeInput:!0})}const index_stories={argTypes:defaultArgTypes.W,component:FieldSelectMulti.F,parameters:{storyshots:{disable:!0}},title:"Stories/FieldSelectMulti"},__namedExportsOrder=["Basic","Description","Detail","Validation","Disabled","Required","FloatingLabel","Values","FreeInput"];try{indexstories.displayName="indexstories",indexstories.__docgenInfo={description:"",displayName:"indexstories",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:{value:"false"},description:"Should the list close after an option is selected",name:"closeOnSelect",required:!1,type:{name:"boolean"}},defaultValues:{defaultValue:null,description:"Value of the initial option",name:"defaultValues",required:!1,type:{name:"string[]"}},onChange:{defaultValue:null,description:"Handle an option being selected",name:"onChange",required:!1,type:{name:"((values?: string[]) => void)"}},values:{defaultValue:null,description:"Values of the current selected option (controlled)",name:"values",required:!1,type:{name:"string[]"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Options may be flat or grouped, label is optional â€“ without it the value is used",name:"options",required:!1,type:{name:"SelectOptionProps[]"}},windowing:{defaultValue:null,description:"Render only the options visible in the scroll window\ndefaults to false for <100 options, true for >=100 options",name:"windowing",required:!1,type:{name:"boolean"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},noErrorIcon:{defaultValue:null,description:"Don't show the error icon when validationType is 'error'",name:"noErrorIcon",required:!1,type:{name:"boolean"}},indicator:{defaultValue:null,description:"Customize the area to the left of the label, which by default\nrenders a check mark for the selected option or a spacer\nUse a ReactNode, function component or render-prop-style function, or false to remove",name:"indicator",required:!1,type:{name:"ReactNode | ComboboxOptionIndicatorFunction"}},isFilterable:{defaultValue:null,description:"The user can type in the input (default false to mimic traditional select tag)",name:"isFilterable",required:!1,type:{name:"boolean"}},onFilter:{defaultValue:null,description:"Handle when the user types in the field,\nor the menu opens with a pre-populated value",name:"onFilter",required:!1,type:{name:"((term: string) => void)"}},noOptionsLabel:{defaultValue:null,description:"Text to show when there are no available options",name:"noOptionsLabel",required:!1,type:{name:"string"}},listLayout:{defaultValue:null,description:"Control the dimensions of the list\n(use this to untether the list width from the input width)",name:"listLayout",required:!1,type:{name:"LayoutProps<Required<Theme<TLengthStyledSystem>>>"}},showCreate:{defaultValue:null,description:"Add an on-the-fly option mirroring the typed text (use when isFilterable = true)\nWhen `true`, notInOptions is used to show/hide and can be included in a custom function",name:"showCreate",required:!1,type:{name:"boolean"}},formatCreateLabel:{defaultValue:null,description:"Format the label of the on-the-fly create option (use with canCreate)",name:"formatCreateLabel",required:!1,type:{name:"((inputText: string) => ReactNode)"}},isLoading:{defaultValue:{value:"false"},description:"Render a spinner in the list instead of any options",name:"isLoading",required:!1,type:{name:"boolean"}},chipIconLabel:{defaultValue:{value:"Delete"},description:"customize the tooltip on the closing icon",name:"chipIconLabel",required:!1,type:{name:"string"}},clearIconLabel:{defaultValue:null,description:"customize the tooltip on the closing icon",name:"clearIconLabel",required:!1,type:{name:"string"}},freeInput:{defaultValue:{value:"false"},description:"Allows inputting of values (whether found in options or not) via typing or pasting\nUse validate, onValidationFail, and onDuplicate for validation on typed or pasted values",name:"freeInput",required:!1,type:{name:"boolean"}},removeOnBackspace:{defaultValue:{value:"true"},description:"Set to false to disable the removal of the last value on backspace key",name:"removeOnBackspace",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:"for checking each value before converting to a chip",name:"validate",required:!1,type:{name:"((value: string) => boolean)"}},formatInputValue:{defaultValue:null,description:"Callback to format each value entered, before validation.\nDefaults to `value.trim()`, set to `false` to avoid trimming whitespace.",name:"formatInputValue",required:!1,type:{name:"FormatInputValue"}},onValidationFail:{defaultValue:null,description:"callback when values fail validation",name:"onValidationFail",required:!1,type:{name:"((values: string[]) => void)"}},onDuplicate:{defaultValue:null,description:"callback when values are duplicates",name:"onDuplicate",required:!1,type:{name:"((values: string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldSelectMulti/stories/index.stories.tsx#indexstories"]={docgenInfo:indexstories.__docgenInfo,name:"indexstories",path:"../components/src/Form/Fields/FieldSelectMulti/stories/index.stories.tsx#indexstories"})}catch(__react_docgen_typescript_loader_error){}},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);