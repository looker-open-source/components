"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[4437],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Inputs/Select/SelectMulti/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{closeOnSelect:{defaultValue:{value:"false"},description:"Should the list close after an option is selected",name:"closeOnSelect",required:!1,type:{name:"boolean"}},defaultValues:{defaultValue:null,description:"Value of the initial option",name:"defaultValues",required:!1,type:{name:"string[]"}},onChange:{defaultValue:null,description:"Handle an option being selected",name:"onChange",required:!1,type:{name:"((values?: string[]) => void)"}},values:{defaultValue:null,description:"Values of the current selected option (controlled)",name:"values",required:!1,type:{name:"string[]"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxMultiCallback"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxMultiCallback"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Options may be flat or grouped, label is optional â€“ without it the value is used",name:"options",required:!1,type:{name:"SelectOptionProps[]"}},isLoading:{defaultValue:{value:"false"},description:"Render a spinner in the list instead of any options",name:"isLoading",required:!1,type:{name:"boolean"}},windowing:{defaultValue:null,description:"Render only the options visible in the scroll window\ndefaults to false for <100 options, true for >=100 options",name:"windowing",required:!1,type:{name:"boolean"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},noErrorIcon:{defaultValue:null,description:"Don't show the error icon when validationType is 'error'",name:"noErrorIcon",required:!1,type:{name:"boolean"}},indicator:{defaultValue:null,description:"Customize the area to the left of the label, which by default\nrenders a check mark for the selected option or a spacer\nUse a ReactNode, function component or render-prop-style function, or false to remove",name:"indicator",required:!1,type:{name:"ReactNode | ComboboxOptionIndicatorFunction"}},isFilterable:{defaultValue:null,description:"The user can type in the input (default false to mimic traditional select tag)",name:"isFilterable",required:!1,type:{name:"boolean"}},onFilter:{defaultValue:null,description:"Handle when the user types in the field,\nor the menu opens with a pre-populated value",name:"onFilter",required:!1,type:{name:"((term: string) => void)"}},noOptionsLabel:{defaultValue:null,description:"Text to show when there are no available options",name:"noOptionsLabel",required:!1,type:{name:"string"}},listLayout:{defaultValue:null,description:"Control the dimensions of the list\n(use this to untether the list width from the input width)",name:"listLayout",required:!1,type:{name:"LayoutProps<Required<Theme<TLengthStyledSystem>>>"}},showCreate:{defaultValue:null,description:"Add an on-the-fly option mirroring the typed text (use when isFilterable = true)\nWhen `true`, notInOptions is used to show/hide and can be included in a custom function",name:"showCreate",required:!1,type:{name:"boolean"}},formatCreateLabel:{defaultValue:null,description:"Format the label of the on-the-fly create option (use with canCreate)",name:"formatCreateLabel",required:!1,type:{name:"((inputText: string) => ReactNode)"}},chipIconLabel:{defaultValue:{value:"Delete"},description:"customize the tooltip on the closing icon",name:"chipIconLabel",required:!1,type:{name:"string"}},clearIconLabel:{defaultValue:null,description:"customize the tooltip on the closing icon",name:"clearIconLabel",required:!1,type:{name:"string"}},freeInput:{defaultValue:{value:"false"},description:"Allows inputting of values (whether found in options or not) via typing or pasting\nUse validate, onValidationFail, and onDuplicate for validation on typed or pasted values",name:"freeInput",required:!1,type:{name:"boolean"}},removeOnBackspace:{defaultValue:{value:"true"},description:"Set to false to disable the removal of the last value on backspace key",name:"removeOnBackspace",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:"for checking each value before converting to a chip",name:"validate",required:!1,type:{name:"((value: string) => boolean)"}},formatInputValue:{defaultValue:null,description:"Callback to format each value entered, before validation.\nDefaults to `value.trim()`, set to `false` to avoid trimming whitespace.",name:"formatInputValue",required:!1,type:{name:"FormatInputValue"}},onValidationFail:{defaultValue:null,description:"callback when values fail validation",name:"onValidationFail",required:!1,type:{name:"((values: string[]) => void)"}},onDuplicate:{defaultValue:null,description:"callback when values are duplicates",name:"onDuplicate",required:!1,type:{name:"((values: string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/Select/SelectMulti/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/Select/SelectMulti/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.SelectMulti,title:"Docs/SelectMulti",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"selectmulti"},"SelectMulti"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"SelectMulti")," component is an extension of the ",(0,esm.kt)("a",{parentName:"p",href:"/components/forms/select"},(0,esm.kt)("inlineCode",{parentName:"a"},"Select"))," component that supports multiple selected values and has the following specific features:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"The input field renders an underlying ",(0,esm.kt)("a",{parentName:"li",href:"/components/forms/input-chips"},(0,esm.kt)("inlineCode",{parentName:"a"},"InputChips"))),(0,esm.kt)("li",{parentName:"ul"},'An on-the-fly "Create" option allows the user to enter custom values (see ',(0,esm.kt)("a",{parentName:"li",href:"#showcreate"},(0,esm.kt)("inlineCode",{parentName:"a"},"showCreate"))," prop)"),(0,esm.kt)("li",{parentName:"ul"},"Option list stays open by default so the user can select multiple options (see ",(0,esm.kt)("a",{parentName:"li",href:"#closeonselect"},(0,esm.kt)("inlineCode",{parentName:"a"},"closeOnSelect"))," prop)"),(0,esm.kt)("li",{parentName:"ul"},"Values can be cleared individually or all at once (does not use the ",(0,esm.kt)("inlineCode",{parentName:"li"},"Select")," component's ",(0,esm.kt)("inlineCode",{parentName:"li"},"isClearable")," prop)")),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { SelectMulti } from '..'\nimport type { SelectMultiProps } from '../'\n\nexport default function Basic(props: SelectMultiProps) {\n  return (\n    <SelectMulti\n      options={[\n        { value: 'Cheddar' },\n        { value: 'Gouda' },\n        { value: 'Swiss' },\n        { value: 'Feta' },\n        { value: 'Mascarpone' },\n        { value: 'Brie' },\n        { value: 'Mozzarella' },\n        { value: 'Cotija' },\n        { value: 'Pepperjack' },\n      ]}\n      placeholder=\"Cheeses\"\n      flex={1}\n      {...props}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"closeonselect"},"closeOnSelect"),(0,esm.kt)("p",null,"With the ",(0,esm.kt)("inlineCode",{parentName:"p"},"closeOnSelect")," prop, the option list closes after an option is selected."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { SelectMulti } from '..'\n\nexport default function CloseOnSelect() {\n  return (\n    <SelectMulti\n      options={[\n        { value: 'Cheddar' },\n        { value: 'Gouda' },\n        { value: 'Swiss' },\n        { value: 'Feta' },\n        { value: 'Mascarpone' },\n        { value: 'Brie' },\n        { value: 'Mozzarella' },\n        { value: 'Cotija' },\n        { value: 'Pepperjack' },\n      ]}\n      defaultValues={['Swiss', 'Brie']}\n      closeOnSelect\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"freeinput"},"freeInput"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"freeInput")," prop when the user needs to be able to easily enter values not found in the list of options.\nThis enables the inputting behavior of ",(0,esm.kt)("a",{parentName:"p",href:"/?path=/docs/docs-input-chips--docs"},(0,esm.kt)("inlineCode",{parentName:"a"},"InputChips"))," where values are separated\nby the enter key, comma, or tab or newline character when pasting. This prop also supports accepting values copy-pasted in from another ",(0,esm.kt)("inlineCode",{parentName:"p"},"SelectMulti"),"."),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"validate")," callback to ensure that values entered via ",(0,esm.kt)("inlineCode",{parentName:"p"},"freeInput")," are valid, and the ",(0,esm.kt)("inlineCode",{parentName:"p"},"onValidationFail")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"onDuplicate"),"\ncallbacks to handle invalid values. By default, any leading or trailing whitespace will be trimmed from\nentered values, before validation. To avoid this, use ",(0,esm.kt)("inlineCode",{parentName:"p"},"formatInputValue={false}"),", or provide a callback for custom formatting."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useState } from 'react'\nimport { SelectMulti } from '..'\nimport { SpaceVertical } from '../../../../../Layout'\nimport { Paragraph } from '../../../../../'\n\nexport default function CloseOnSelect() {\n  function validate(value: string) {\n    return value.charAt(0).toUpperCase() === value.charAt(0)\n  }\n  const [message, setMessage] = useState('')\n  function handleValidationFail(values: string[]) {\n    setMessage(`Please capitalize: ${values.join(', ')}`)\n  }\n  function resetMessage() {\n    setMessage('')\n  }\n  return (\n    <SpaceVertical align=\"stretch\">\n      <SelectMulti\n        options={[\n          { value: 'Cheddar' },\n          { value: 'Gouda' },\n          { value: 'Swiss' },\n          { value: 'Feta' },\n          { value: 'Mascarpone' },\n          { value: 'Brie' },\n          { value: 'Mozzarella' },\n          { value: 'Cotija' },\n          { value: 'Pepperjack' },\n        ]}\n        isFilterable\n        onFilter={resetMessage}\n        placeholder=\"Type values or select from the list\"\n        freeInput\n        validate={validate}\n        onValidationFail={handleValidationFail}\n      />\n      <Paragraph>{message}</Paragraph>\n    </SpaceVertical>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"cleariconlabel"},"clearIconLabel"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"InputChips")," component provides the prop ",(0,esm.kt)("inlineCode",{parentName:"p"},"clearIconLabel")," to customize the input icon label, the same is available to the individual ",(0,esm.kt)("inlineCode",{parentName:"p"},"Chip")," with the prop ",(0,esm.kt)("inlineCode",{parentName:"p"},"chipIconLabel"),". Hover over the the ",(0,esm.kt)("inlineCode",{parentName:"p"},"x")," icon to see the tooltip."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { SelectMulti } from '..'\nimport { Space } from '../../../../../Layout'\n\nexport default function ClearIconLabel() {\n  return (\n    <Space>\n      <SelectMulti\n        clearIconLabel=\"remove all chips\"\n        defaultValues={['Cheddar']}\n        flex={1}\n        options={[\n          { value: 'Cheddar' },\n          { value: 'Gouda' },\n          { value: 'Swiss' },\n          { value: 'Feta' },\n        ]}\n        placeholder=\"Cheeses\"\n      />\n      <SelectMulti\n        defaultValues={['Gouda', 'Feta']}\n        chipIconLabel=\"remove this chip\"\n        flex={1}\n        options={[\n          { value: 'Cheddar' },\n          { value: 'Gouda' },\n          { value: 'Swiss' },\n          { value: 'Feta' },\n        ]}\n      />\n      <SelectMulti\n        clearIconLabel=\"remove all chips\"\n        defaultValues={['Cheddar', 'Swiss']}\n        chipIconLabel=\"remove this chip\"\n        flex={1}\n        options={[\n          { value: 'Cheddar' },\n          { value: 'Gouda' },\n          { value: 'Swiss' },\n          { value: 'Feta' },\n        ]}\n      />\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"removeonbackspace"},"removeOnBackspace"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"removeOnBackspace")," prop inherits from ",(0,esm.kt)("a",{parentName:"p",href:"/?path=/docs/docs-input-chips--docs#removeonbackspace"},(0,esm.kt)("inlineCode",{parentName:"a"},"InputChips")),"."),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.SelectMulti,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/SelectMulti",component:src.SelectMulti,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);