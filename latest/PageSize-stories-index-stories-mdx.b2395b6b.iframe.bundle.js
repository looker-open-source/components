"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[4309],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/PageSize/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),PageSize=__webpack_require__("../components/src/PageSize/PageSize.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:PageSize.t,title:"Docs/PageSize",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"pagesize"},"PageSize"),(0,esm.kt)("p",null,"At its core, ",(0,esm.kt)("inlineCode",{parentName:"p"},"<PageSize/>")," is a composition of ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Select/>")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Text/>"),"."),(0,esm.kt)("p",null,"A typical use case of ",(0,esm.kt)("inlineCode",{parentName:"p"},"<PageSize/>")," is to set the number of viewable items on each page in a paginated list."),(0,esm.kt)("p",null,"Regarding implementation details, a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<PageSize/>")," element will call the callback it received via its ",(0,esm.kt)("inlineCode",{parentName:"p"},"onChange")," prop any time a user selects a new options from the ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Select/>"),", passing in the newly selected value."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { PageSize } from '..'\n\nexport default function Basic() {\n  return (\n    <PageSize\n      total={100}\n      value={100}\n      onChange={(value: number) => alert(`You chose ${value} per page`)}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"alwaysvisible"},"AlwaysVisible"),(0,esm.kt)("p",null,"Set alwaysVisible to"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useState } from 'react'\nimport { PageSize } from '..'\n\nexport default function AlwaysVisible() {\n  const [value, setValue] = useState(100)\n  return <PageSize alwaysVisible total={3} value={value} onChange={setValue} />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:PageSize.t,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/PageSize",component:PageSize.t,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);