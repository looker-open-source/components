"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[9193],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Inputs/InputFile/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{buttonText:{defaultValue:null,description:"Text for the button which uploads the file",name:"buttonText",required:!1,type:{name:"string"}},handleFile:{defaultValue:null,description:"A function that takes the uploaded file",name:"handleFile",required:!0,type:{name:"(value: File) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputFile/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Inputs/InputFile/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}try{Accept.displayName="Accept",Accept.__docgenInfo={description:"",displayName:"Accept",props:{buttonText:{defaultValue:null,description:"Text for the button which uploads the file",name:"buttonText",required:!1,type:{name:"string"}},handleFile:{defaultValue:null,description:"A function that takes the uploaded file",name:"handleFile",required:!0,type:{name:"(value: File) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputFile/stories/Accept.tsx#Accept"]={docgenInfo:Accept.__docgenInfo,name:"Accept",path:"../components/src/Form/Inputs/InputFile/stories/Accept.tsx#Accept"})}catch(__react_docgen_typescript_loader_error){}try{ButtonText.displayName="ButtonText",ButtonText.__docgenInfo={description:"",displayName:"ButtonText",props:{buttonText:{defaultValue:null,description:"Text for the button which uploads the file",name:"buttonText",required:!1,type:{name:"string"}},handleFile:{defaultValue:null,description:"A function that takes the uploaded file",name:"handleFile",required:!0,type:{name:"(value: File) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputFile/stories/ButtonText.tsx#ButtonText"]={docgenInfo:ButtonText.__docgenInfo,name:"ButtonText",path:"../components/src/Form/Inputs/InputFile/stories/ButtonText.tsx#ButtonText"})}catch(__react_docgen_typescript_loader_error){}try{Placeholder.displayName="Placeholder",Placeholder.__docgenInfo={description:"",displayName:"Placeholder",props:{buttonText:{defaultValue:null,description:"Text for the button which uploads the file",name:"buttonText",required:!1,type:{name:"string"}},handleFile:{defaultValue:null,description:"A function that takes the uploaded file",name:"handleFile",required:!0,type:{name:"(value: File) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Inputs/InputFile/stories/Placeholder.tsx#Placeholder"]={docgenInfo:Placeholder.__docgenInfo,name:"Placeholder",path:"../components/src/Form/Inputs/InputFile/stories/Placeholder.tsx#Placeholder"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.InputFile,title:"Docs/InputFile",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"inputfile"},"InputFile"),(0,esm.kt)("p",null,"Render a file input form element."),(0,esm.kt)("h2",{id:"handlefile"},"HandleFile"),(0,esm.kt)("p",null,"A function that takes the uploaded file"),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { InputFile } from '../'\nimport type { InputFileProps } from '../'\n\nexport default function Basic(props: InputFileProps) {\n  const {\n    handleFile = () => {\n      // file handling logic here\n    },\n    ...restProps\n  } = props\n  return <InputFile handleFile={handleFile} {...restProps} />\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"accept"},"Accept"),(0,esm.kt)("p",null,"A string containing one or more unique file type specifiers i.e. '.pdf', each file type separated by a comma."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { InputFile } from '..'\nimport type { InputFileProps } from '..'\n\nexport default function Accept(props: InputFileProps) {\n  const {\n    handleFile = () => {\n      // file handling logic here\n    },\n    accept = '.pdf',\n    value = 'Accepts only PDF files',\n    ...restProps\n  } = props\n\n  return (\n    <InputFile\n      handleFile={handleFile}\n      accept={accept}\n      value={value}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"buttontext"},"ButtonText"),(0,esm.kt)("p",null,"Text for the button which uploads the file."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { InputFile } from '../'\nimport type { InputFileProps } from '../'\n\nexport default function ButtonText(props: InputFileProps) {\n  const {\n    handleFile = () => {\n      // file handling logic here\n    },\n    buttonText = 'Browse local files',\n    ...restProps\n  } = props\n\n  return (\n    <InputFile handleFile={handleFile} buttonText={buttonText} {...restProps} />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"placeholder"},"Placeholder"),(0,esm.kt)("p",null,"Placeholder text within the text input box."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { InputFile } from '../'\nimport type { InputFileProps } from '../'\n\nexport default function Placeholder(props: InputFileProps) {\n  const {\n    handleFile = () => {\n      // file handling logic here\n    },\n    placeholder = 'Select a file to upload',\n    ...restProps\n  } = props\n\n  return (\n    <InputFile\n      handleFile={handleFile}\n      placeholder={placeholder}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)(dist_esm.ArgsTable,{of:src.InputFile,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/InputFile",component:src.InputFile,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);