"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[286],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Popover/Layout/PopoverHeader/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),PopoverHeader=__webpack_require__("../components/src/Popover/Layout/PopoverHeader/PopoverHeader.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),MessageBar=__webpack_require__("../components/src/MessageBar/MessageBar.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:PopoverHeader.Y,title:"Docs/PopoverHeader",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"popoverheader"},"PopoverHeader"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"PopoverHeader")," can be attached to the top of Popover and provides a button to close the containing Popover."),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("inlineCode",{parentName:"li"},"hideClose"),' removes the "close" ',(0,esm.kt)("inlineCode",{parentName:"li"},"IconButton")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("inlineCode",{parentName:"li"},"detail"),' allows the developer to specify a ReactNode that will replace the "close" ',(0,esm.kt)("inlineCode",{parentName:"li"},"IconButton"))),(0,esm.kt)(MessageBar.c,{noActions:!0,intent:"warn",mdxType:"MessageBar"},"NOTE: don't use `hideClose` and `detail` together"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { PopoverHeader } from '../..'\n\nexport default function Basic() {\n  return <PopoverHeader>Header Text</PopoverHeader>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"hideclose"},"hideClose"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { PopoverHeader } from '../..'\n\nexport default function HideClose() {\n  return <PopoverHeader hideClose>Header Text</PopoverHeader>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"detail"},"Detail"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { PopoverHeader } from '../..'\n\nexport default function Detail() {\n  return (\n    <PopoverHeader detail={<button>close</button>}>Header Text</PopoverHeader>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:PopoverHeader.Y,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/PopoverHeader",component:PopoverHeader.Y,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);