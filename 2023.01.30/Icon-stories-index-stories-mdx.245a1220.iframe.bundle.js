"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[6461],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Icon/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),Icon=__webpack_require__("../components/src/Icon/Icon.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:Icon.J,title:"Docs/Icon",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"icon"},"Icon"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"<Icon />")," component uses the property ",(0,esm.kt)("inlineCode",{parentName:"p"},"icon")," to display the correct icon."),(0,esm.kt)("p",null,"Icon is expected be a ",(0,esm.kt)("inlineCode",{parentName:"p"},"ReactNode")," element (most likely an SVG)."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { Icon, Space } from \'../..\'\n\nexport default function Basic() {\n  return (\n    <Space around>\n      <Icon icon={<MaterialIcons.Done />} />\n      <Icon icon={<MaterialIcons.Favorite />} size="large" />\n      <Icon icon={<MaterialIcons.Settings />} size="small" />\n    </Space>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"color"},"Color"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"color")," defaults to ",(0,esm.kt)("inlineCode",{parentName:"p"},"currentColor")," - that is, the text color of the component they are embedded within. However the developer can explicitly specify color as a prop."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { Icon, Space } from \'../..\'\n\nexport default function Color() {\n  return (\n    <Space around>\n      <Icon icon={<MaterialIcons.Delete />} color="inform" />\n      <Space align="center" color="critical" bg="criticalSubtle" p="u5">\n        <Icon icon={<MaterialIcons.Delete />} display="inline-flex" />\n        Text color is red so the Icon is as well\n      </Space>\n    </Space>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"size"},"Size"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"size")," can be specified by using the size prop. By default the size will be medium."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { Icon, Space } from \'../..\'\n\nexport default function Size() {\n  return (\n    <Space around>\n      <Icon icon={<MaterialIcons.Delete />} color="inform" size="xxsmall" />\n      <Icon icon={<MaterialIcons.Delete />} color="inform" size="xsmall" />\n      <Icon icon={<MaterialIcons.Delete />} color="inform" size="small" />\n      <Icon icon={<MaterialIcons.Delete />} color="inform" size="medium" />\n      <Icon icon={<MaterialIcons.Delete />} color="inform" size="large" />\n    </Space>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"accessibility"},"Accessibility"),(0,esm.kt)("p",null,"When using an ",(0,esm.kt)("inlineCode",{parentName:"p"},"Icon")," we strongly encourage specification of a ",(0,esm.kt)("inlineCode",{parentName:"p"},"title")," attribute. If an ",(0,esm.kt)("inlineCode",{parentName:"p"},"Icon")," is used without an explicitly specified ",(0,esm.kt)("inlineCode",{parentName:"p"},"title")," attribute ",(0,esm.kt)("inlineCode",{parentName:"p"},'aria-hidden="true"')," will be added to hide the icon from screen readers. The assumption will be made that other efforts have been made to give the user context."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { Icon, Space } from '../..'\n\nexport default function Accessibility() {\n  return (\n    <Space around>\n      <Icon icon={<MaterialIcons.Delete />} title=\"It's a trash can\" />\n      <Icon icon={<MaterialIcons.DeleteOutline />} />\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"artwork"},"Artwork"),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport { Icon, Space } from \'../..\'\n\nexport default function Artwork() {\n  return (\n    <Space around>\n      <Icon\n        icon={\n          <svg\n            width="24"\n            height="24"\n            viewBox="0 0 24 24"\n            fill="none"\n            xmlns="http://www.w3.org/2000/svg"\n          >\n            <path\n              d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM13 17H11V15H13V17ZM13 13H11V7H13V13Z"\n              fill="hotpink"\n            />\n          </svg>\n        }\n        size="xxsmall"\n      />\n      <Icon\n        icon={\n          <svg>\n            <rect\n              width="100"\n              height="100"\n              fill="rgb(0,0,255)"\n              strokeWidth="3"\n              stroke="rgb(0,0,0)"\n            />\n          </svg>\n        }\n      />\n    </Space>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"icons-inside-components"},"Icons Inside Components"),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { Space, SpaceVertical, Button, IconButton } from \'../..\'\n\nexport default function InsideComponents() {\n  return (\n    <SpaceVertical>\n      <Space gap="u2">\n        <Button size="large" iconAfter={<MaterialIcons.Refresh />}>\n          Add\n        </Button>\n        <IconButton\n          size="large"\n          icon={<MaterialIcons.FilterList />}\n          label="Filter"\n        />\n      </Space>\n\n      <Space gap="u2">\n        <Button iconAfter={<MaterialIcons.Refresh />}>Add</Button>\n        <IconButton\n          size="medium"\n          icon={<MaterialIcons.FilterList />}\n          label="Filter"\n        />\n      </Space>\n\n      <Space gap="u2">\n        <Button size="small" iconAfter={<MaterialIcons.Refresh />}>\n          Add\n        </Button>\n        <IconButton\n          size="small"\n          icon={<MaterialIcons.FilterList />}\n          label="Filter"\n        />\n      </Space>\n\n      <Space gap="u2">\n        <Button size="xsmall" iconAfter={<MaterialIcons.Refresh />}>\n          Add\n        </Button>\n        <IconButton\n          size="xsmall"\n          icon={<MaterialIcons.FilterList />}\n          label="Filter"\n        />\n      </Space>\n\n      <Space gap="u2">\n        <Button size="xxsmall" iconAfter={<MaterialIcons.Refresh />}>\n          Add\n        </Button>\n        <IconButton\n          size="xxsmall"\n          icon={<MaterialIcons.FilterList />}\n          label="Filter"\n        />\n      </Space>\n    </SpaceVertical>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"icons-paired-with-text"},"Icons Paired With Text"),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { Space, SpaceVertical, Icon, Heading } from \'../..\'\n\nexport default function PairedWithText() {\n  return (\n    <SpaceVertical>\n      <Space gap="u2">\n        <Heading fontSize="xxsmall">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="xxxsmall" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="xsmall">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="xxxsmall" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="small">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="xxsmall" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="medium">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="xxsmall" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="large">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="xsmall" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="xlarge">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="small" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="xxlarge">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="small" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="xxxlarge">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="medium" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="xxxxlarge">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="medium" icon={<MaterialIcons.Create />} />\n      </Space>\n\n      <Space gap="u2">\n        <Heading fontSize="xxxxxlarge">\n          This is to compare icons size with a Heading\n        </Heading>\n        <Icon size="large" icon={<MaterialIcons.Create />} />\n      </Space>\n    </SpaceVertical>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h1",{id:"material-design-icons"},"Material Design Icons"),(0,esm.kt)("p",null,(0,esm.kt)("a",{parentName:"p",href:"https://styled-icons.js.org/",target:"_blank",rel:"nofollow noopener noreferrer"},"Styled Icons")," has a massive suite of prebuilt icons for an array of icon libraries including the Material Design collection. Within suite of components we often leverage ",(0,esm.kt)("inlineCode",{parentName:"p"},"@styled-icons/material"),", ",(0,esm.kt)("inlineCode",{parentName:"p"},"@styled-icons/material-outlined")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"@styled-icons/material-rounded")),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"import { Add } from '@styled-icons/material/Add'\nimport { Add } from '@styled-icons/material-outlined/Add'\nimport { Add } from '@styled-icons/material-rounded/Add'\n")),(0,esm.kt)("h1",{id:"lookericons-library"},"@looker/icons Library"),(0,esm.kt)("p",null,"The Looker Components team ships a small suite of Looker-specific icons via a NPM package - ",(0,esm.kt)("inlineCode",{parentName:"p"},"@looker/icons"),". Below you can see a complete list of the icons we ship in our package. To use one simply add the package to your project and import the apppriate icon:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"import { Pivot } from '@looker/icons'\n")),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:Icon.J,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Icon",component:Icon.J,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);