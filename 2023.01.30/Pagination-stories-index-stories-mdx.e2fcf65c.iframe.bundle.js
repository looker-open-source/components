"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[957],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Pagination/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),Pagination=__webpack_require__("../components/src/Pagination/Pagination.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},current:{defaultValue:null,description:"",name:"current",required:!0,type:{name:"number"}},pages:{defaultValue:null,description:"",name:"pages",required:!0,type:{name:"number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(page: number) => void"}},alwaysVisible:{defaultValue:{value:"false"},description:"If enabled controls will always be shown regardless of whether or not\nthere are any additional pages to be displayed.",name:"alwaysVisible",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Pagination/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Pagination/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:Pagination.t,title:"Docs/Pagination",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"pagination"},"Pagination"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Pagination/>")," component's primary use case is for handling navigation on a paginated item."),(0,esm.kt)("p",null,"It displays the current page and the total number of pages, and includes four ",(0,esm.kt)("inlineCode",{parentName:"p"},"<IconButton/>"),"s for traversal."),(0,esm.kt)("p",null,"The callback passed into the ",(0,esm.kt)("inlineCode",{parentName:"p"},"onChange")," prop will be called whenever an ",(0,esm.kt)("inlineCode",{parentName:"p"},"<IconButton/>")," is clicked. Descriptions of how each ",(0,esm.kt)("inlineCode",{parentName:"p"},"<IconButton/>")," will call the ",(0,esm.kt)("inlineCode",{parentName:"p"},"onChange")," callback are listed below:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"Double Left Arrow"),": Will call ",(0,esm.kt)("inlineCode",{parentName:"li"},"onChange(1)")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"Single Left Arrow"),": Will call ",(0,esm.kt)("inlineCode",{parentName:"li"},"onChange(current - 1)")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"Single Right Arrow"),": Will call ",(0,esm.kt)("inlineCode",{parentName:"li"},"onChange(current + 1)")),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("strong",{parentName:"li"},"Double Right Arrow"),": Will call ",(0,esm.kt)("inlineCode",{parentName:"li"},"onChange(pages)"))),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useState } from 'react'\nimport { Pagination } from '../..'\nimport type { PaginationProps } from '../Pagination'\n\nexport default function Basic(props: PaginationProps) {\n  const [currentPage, setCurrentPage] = useState(1)\n  const totalPages = 10\n\n  return (\n    <Pagination\n      {...props}\n      current={currentPage}\n      pages={totalPages}\n      onChange={setCurrentPage}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"compose-with-a-datatable"},"Compose with a DataTable"),(0,esm.kt)("p",null,"One application of the ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Pagination/>")," component is to paginate a data table, like a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<DataTable>"),"."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useState } from 'react'\nimport {\n  Pagination,\n  DataTable,\n  DataTableItem,\n  DataTableAction,\n  DataTableCell,\n  Flex,\n  Box,\n} from '../..'\nimport type { DataTableColumns } from '../../'\n\nexport default function WithDataTable() {\n  const [currentPage, setCurrentPage] = useState(1)\n  const cheesePerPage = 1\n  const data = [\n    {\n      id: 1,\n      name: 'Gouda',\n    },\n    {\n      id: 2,\n      name: 'Pepper Jack',\n    },\n    {\n      id: 3,\n      name: `Swiss`,\n    },\n    {\n      id: 4,\n      name: `Cheddar`,\n    },\n  ]\n  const totalPages = data.length / cheesePerPage\n\n  const columns: DataTableColumns = [\n    {\n      id: 'id',\n      title: 'ID',\n      type: 'number',\n    },\n    {\n      id: 'name',\n      title: 'Name',\n      type: 'string',\n    },\n  ]\n\n  const items = data.map(({ id, name }, index) => {\n    return (\n      index + 1 === currentPage && (\n        <DataTableItem\n          key={id}\n          id={`${id}`}\n          onClick={() => alert(`Row clicked`)}\n          actions={\n            <DataTableAction onClick={() => alert(`${name} selected!`)}>\n              Select Cheese\n            </DataTableAction>\n          }\n        >\n          <DataTableCell>{id}</DataTableCell>\n          <DataTableCell>{name}</DataTableCell>\n        </DataTableItem>\n      )\n    )\n  })\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\">\n      <Box width=\"100%\" mb=\"u3\">\n        <DataTable caption=\"Cheeses example\" columns={columns}>\n          {items}\n        </DataTable>\n      </Box>\n      <Pagination\n        current={currentPage}\n        pages={totalPages}\n        onChange={setCurrentPage}\n      />\n    </Flex>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:Pagination.t,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Pagination",component:Pagination.t,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);