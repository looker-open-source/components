"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[8706],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Chip/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),Chip=__webpack_require__("../components/src/Chip/Chip.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"GenericOnClick<HTMLSpanElement>"}},iconLabel:{defaultValue:{value:"Delete"},description:"customize the tooltip on the closing icon",name:"iconLabel",required:!1,type:{name:"string"}},onDelete:{defaultValue:null,description:"Displays an x icon and is called when the user clicks that or hits the delete key",name:"onDelete",required:!1,type:{name:"((e?: KeyboardEvent<HTMLSpanElement> | MouseEvent<HTMLSpanElement, MouseEvent>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Chip/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Chip/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:Chip.A,title:"Docs/Chip",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"chip"},"Chip"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"Chip")," component can represent multiple interactive elements in the same area, such as a multiple values on a single filter or a list of email addresses."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Chip } from '../Chip'\nimport type { ChipProps } from '../Chip'\n\nexport default function Basic(props: ChipProps) {\n  return <Chip {...props}>Basic</Chip>\n}\n",mdxType:"Editor"}),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"onClick")," handler is called when when the user clicks anywhere on the ",(0,esm.kt)("inlineCode",{parentName:"p"},"Chip")," except for the x icon.\nThis icon appears when ",(0,esm.kt)("inlineCode",{parentName:"p"},"onDelete")," is defined and calls that intead when clicked.\n",(0,esm.kt)("inlineCode",{parentName:"p"},"onDelete")," is also called via the delete key. Neither callback is called when ",(0,esm.kt)("inlineCode",{parentName:"p"},"disabled")," is true."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Chip, Space } from '../..'\n\nexport default function ClickAndDelete() {\n  const handleClick = () => alert('Clicked!')\n  const handleDelete = () => alert('Deleted!')\n\n  return (\n    <Space>\n      <Chip onClick={handleClick}>Click Me</Chip>\n      <Chip disabled onClick={handleClick}>\n        Click Me (nothing happens)\n      </Chip>\n      <Chip onClick={handleClick} onDelete={handleDelete}>\n        Delete Me\n      </Chip>\n      <Chip disabled onClick={handleClick} onDelete={handleDelete}>\n        Delete Me (nothing happens)\n      </Chip>\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"maxwidth"},"MaxWidth"),(0,esm.kt)("p",null,"The width of the ",(0,esm.kt)("inlineCode",{parentName:"p"},"Chip")," will accomodate its contents, by default. Setting a ",(0,esm.kt)("inlineCode",{parentName:"p"},"maxWidth")," will cause any overflow text to be truncated with ellipses. The full text will show in a tooltip on hover."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Chip, Space } from '../..'\n\nexport default function MaxWidth() {\n  return (\n    <Space gap=\"u1\">\n      <Chip maxWidth={150}>short</Chip>\n      <Chip maxWidth={150} onDelete={() => alert('deleted')}>\n        Very long text inside the chip will be truncated\n      </Chip>\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"prefix"},"Prefix"),(0,esm.kt)("p",null,"Text in the ",(0,esm.kt)("inlineCode",{parentName:"p"},"prefix")," will render before the children, in normal font-weight, with a colon after it."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Chip } from '../..'\n\nexport default function Prefix() {\n  return <Chip prefix=\"role\">admin</Chip>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"removable"},"Removable"),(0,esm.kt)("p",null,"The following is an example of a collection of removable chips."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React, { useState } from 'react'\nimport { Chip, Space } from '../..'\n\nexport default function Removable() {\n  const [values, setValues] = useState(['Cheddar', 'Gouda', 'Swiss'])\n  function getDeleteHandler(item: string) {\n    return () => {\n      const newValues = values.filter(value => value !== item)\n      setValues(newValues)\n    }\n  }\n  return (\n    <Space>\n      {values.map(item => (\n        <Chip onDelete={getDeleteHandler(item)} role=\"option\" key={item}>\n          {item}\n        </Chip>\n      ))}\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h1",{id:"iconlabel"},"IconLabel"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"Chip")," component provides the prop ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconLabel")," to customize the icon label. Hover over the the ",(0,esm.kt)("inlineCode",{parentName:"p"},"x")," icon to see the tooltip."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Chip, Space } from '../..'\n\nexport default function IconLabel() {\n  const alertTrigger = () => alert('You click on the X')\n  return (\n    <Space gap=\"u1\">\n      <Chip iconLabel=\"remove chip\" onDelete={alertTrigger}>\n        hover the x\n      </Chip>\n      <Chip onDelete={alertTrigger}>hover the x</Chip>\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:Chip.A,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Chip",component:Chip.A,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);