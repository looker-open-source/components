"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[5167],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Fields/FieldRadioGroup/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.FieldRadioGroup,title:"Docs/FieldRadioGroup",mdxType:"Meta"}),(0,esm.kt)("p",null,"#FieldRadioGroup"),(0,esm.kt)("p",null,"Groups of radios can be displayed with ",(0,esm.kt)("inlineCode",{parentName:"p"},"FieldRadioGroup")),(0,esm.kt)("p",null,'There are two "inline" variations:'),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"The ",(0,esm.kt)("inlineCode",{parentName:"li"},"inline")," prop will put the group label and all the inputs in one line (wrapping the inputs as necessary)"),(0,esm.kt)("li",{parentName:"ul"},"The ",(0,esm.kt)("inlineCode",{parentName:"li"},"inputsInline")," prop will stack the group label on top but keep all the inputs inline")),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldRadio />")," component is composed of a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Radio />")," component\nand a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Label />")," component. Using ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldRadio />")," allows for rendering validation\nmessages. By default, the label will render to the right of the radio button, however\nthis is adjustable with the ",(0,esm.kt)("inlineCode",{parentName:"p"},"inline")," property."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { FieldRadioGroup } from '../'\nexport default function Basic() {\n  const options = [\n    { label: 'Cheddar', value: 'cheddar' },\n    { label: 'Gouda', value: 'gouda' },\n    { disabled: true, label: 'Swiss', value: 'swiss' },\n    { label: 'Roquefort', value: 'roquefort' },\n    { label: 'Cheddar', value: 'cheddar-2' },\n    { label: 'Gouda', value: 'gouda 2' },\n    { disabled: true, label: 'Swiss', value: 'swiss-2' },\n    { label: 'Roquefort', value: 'roquefort-2' },\n    { label: 'Cheddar', value: 'cheddar-3' },\n    { label: 'Gouda', value: 'gouda-3' },\n    { disabled: true, label: 'Swiss', value: 'swiss-3' },\n    { label: 'Roquefort', value: 'roquefort-3' },\n  ]\n  return (\n    <FieldRadioGroup\n      autoFocus\n      label=\"Cheeses\"\n      description=\"Pick all your cheeses\"\n      options={options}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.FieldRadioGroup,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/FieldRadioGroup",component:src.FieldRadioGroup,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);