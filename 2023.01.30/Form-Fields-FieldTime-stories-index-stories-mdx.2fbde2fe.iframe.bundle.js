"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[5506],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Fields/FieldTime/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"12h"'},{value:'"24h"'}]}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((time?: string) => void)"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},onValidationFail:{defaultValue:null,description:"",name:"onValidationFail",required:!1,type:{name:"((value?: string) => void)"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldTime/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Fields/FieldTime/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}try{Disabled.displayName="Disabled",Disabled.__docgenInfo={description:"",displayName:"Disabled",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"12h"'},{value:'"24h"'}]}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((time?: string) => void)"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},onValidationFail:{defaultValue:null,description:"",name:"onValidationFail",required:!1,type:{name:"((value?: string) => void)"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldTime/stories/Disabled.tsx#Disabled"]={docgenInfo:Disabled.__docgenInfo,name:"Disabled",path:"../components/src/Form/Fields/FieldTime/stories/Disabled.tsx#Disabled"})}catch(__react_docgen_typescript_loader_error){}try{FloatingLabel.displayName="FloatingLabel",FloatingLabel.__docgenInfo={description:"",displayName:"FloatingLabel",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"12h"'},{value:'"24h"'}]}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((time?: string) => void)"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},onValidationFail:{defaultValue:null,description:"",name:"onValidationFail",required:!1,type:{name:"((value?: string) => void)"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldTime/stories/FloatingLabel.tsx#FloatingLabel"]={docgenInfo:FloatingLabel.__docgenInfo,name:"FloatingLabel",path:"../components/src/Form/Fields/FieldTime/stories/FloatingLabel.tsx#FloatingLabel"})}catch(__react_docgen_typescript_loader_error){}try{Required.displayName="Required",Required.__docgenInfo={description:"",displayName:"Required",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"12h"'},{value:'"24h"'}]}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((time?: string) => void)"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},onValidationFail:{defaultValue:null,description:"",name:"onValidationFail",required:!1,type:{name:"((value?: string) => void)"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldTime/stories/Required.tsx#Required"]={docgenInfo:Required.__docgenInfo,name:"Required",path:"../components/src/Form/Fields/FieldTime/stories/Required.tsx#Required"})}catch(__react_docgen_typescript_loader_error){}try{TimeFormat.displayName="TimeFormat",TimeFormat.__docgenInfo={description:"",displayName:"TimeFormat",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"12h"'},{value:'"24h"'}]}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((time?: string) => void)"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},onValidationFail:{defaultValue:null,description:"",name:"onValidationFail",required:!1,type:{name:"((value?: string) => void)"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldTime/stories/TimeFormat.tsx#TimeFormat"]={docgenInfo:TimeFormat.__docgenInfo,name:"TimeFormat",path:"../components/src/Form/Fields/FieldTime/stories/TimeFormat.tsx#TimeFormat"})}catch(__react_docgen_typescript_loader_error){}try{ValidationMessage.displayName="ValidationMessage",ValidationMessage.__docgenInfo={description:"",displayName:"ValidationMessage",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"12h"'},{value:'"24h"'}]}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((time?: string) => void)"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},onValidationFail:{defaultValue:null,description:"",name:"onValidationFail",required:!1,type:{name:"((value?: string) => void)"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldTime/stories/ValidationMessage.tsx#ValidationMessage"]={docgenInfo:ValidationMessage.__docgenInfo,name:"ValidationMessage",path:"../components/src/Form/Fields/FieldTime/stories/ValidationMessage.tsx#ValidationMessage"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.FieldTime,title:"Docs/FieldTime",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"fieldtime"},"FieldTime"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldTime />")," component is composed of an ",(0,esm.kt)("inlineCode",{parentName:"p"},"<InputTime />")," component and a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Label />")," component. It has attributes to help display additional information. ",(0,esm.kt)("inlineCode",{parentName:"p"},"detail"),", ",(0,esm.kt)("inlineCode",{parentName:"p"},"description")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"validation messages")," are available to the component."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { FieldTimeProps } from '../'\nimport { FieldTime } from '../'\n\nexport default function Basic(props: FieldTimeProps) {\n  const {\n    defaultValue = '14:34',\n    description = 'this is the description',\n    detail = 'detail',\n    label = 'Label',\n    ...restProps\n  } = props\n\n  return (\n    <FieldTime\n      label={label}\n      defaultValue={defaultValue}\n      description={description}\n      detail={detail}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"controlled"},"Controlled"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useState } from 'react'\nimport { SpaceVertical, Paragraph, Space, Button } from '../../../../'\nimport { FieldTime } from '..'\n\nexport default function Controlled() {\n  const [controlledTime, setControlledTime] = useState<string | undefined>(\n    '12:00'\n  )\n  return (\n    <SpaceVertical>\n      <Paragraph>Selected: {controlledTime}</Paragraph>\n\n      <Space>\n        <Button\n          onClick={() => {\n            setControlledTime('14:00')\n          }}\n        >\n          2:00pm\n        </Button>\n        <Button\n          onClick={() => {\n            setControlledTime('15:15')\n          }}\n        >\n          3:15pm\n        </Button>\n        <Button\n          onClick={() => {\n            setControlledTime('16:32')\n          }}\n        >\n          4:32pm\n        </Button>\n      </Space>\n\n      <FieldTime\n        label=\"Controlled\"\n        value={controlledTime}\n        onChange={setControlledTime}\n      />\n    </SpaceVertical>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"floating-label"},"Floating Label"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { ExtendComponentsThemeProvider } from '@looker/components-providers'\nimport React from 'react'\nimport type { FieldTimeProps } from '../'\nimport { FieldTime } from '../'\n\nexport default function FloatingLabel(props: FieldTimeProps) {\n  const {\n    description = 'this is the description',\n    detail = 'detail',\n    label = 'Label',\n    ...restProps\n  } = props\n  return (\n    <ExtendComponentsThemeProvider\n      themeCustomizations={{ defaults: { externalLabel: false } }}\n    >\n      <FieldTime\n        detail={detail}\n        description={description}\n        label={label}\n        {...restProps}\n      />\n    </ExtendComponentsThemeProvider>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"validation-message"},"Validation Message"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { FieldTimeProps } from '..'\nimport { FieldTime } from '..'\n\nexport default function ValidationMessage(props: FieldTimeProps) {\n  const {\n    label = 'Label',\n    validationMessage = { message: 'validation Message', type: 'error' },\n    ...restProps\n  } = props\n\n  return (\n    <FieldTime\n      label={label}\n      validationMessage={validationMessage}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"disabled"},"Disabled"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { FieldTimeProps } from '..'\nimport { FieldTime } from '../'\n\nexport default function Disabled(props: FieldTimeProps) {\n  const {\n    disabled = true,\n    defaultValue = '14:34',\n    description = 'this is the description',\n    detail = 'detail',\n    label = 'Label',\n    ...restProps\n  } = props\n\n  return (\n    <FieldTime\n      label={label}\n      defaultValue={defaultValue}\n      description={description}\n      detail={detail}\n      disabled={disabled}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"required"},"Required"),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { FieldTimeProps } from '..'\nimport { FieldTime } from '..'\n\nexport default function Required(props: FieldTimeProps) {\n  const {\n    required = true,\n    defaultValue = '14:34',\n    description = 'this is the description',\n    detail = 'detail',\n    label = 'Label',\n    ...restProps\n  } = props\n\n  return (\n    <FieldTime\n      label={label}\n      defaultValue={defaultValue}\n      description={description}\n      detail={detail}\n      required={required}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"12--or-24-hour-time"},"12- or 24-Hour Time"),(0,esm.kt)("p",null,"Set the ",(0,esm.kt)("inlineCode",{parentName:"p"},"format")," prop to either ",(0,esm.kt)("inlineCode",{parentName:"p"},"12hr")," or ",(0,esm.kt)("inlineCode",{parentName:"p"},"24hr")," to toggle between the two supported time formats."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { FieldTimeProps } from '..'\nimport { FieldTime } from '..'\n\nexport default function TimeFormat(props: FieldTimeProps) {\n  const {\n    defaultValue = '14:34',\n    description = 'set \"format\" prop to either `12h` or `24h`',\n    detail = 'detail',\n    label = 'Label',\n    format = '24h',\n    ...restProps\n  } = props\n\n  return (\n    <FieldTime\n      format={format}\n      label={label}\n      defaultValue={defaultValue}\n      description={description}\n      detail={detail}\n      {...restProps}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.FieldTime,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/FieldTime",component:src.FieldTime,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);