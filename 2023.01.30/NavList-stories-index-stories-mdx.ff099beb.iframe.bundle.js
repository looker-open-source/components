"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[9559],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/NavList/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),NavList=__webpack_require__("../components/src/NavList/NavList.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{density:{defaultValue:{value:"0"},description:"Determines how dense a list should be by affecting child item size and spacing.",name:"density",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"-3"},{value:"-2"},{value:"-1"}]}},color:{defaultValue:null,description:"Replace the normal uiN(1-5) color, when ListItem is selected, with color label passed.\n\nList, ListItem, Tree & TreeItem now theme-based color assignments. Supported colors are:\n\n - key\n - calculation\n - dimension\n - measure\n\nThe color is used a background color (using the `subtle` variant) when the item\nis `selected` or `current`. Items with `calculation` & `measure` will have a text\ncolor applied at all times unless they are `disabled`",name:"color",required:!1,type:{name:"enum",value:[{value:'"key"'},{value:'"calculation"'},{value:'"dimension"'},{value:'"measure"'}]}},disableKeyboardNav:{defaultValue:null,description:"Disables the nested List's keyboard nav capabilities\n@private",name:"disableKeyboardNav",required:!1,type:{name:"boolean"}},iconGutter:{defaultValue:null,description:"If true, all ListItem children without an icon will reserve space for an icon\nfor alignment purposes.",name:"iconGutter",required:!1,type:{name:"boolean"}},fontFamily:{defaultValue:{value:"inherit"},description:"Specify font-family. Can be specified as `brand`, `code` or `body` to explicitly\nspecify theme-controlled font-family.",name:"fontFamily",required:!1,type:{name:"enum",value:[{value:'"body"'},{value:'"code"'},{value:'"brand"'}]}},windowing:{defaultValue:null,description:"Use windowing for long lists (strongly recommended to also define a width on List or its container)\nDefaults to false with children <= 100 and true for > 100",name:"windowing",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/NavList/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/NavList/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:NavList.$,title:"Docs/NavList",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"navlist"},"NavList"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"NavList")," is a variation of ",(0,esm.kt)("inlineCode",{parentName:"p"},"List")," that expects to wrap around a composition of ",(0,esm.kt)("inlineCode",{parentName:"p"},"ListItem"),"s, ",(0,esm.kt)("inlineCode",{parentName:"p"},"NavTree"),"s and ",(0,esm.kt)("inlineCode",{parentName:"p"},"NavTreeItem"),"s"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("inlineCode",{parentName:"li"},"ListItem"),", ",(0,esm.kt)("inlineCode",{parentName:"li"},"NavTree")," and ",(0,esm.kt)("inlineCode",{parentName:"li"},"NavTreeItem"),"  border-radius circular on the right side"),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("inlineCode",{parentName:"li"},"ListItem"),", ",(0,esm.kt)("inlineCode",{parentName:"li"},"NavTree")," and ",(0,esm.kt)("inlineCode",{parentName:"li"},"NavTreeItem"),' selected or "active"',(0,esm.kt)("ul",{parentName:"li"},(0,esm.kt)("li",{parentName:"ul"},"text color is ",(0,esm.kt)("inlineCode",{parentName:"li"},"theme.colors.key")),(0,esm.kt)("li",{parentName:"ul"},"background color is ",(0,esm.kt)("inlineCode",{parentName:"li"},"keySubtle")))),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("inlineCode",{parentName:"li"},"ListItem")," at the root are indented to align properly with ",(0,esm.kt)("inlineCode",{parentName:"li"},"Tree"),"(s) at the root as well")),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useState } from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { NavList, ListItem } from '../..'\nimport type { ListProps } from '../../List'\n\nexport default function Basic(props: ListProps) {\n  const [selected, setSelected] = useState(false)\n  const handleClick = () => {\n    setSelected(!selected)\n  }\n  return (\n    <NavList {...props}>\n      <ListItem\n        description=\"Description\"\n        detail=\"Interesting details\"\n        icon={<MaterialIcons.Home />}\n        selected\n      >\n        Explore\n      </ListItem>\n      <ListItem\n        icon={<MaterialIcons.Info />}\n        onClick={handleClick}\n        selected={selected}\n        truncate={{ description: \"It's an item\" }}\n      >\n        Develop\n      </ListItem>\n      <ListItem\n        icon={<MaterialIcons.Info />}\n        truncate={{ description: 'Word Document - Last update 3 days ago' }}\n      >\n        This is a really long navigation list item that should get truncated at\n        some point waaaayyyy out in the nether regions of a long line of text\n      </ListItem>\n    </NavList>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:NavList.$,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/NavList",component:NavList.$,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);