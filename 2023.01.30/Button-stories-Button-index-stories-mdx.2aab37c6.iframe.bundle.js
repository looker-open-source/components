"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[8724],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Button/stories/Button/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),Button=__webpack_require__("../components/src/Button/Button.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:Button.z,title:"Docs/Button",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"button"},"Button"),(0,esm.kt)("p",null,"Use a default button for the most frequently used action or most important action on a page. Default buttons should only appear once on a page. They are sometimes accompanied by a secondary button."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function Basic() {\n  return <Button>Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"color"},"Color"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"Key")," is the primary brand color, which is the default setting.\n",(0,esm.kt)("inlineCode",{parentName:"p"},"Critical")," Buttons are to be used in situations where you need to convey some very important, potentially irreversible consequence of pressing this button."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function Critical() {\n  return <Button color=\"critical\">Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"Neutral")," buttons are meant to fade into the background. These are usually used for secondary, nonessential, actions."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function Neutral() {\n  return <Button color=\"neutral\">Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"size"},"Size"),(0,esm.kt)("p",null,"Use the size property on a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Button />")," to modify the size the button rendered. You can combine it with the ",(0,esm.kt)("inlineCode",{parentName:"p"},"mode")," property to get the correct style and size of button you need."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function XSmall() {\n  return <Button size=\"xsmall\">Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function Small() {\n  return <Button size=\"small\">Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function Medium() {\n  return <Button size=\"medium\">Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function Large() {\n  return <Button size=\"large\">Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"full-width"},"Full Width"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"fullWidth")," property on a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Button />")," and it will set its width to 100%."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function FullWidth() {\n  return <Button fullWidth>Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"disabled"},"Disabled"),(0,esm.kt)("p",null,"Use a disabled button to indicate to the user what action will be possible on a page once a prerequisite action is taken. Disabled buttons do not respond to user interaction."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Button } from '../..'\n\nexport default function Disabled() {\n  return <Button disabled>ButtonText</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"icons"},"Icons"),(0,esm.kt)("p",null,"Buttons can have an icon before or after their content, using the ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconBefore")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconAfter")," property. Each property accepts the ",(0,esm.kt)("a",{parentName:"p",href:"/#!/Icons"},"name of an icon")),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { Button } from '../..'\n\nexport default function IconBefore() {\n  return <Button iconBefore={<MaterialIcons.AddCircle />}>Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { Button } from '../..'\n\nexport default function IconAfter() {\n  return <Button iconAfter={<MaterialIcons.Delete />}>Button Text</Button>\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:Button.z,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Button",component:Button.z,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);