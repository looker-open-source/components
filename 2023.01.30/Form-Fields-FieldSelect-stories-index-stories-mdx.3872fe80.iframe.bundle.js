"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[173],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Form/Fields/FieldSelect/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{id:{defaultValue:null,description:"Id of the input element to match a label to.",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Defines the label for the field.\nI18n recommended: content that is user visible should be treated for i18n",name:"label",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Whether or not the field should display a `*` denoting it is required.",name:"required",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},autoResize:{defaultValue:null,description:"Allows Field to adjust to the width of the input (InputText and Select)",name:"autoResize",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},detail:{defaultValue:null,description:"notes and details added to the top right corner of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"notes and more info added to the bottom of the field\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},inline:{defaultValue:{value:"false"},description:"Determines where to place the label in relation to the input.",name:"inline",required:!1,type:{name:"boolean"}},validationMessage:{defaultValue:null,description:"Holds the type of validation (error, warning, etc.) and corresponding message.",name:"validationMessage",required:!1,type:{name:"ValidationMessageProps"}},hideLabel:{defaultValue:{value:"false"},description:"Label will be visually hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},ariaLabelOnly:{defaultValue:null,description:"Apply label using aria-label, there will be no visible label in the UI",name:"ariaLabelOnly",required:!1,type:{name:"boolean"}},externalLabel:{defaultValue:{value:"false"},description:"External label placement above the field",name:"externalLabel",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Value of the current selected option (controlled)",name:"value",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Value of the initial option",name:"defaultValue",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Handle an option being selected",name:"onChange",required:!1,type:{name:"((value: string) => void)"}},wrapperAriaLabel:{defaultValue:null,description:"The optional a11y aria label for combobox Wrapper element that has popup",name:"wrapperAriaLabel",required:!1,type:{name:"string"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"ResponsiveValue<FontFamilies, Required<Theme<TLengthStyledSystem>>>"}},fontSize:{defaultValue:null,description:"Use a @looker/components FontSizes to set font size",name:"fontSize",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},fontWeight:{defaultValue:null,description:"Use a @looker/components FontWeights to set weight\n  normal, medium, semiBold, bold",name:"fontWeight",required:!1,type:{name:"ResponsiveValue<FontWeights, Required<Theme<TLengthStyledSystem>>>"}},lineHeight:{defaultValue:null,description:"Use a @looker/components LineHeights (xxsmall - xxxxlarge) to set line height",name:"lineHeight",required:!1,type:{name:"ResponsiveValue<FontSizes, Required<Theme<TLengthStyledSystem>>>"}},onClose:{defaultValue:null,description:"Called when the suggestion list closes, whether via blur, escape or selection",name:"onClose",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},onOpen:{defaultValue:null,description:"Called when the suggestion list opens, whether via typing, click, or focus",name:"onOpen",required:!1,type:{name:"ComboboxCallback<MaybeComboboxOptionObject>"}},openOnFocus:{defaultValue:null,description:"If true, the popover opens when focus is on the text box.",name:"openOnFocus",required:!1,type:{name:"boolean"}},openOnClick:{defaultValue:{value:"true"},description:"If true, the popover opens when the text box is clicked.",name:"openOnClick",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Options may be flat or grouped, label is optional â€“ without it the value is used",name:"options",required:!1,type:{name:"SelectOptionProps[]"}},isClearable:{defaultValue:null,description:"The user can clear the current value by clicking an x icon button",name:"isClearable",required:!1,type:{name:"boolean"}},onFilter:{defaultValue:null,description:"Handle when the user types in the field,\nor the menu opens with a pre-populated value",name:"onFilter",required:!1,type:{name:"((term: string) => void)"}},listLayout:{defaultValue:null,description:"Control the dimensions of the list\n(use this to untether the list width from the input width)",name:"listLayout",required:!1,type:{name:"LayoutProps<Required<Theme<TLengthStyledSystem>>>"}},windowing:{defaultValue:null,description:"Render only the options visible in the scroll window\ndefaults to false for <100 options, true for >=100 options",name:"windowing",required:!1,type:{name:"boolean"}},isFilterable:{defaultValue:null,description:"The user can type in the input (default false to mimic traditional select tag)",name:"isFilterable",required:!1,type:{name:"boolean"}},noOptionsLabel:{defaultValue:null,description:"Text to show when there are no available options",name:"noOptionsLabel",required:!1,type:{name:"string"}},showCreate:{defaultValue:null,description:"Add an on-the-fly option mirroring the typed text (use when isFilterable = true)\nWhen `true`, notInOptions is used to show/hide and can be included in a custom function",name:"showCreate",required:!1,type:{name:"boolean"}},formatCreateLabel:{defaultValue:null,description:"Format the label of the on-the-fly create option (use with canCreate)",name:"formatCreateLabel",required:!1,type:{name:"((inputText: string) => ReactNode)"}},isLoading:{defaultValue:{value:"false"},description:"Render a spinner in the list instead of any options",name:"isLoading",required:!1,type:{name:"boolean"}},validationType:{defaultValue:null,description:"",name:"validationType",required:!1,type:{name:"enum",value:[{value:'"error"'}]}},noErrorIcon:{defaultValue:null,description:"Don't show the error icon when validationType is 'error'",name:"noErrorIcon",required:!1,type:{name:"boolean"}},indicator:{defaultValue:null,description:"Customize the area to the left of the label, which by default\nrenders a check mark for the selected option or a spacer\nUse a ReactNode, function component or render-prop-style function, or false to remove",name:"indicator",required:!1,type:{name:"ReactNode | ComboboxOptionIndicatorFunction"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Form/Fields/FieldSelect/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Form/Fields/FieldSelect/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.FieldSelect,title:"Docs/FieldSelect",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"fieldselect"},"FieldSelect"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldSelect />")," component is composed of an ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Select />")," component and a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Label />")," component. Using ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldSelect />")," allows for rendering validation messages. By default, the label will render directly above the input field, which is the recommended convention, however this is adjustable with the ",(0,esm.kt)("inlineCode",{parentName:"p"},"inline")," property."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { FieldSelect } from '../../FieldSelect'\nimport type { FieldSelectProps } from '../../FieldSelect'\n\nexport default function Basic(props: FieldSelectProps) {\n  return (\n    <FieldSelect\n      name=\"Cheeses\"\n      label=\"Cheeses\"\n      defaultValue=\"cheddar\"\n      options={[\n        { label: 'Cheddar', value: 'cheddar' },\n        { label: 'Gouda', value: 'gouda' },\n        { label: 'Swiss', value: 'swiss' },\n      ]}\n      {...props}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h3",{id:"fieldselect-validation"},"FieldSelect Validation"),(0,esm.kt)("p",null,"The ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldSelect />")," component accepts ",(0,esm.kt)("inlineCode",{parentName:"p"},"validationMessage")," as a property. This is an object with properties ",(0,esm.kt)("inlineCode",{parentName:"p"},"type")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"message"),"."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { FieldSelect } from '../../FieldSelect'\n\nexport default function Validation() {\n  return (\n    <FieldSelect\n      name=\"Cheeses\"\n      label=\"Cheeses\"\n      defaultValue=\"cheddar\"\n      options={[\n        { label: 'Cheddar', value: 'cheddar' },\n        { label: 'Gouda', value: 'gouda' },\n        { label: 'Swiss', value: 'swiss' },\n      ]}\n      validationMessage={{ message: 'This is an error', type: 'error' }}\n    />\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("p",null,"If you have multiple fields in need of validation, it is recommended that you wrap them in a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Form />")," component and pass to it a dictionary with key as field name and value as a ",(0,esm.kt)("inlineCode",{parentName:"p"},"ValidationMessage"),"."),(0,esm.kt)("p",null,"Note: In the current implementation, any ",(0,esm.kt)("inlineCode",{parentName:"p"},"ValidationMessage")," set in a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldSelect />")," component will be overridden by ",(0,esm.kt)("inlineCode",{parentName:"p"},"ValidationMessages")," set in the parent ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Form />")," component. Because of this, it is highly recommended that you only ever directly set ",(0,esm.kt)("inlineCode",{parentName:"p"},"ValidationMessage")," if a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<FieldSelect />")," is outside a ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Form />"),"."),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.FieldSelect,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/FieldSelect",component:src.FieldSelect,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);