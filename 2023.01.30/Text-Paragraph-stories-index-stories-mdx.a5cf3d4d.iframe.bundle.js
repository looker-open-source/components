"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[3017],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Text/Paragraph/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),Paragraph=__webpack_require__("../components/src/Text/Paragraph/Paragraph.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:Paragraph.n,title:"Docs/Paragraph",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"paragraph"},"Paragraph"),(0,esm.kt)("p",null,"Renders a block level ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Paragraph />")," element on the page."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Paragraph } from '../Paragraph'\n\nexport default function Default() {\n  return <Paragraph>Paragraph Text</Paragraph>\n}\n",mdxType:"Editor"}),(0,esm.kt)("p",null,"By default, paragraphs inherit the font size of the parent element."),(0,esm.kt)("h2",{id:"truncate"},"Truncate"),(0,esm.kt)("p",null,"At times you may want your ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Paragraph />")," to truncate instead of the text wrapping, the ",(0,esm.kt)("inlineCode",{parentName:"p"},"truncate")," property will do that for you. For a multiline truncate, use ",(0,esm.kt)("inlineCode",{parentName:"p"},"truncateLines"),"."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Paragraph } from '../Paragraph'\n\nexport default function Truncate() {\n  return (\n    <Paragraph truncate={true}>\n      This is a really long title that will need to truncate. It's gotta get\n      real long so it hits the edge of the jest-dom virtual window size so I'm\n      going to just keep typing and typing to make sure it triggers overflow as\n      needed to prove that this is work properly. Are we there yet? Maybe? I\n      sure hope so!\n    </Paragraph>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Paragraph } from '../Paragraph'\n\nexport default function MultilineTruncate() {\n  return (\n    <Paragraph truncateLines={2}>\n      This is a really long title that will need to truncate. It's gotta get\n      real long so it hits the edge of the jest-dom virtual window size so I'm\n      going to just keep typing and typing to make sure it triggers overflow as\n      needed to prove that this is work properly. Are we there yet? Maybe? I\n      sure hope so!\n    </Paragraph>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"text-alignment"},"Text Alignment"),(0,esm.kt)("p",null,"You can use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"textAlign")," property to change the alignment of the rendered text, below is an example with aligned text put into ",(0,esm.kt)("inlineCode",{parentName:"p"},"<Card />"),"s."),(0,esm.kt)(Editor.Editor,{code:"/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { Card, CardContent } from '../../../Card'\nimport { Paragraph } from '../Paragraph'\n\nexport default function TextAlign() {\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <Paragraph> I am aligned left by default</Paragraph>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardContent>\n          <Paragraph textAlign=\"center\">\n            This is how you can center align Paragraph text\n          </Paragraph>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardContent>\n          <Paragraph textAlign=\"right\">\n            This is how you can right align Paragraph text\n          </Paragraph>\n        </CardContent>\n      </Card>\n    </>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)(dist_esm.ArgsTable,{of:Paragraph.n,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Paragraph",component:Paragraph.n,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);