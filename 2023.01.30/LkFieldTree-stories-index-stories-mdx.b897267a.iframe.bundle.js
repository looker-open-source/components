"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[6018],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/LkFieldTree/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),src=__webpack_require__("../components/src/index.ts"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{label:{defaultValue:null,description:"Label text or element displayed within Tree's internal AccordionDisclosure",name:"label",required:!0,type:{name:"ReactNode"}},color:{defaultValue:null,description:"Replace the normal uiN(1-5) color, when ListItem is selected, with color label passed.\n\nList, ListItem, Tree & TreeItem now theme-based color assignments. Supported colors are:\n\n - key\n - calculation\n - dimension\n - measure\n\nThe color is used a background color (using the `subtle` variant) when the item\nis `selected` or `current`. Items with `calculation` & `measure` will have a text\ncolor applied at all times unless they are `disabled`",name:"color",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"GenericOnClick<HTMLElement>"}},detail:{defaultValue:null,description:"Detail element placed right of the item children. Prop value can take one of two forms:\n1. ReactNode\n2. Object with content and options properties\n\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ListItemDetailConfig"}},hovered:{defaultValue:{value:"false"},description:"Present ListItem in it's hovered state. Only for use in testing / image-snapshots.\n\nNOTE: This will only change the _initial_ hover state. If a hover event triggers a change\nof hover state the ListItem will return to it's default state.\n@private Test use only. May be deprecated and removed without notice.",name:"hovered",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Optional icon placed left of the item children",name:"icon",required:!1,type:{name:"IconType"}},isOpen:{defaultValue:null,description:"Use this property (alongside toggleOpen) if you wish to use the component in a `controlled` manner.\nisOpen determines whether the Accordion is currently open or closed",name:"isOpen",required:!1,type:{name:"boolean"}},toggleOpen:{defaultValue:null,description:"Use this property (alongside isOpen) if you wish to use the component in a `controlled` manner.\ntoggleOpen is a function that should control the value / state of isOpen",name:"toggleOpen",required:!1,type:{name:"((isOpen: boolean) => void)"}},defaultOpen:{defaultValue:null,description:"Use this property if you wish to use the component in a `uncontrolled` manner and have it open when initially rendering.\nComponent will hold internal state and open and close on disclosure click",name:"defaultOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback that is triggered when closing the Accordion (i.e. when clicking on an open Accordion)",name:"onClose",required:!1,type:{name:"(() => void)"}},onOpen:{defaultValue:null,description:"Callback that is triggered when opening the Accordion (i.e. when clicking on a closed Accordion)",name:"onOpen",required:!1,type:{name:"(() => void)"}},dividers:{defaultValue:{value:"false"},description:'Produce a small visual space between each `TreeItem` displayed in the list so adjacent\nitems that are in a "selected" or active state have visual separation.',name:"dividers",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/LkFieldTree/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/LkFieldTree/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:src.LkFieldTree,title:"Docs/LkFieldTree",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"lkfieldtree"},"LkFieldTree"),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { TreeCollection } from '../../Tree'\nimport { LkFieldItem, LkFieldTree } from '../'\nimport type { LkFieldTreeProps } from '../'\n\nexport default function Basic(props: LkFieldTreeProps) {\n  const { label = <strong>Orders</strong>, defaultOpen = true, ...rest } = props\n\n  return (\n    <TreeCollection>\n      <LkFieldTree label={label} {...rest}>\n        <LkFieldTree label={label} defaultOpen>\n          <LkFieldItem>ID</LkFieldItem>\n          <LkFieldItem>Status</LkFieldItem>\n          <LkFieldTree\n            label={<strong>Created</strong>}\n            defaultOpen={defaultOpen}\n          >\n            <LkFieldItem>Created Date</LkFieldItem>\n            <LkFieldItem>Created Month</LkFieldItem>\n            <LkFieldItem>Created Year</LkFieldItem>\n            <LkFieldItem>Created Quarter</LkFieldItem>\n          </LkFieldTree>\n        </LkFieldTree>\n      </LkFieldTree>\n    </TreeCollection>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:src.LkFieldTree,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/LkFieldTree",component:src.LkFieldTree,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);