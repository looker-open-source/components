"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[3029],{"../components/src/NavTree/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Link:()=>Link,ParentIcon:()=>ParentIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),NavTree=__webpack_require__("../components/src/NavTree/NavTree.tsx"),esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js"),Folder_esm=__webpack_require__("../../node_modules/@styled-icons/material/Folder/Folder.esm.js"),src=__webpack_require__("../components/src/index.ts");function Basic(props){return react.createElement(src.NavTree,(0,esm_extends.Z)({},props,{defaultOpen:!0,icon:react.createElement(Folder_esm.g,null),label:"Cheeses"}),react.createElement(src.NavTreeItem,null,"Cheddar"))}try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{color:{defaultValue:null,description:"Replace the normal uiN(1-5) color, when ListItem is selected, with color label passed.\n\nList, ListItem, Tree & TreeItem now theme-based color assignments. Supported colors are:\n\n - key\n - calculation\n - dimension\n - measure\n\nThe color is used a background color (using the `subtle` variant) when the item\nis `selected` or `current`. Items with `calculation` & `measure` will have a text\ncolor applied at all times unless they are `disabled`",name:"color",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"optional extra description\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},detail:{defaultValue:null,description:"Detail element placed right of the item children. Prop value can take one of two forms:\n1. ReactNode\n2. Object with content and options properties\n\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ListItemDetailConfig"}},hovered:{defaultValue:{value:"false"},description:"Present ListItem in it's hovered state. Only for use in testing / image-snapshots.\n\nNOTE: This will only change the _initial_ hover state. If a hover event triggers a change\nof hover state the ListItem will return to it's default state.\n@private Test use only. May be deprecated and removed without notice.",name:"hovered",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Optional icon placed left of the item children",name:"icon",required:!1,type:{name:"IconType"}},truncate:{defaultValue:null,description:"If true, text children and description will be truncated if text overflows\nSpecifying `description` will cause the truncation tooltip for label to _always_ be presented\n\nText specified in `description` property will be displayed below `label` in the tooltip",name:"truncate",required:!1,type:{name:"TruncateConfigProp"}},ripple:{defaultValue:{value:"true"},description:"The ripple animation",name:"ripple",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"Use this property (alongside toggleOpen) if you wish to use the component in a `controlled` manner.\nisOpen determines whether the Accordion is currently open or closed",name:"isOpen",required:!1,type:{name:"boolean"}},toggleOpen:{defaultValue:null,description:"Use this property (alongside isOpen) if you wish to use the component in a `controlled` manner.\ntoggleOpen is a function that should control the value / state of isOpen",name:"toggleOpen",required:!1,type:{name:"((isOpen: boolean) => void)"}},defaultOpen:{defaultValue:null,description:"Use this property if you wish to use the component in a `uncontrolled` manner and have it open when initially rendering.\nComponent will hold internal state and open and close on disclosure click",name:"defaultOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback that is triggered when closing the Accordion (i.e. when clicking on an open Accordion)",name:"onClose",required:!1,type:{name:"(() => void)"}},onOpen:{defaultValue:null,description:"Callback that is triggered when opening the Accordion (i.e. when clicking on a closed Accordion)",name:"onOpen",required:!1,type:{name:"(() => void)"}},label:{defaultValue:null,description:"Label text or element displayed within Tree's internal AccordionDisclosure",name:"label",required:!0,type:{name:"ReactNode"}},indicatorLabel:{defaultValue:null,description:"Passed down to the indicator icon's label prop",name:"indicatorLabel",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/NavTree/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/NavTree/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function Link(){return react.createElement(src.NavTree,{defaultOpen:!0,label:"Click me to go to Google",icon:react.createElement(Folder_esm.g,null),href:"https://google.com",target:"_blank",indicatorLabel:"Google Link Indicator"},react.createElement(src.NavTreeItem,{href:"https://google.com",target:"_blank",parentIcon:!0},"Some Item")," ")}function ParentIcon(){return react.createElement(react.Fragment,null,react.createElement(src.NavTree,{defaultOpen:!0,label:"Parent Tree with Icon",icon:react.createElement(Folder_esm.g,null)},react.createElement(src.NavTreeItem,{parentIcon:!0},"Cheddar"),react.createElement(src.NavTreeItem,{parentIcon:!0},"Cheddar 2"),react.createElement(src.NavTreeItem,{parentIcon:!0},"Cheddar 3")),react.createElement(src.NavTree,{defaultOpen:!0,label:"Grandparent Tree with Icon",icon:react.createElement(Folder_esm.g,null)},react.createElement(src.NavTree,{defaultOpen:!0,label:"Parent Tree with No Icon"},react.createElement(src.NavTreeItem,null,"Swiss"),react.createElement(src.NavTreeItem,null,"Swiss 2"),react.createElement(src.NavTreeItem,null,"Swiss 3"))))}const index_stories={argTypes:defaultArgTypes.W,component:NavTree.B,parameters:{storyshots:{disable:!0}},title:"Stories/NavTree"},__namedExportsOrder=["Basic","Link","ParentIcon"];try{indexstories.displayName="indexstories",indexstories.__docgenInfo={description:"",displayName:"indexstories",props:{color:{defaultValue:null,description:"Replace the normal uiN(1-5) color, when ListItem is selected, with color label passed.\n\nList, ListItem, Tree & TreeItem now theme-based color assignments. Supported colors are:\n\n - key\n - calculation\n - dimension\n - measure\n\nThe color is used a background color (using the `subtle` variant) when the item\nis `selected` or `current`. Items with `calculation` & `measure` will have a text\ncolor applied at all times unless they are `disabled`",name:"color",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"optional extra description\nI18n recommended: content that is user visible should be treated for i18n",name:"description",required:!1,type:{name:"ReactNode"}},detail:{defaultValue:null,description:"Detail element placed right of the item children. Prop value can take one of two forms:\n1. ReactNode\n2. Object with content and options properties\n\nI18n recommended: content that is user visible should be treated for i18n",name:"detail",required:!1,type:{name:"ListItemDetailConfig"}},hovered:{defaultValue:{value:"false"},description:"Present ListItem in it's hovered state. Only for use in testing / image-snapshots.\n\nNOTE: This will only change the _initial_ hover state. If a hover event triggers a change\nof hover state the ListItem will return to it's default state.\n@private Test use only. May be deprecated and removed without notice.",name:"hovered",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Optional icon placed left of the item children",name:"icon",required:!1,type:{name:"IconType"}},truncate:{defaultValue:null,description:"If true, text children and description will be truncated if text overflows\nSpecifying `description` will cause the truncation tooltip for label to _always_ be presented\n\nText specified in `description` property will be displayed below `label` in the tooltip",name:"truncate",required:!1,type:{name:"TruncateConfigProp"}},ripple:{defaultValue:{value:"true"},description:"The ripple animation",name:"ripple",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"Use this property (alongside toggleOpen) if you wish to use the component in a `controlled` manner.\nisOpen determines whether the Accordion is currently open or closed",name:"isOpen",required:!1,type:{name:"boolean"}},toggleOpen:{defaultValue:null,description:"Use this property (alongside isOpen) if you wish to use the component in a `controlled` manner.\ntoggleOpen is a function that should control the value / state of isOpen",name:"toggleOpen",required:!1,type:{name:"((isOpen: boolean) => void)"}},defaultOpen:{defaultValue:null,description:"Use this property if you wish to use the component in a `uncontrolled` manner and have it open when initially rendering.\nComponent will hold internal state and open and close on disclosure click",name:"defaultOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback that is triggered when closing the Accordion (i.e. when clicking on an open Accordion)",name:"onClose",required:!1,type:{name:"(() => void)"}},onOpen:{defaultValue:null,description:"Callback that is triggered when opening the Accordion (i.e. when clicking on a closed Accordion)",name:"onOpen",required:!1,type:{name:"(() => void)"}},label:{defaultValue:null,description:"Label text or element displayed within Tree's internal AccordionDisclosure",name:"label",required:!0,type:{name:"ReactNode"}},indicatorLabel:{defaultValue:null,description:"Passed down to the indicator icon's label prop",name:"indicatorLabel",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/NavTree/stories/index.stories.tsx#indexstories"]={docgenInfo:indexstories.__docgenInfo,name:"indexstories",path:"../components/src/NavTree/stories/index.stories.tsx#indexstories"})}catch(__react_docgen_typescript_loader_error){}},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);