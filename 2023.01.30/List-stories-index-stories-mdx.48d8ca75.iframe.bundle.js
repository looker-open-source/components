"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[3792],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/List/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),List=__webpack_require__("../components/src/List/List.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:List.a,title:"Docs/List",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"list"},"List"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"List"),", along with its companion component ",(0,esm.kt)("inlineCode",{parentName:"p"},"ListItem"),", renders a list of items. However, unlike standard ",(0,esm.kt)("inlineCode",{parentName:"p"},"ul")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"li")," elements, ",(0,esm.kt)("inlineCode",{parentName:"p"},"List")," and ",(0,esm.kt)("inlineCode",{parentName:"p"},"ListItem")," come prebuilt with a number of props to simplify item style and behavior customization."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { List } from \'../\'\nimport { ListItem } from \'../../\'\n\nexport default function Basic() {\n  return (\n    <List>\n      <ListItem\n        icon={<MaterialIcons.SportsSoccer />}\n        description="Orange-y"\n        detail="England"\n      >\n        Cheddar\n      </ListItem>\n      <ListItem icon={<MaterialIcons.DirectionsBoat />} detail="Netherlands">\n        Gouda\n      </ListItem>\n      <ListItem icon={<MaterialIcons.LocalPizza />} detail="Italy">\n        Mozzarella\n      </ListItem>\n      <ListItem icon={<MaterialIcons.BubbleChart />} detail="Switzerland">\n        Swiss\n      </ListItem>\n    </List>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"font-family"},"Font Family"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"fontFamily")," prop to change the font on all text elements in the ",(0,esm.kt)("inlineCode",{parentName:"p"},"List"),". The prop accepts the following values:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"body"),(0,esm.kt)("li",{parentName:"ul"},"brand"),(0,esm.kt)("li",{parentName:"ul"},"code")),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React, { useState } from \'react\'\nimport type { FontFamilies } from \'@looker/design-tokens\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { ButtonItem, ButtonToggle, ListItem } from \'../../\'\nimport { List } from \'../\'\n\nexport default function FontFamily() {\n  const [family, setFamily] = useState<FontFamilies>(\'code\')\n\n  return (\n    <>\n      <ButtonToggle\n        value={family}\n        onChange={val => setFamily(val as FontFamilies)}\n      >\n        <ButtonItem>body</ButtonItem>\n        <ButtonItem>brand</ButtonItem>\n        <ButtonItem>code</ButtonItem>\n      </ButtonToggle>\n      <List fontFamily={family}>\n        <ListItem\n          icon={<MaterialIcons.SportsSoccer />}\n          description="Orange-y"\n          detail="England"\n        >\n          Cheddar\n        </ListItem>\n        <ListItem icon={<MaterialIcons.DirectionsBoat />} detail="Netherlands">\n          Gouda\n        </ListItem>\n        <ListItem icon={<MaterialIcons.LocalPizza />} detail="Italy">\n          Mozzarella\n        </ListItem>\n        <ListItem icon={<MaterialIcons.BubbleChart />} detail="Switzerland">\n          Swiss\n        </ListItem>\n      </List>\n    </>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"color"},"Color"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"color")," prop to change the text color within the list. Accepts the following values:"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"calculation"),(0,esm.kt)("li",{parentName:"ul"},"dimension"),(0,esm.kt)("li",{parentName:"ul"},"key"),(0,esm.kt)("li",{parentName:"ul"},"measure")),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React, { useState } from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport type { ListColor } from \'../\'\nimport { List } from \'../\'\nimport { ListItem, ButtonItem, ButtonToggle } from \'../../\'\n\nexport default function Color() {\n  const [colorVal, setColorVal] = useState<ListColor>(\'calculation\')\n  return (\n    <>\n      <ButtonToggle\n        value={colorVal}\n        onChange={(draftValue: string) => setColorVal(draftValue as ListColor)}\n      >\n        <ButtonItem>calculation</ButtonItem>\n        <ButtonItem>dimension</ButtonItem>\n        <ButtonItem>key</ButtonItem>\n        <ButtonItem>measure</ButtonItem>\n      </ButtonToggle>\n      <List color={colorVal}>\n        <ListItem\n          icon={<MaterialIcons.SportsSoccer />}\n          description="Orange-y"\n          detail="England"\n        >\n          Cheddar\n        </ListItem>\n        <ListItem icon={<MaterialIcons.DirectionsBoat />} detail="Netherlands">\n          Gouda\n        </ListItem>\n        <ListItem icon={<MaterialIcons.LocalPizza />} detail="Italy">\n          Mozzarella\n        </ListItem>\n        <ListItem icon={<MaterialIcons.BubbleChart />} detail="Switzerland">\n          Swiss\n        </ListItem>\n      </List>\n    </>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"density"},"Density"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"density")," prop to set the size and spacing of your ",(0,esm.kt)("inlineCode",{parentName:"p"},"List"),". As ",(0,esm.kt)("inlineCode",{parentName:"p"},"density")," decreases, so does the height and spacing of your ",(0,esm.kt)("inlineCode",{parentName:"p"},"List"),"'s child ",(0,esm.kt)("inlineCode",{parentName:"p"},"ListItem"),"s."),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"density")," values range from -3 to 1."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React, { useState } from 'react'\nimport type { DensityRamp } from '@looker/design-tokens'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { List } from '../'\nimport { ListItem, ButtonItem, ButtonToggle } from '../../'\n\nexport default function Density() {\n  const [currentDensity, setCurrentDensity] = useState<DensityRamp>(0)\n\n  return (\n    <>\n      <ButtonToggle\n        value={String(currentDensity)}\n        onChange={(draftValue: string) =>\n          setCurrentDensity(parseInt(draftValue) as DensityRamp)\n        }\n      >\n        <ButtonItem>-3</ButtonItem>\n        <ButtonItem>-2</ButtonItem>\n        <ButtonItem>-1</ButtonItem>\n        <ButtonItem>0</ButtonItem>\n        <ButtonItem>1</ButtonItem>\n      </ButtonToggle>\n\n      <List density={currentDensity}>\n        <ListItem icon={<MaterialIcons.DateRange />}>Item 1</ListItem>\n        <ListItem icon={<MaterialIcons.DateRange />}>Item 2</ListItem>\n        <ListItem icon={<MaterialIcons.DateRange />}>Item 3</ListItem>\n      </List>\n    </>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"icon-gutter"},"Icon Gutter"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconGutter")," prop if you want ",(0,esm.kt)("inlineCode",{parentName:"p"},"ListItem")," children without icons to align their text with ",(0,esm.kt)("inlineCode",{parentName:"p"},"ListItem")," children with icons."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { List } from '../'\nimport { ListItem } from '../../'\n\nexport default function FontFamily() {\n  return (\n    <List iconGutter>\n      <ListItem icon={<MaterialIcons.DateRange />}>Item 1</ListItem>\n      <ListItem>Item 2</ListItem>\n      <ListItem>Item 3</ListItem>\n    </List>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"windowing"},"Windowing"),(0,esm.kt)("p",null,"If a ",(0,esm.kt)("inlineCode",{parentName:"p"},"List")," contains more than 100 children it will use windowing to display\nonly the visible items for performance reasons. Windowing uses the item height to calculate\npositioning for natural scrolling behavior."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Note:")," A parent element of your ",(0,esm.kt)("inlineCode",{parentName:"p"},"List")," should have an explicit height. If no explicit height is set, your ",(0,esm.kt)("inlineCode",{parentName:"p"},"List")," will attempt to render all child items and not utilize the windowing logic."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { List } from '../'\nimport { ListItem, Space } from '../../'\n\nconst array3000 = Array.from(Array(3000), (_, i) => String(i))\nexport default function LongList() {\n  return (\n    <Space height={300}>\n      <List width={200}>\n        {array3000.map((item, i) => (\n          <ListItem key={i}>\n            {i > 0 && i % 30 === 0\n              ? 'Longlonglonglonglonglonglonglonglonglonglong'\n              : item}\n          </ListItem>\n        ))}\n      </List>\n      <div>\n        Without width on List, windowing plus variable item widths causes the\n        layout to be unstable.\n      </div>\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)(dist_esm.ArgsTable,{of:List.a,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/List",component:List.a,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);