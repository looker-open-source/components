name: Release & Publish NPM Packages

# This workflow does the following if repo does not have git tag that was updated in lerna.json
#  - creates release git tag
#  - publishes packages to NPM with latest tag
#
# This workflow is expected to run after merge of release pull requested created by release-pull-request workflow.

on:
  push:
    branches:
      - main
    paths:
      - 'lerna.json'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0

      - name: Fetch all tags
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Install dependencies
        run: |
          yarn install

      - name: Read version created by Lerna
        id: lerna_version
        run: |
          echo "::set-output name=version::v$(sed -nE 's/^\s*\"version\": \"(.*?)\",$/\1/p' lerna.json)"

      - name: Check if release tag is already created
        id: vars
        run: |
          lerna_version=${{ steps.lerna_version.outputs.version }}
          if [[ -z $(git tag -l "$lerna_version") ]]; then
            echo "Proceeding to create new release"
          else
            echo "New release already created, exiting."
            exit 1
          fi

      - name: Build packages
        run: |
          yarn build

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.lerna_version.outputs.version }}
          release_name: ${{ steps.lerna_version.outputs.version }}
          body: |
            See CHANGELOG file to see what's changed in new release.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM registry
        run: yarn lerna publish from-package --yes
