"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[4779],{"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)},"../components/src/Menu/stories/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>index_stories});__webpack_require__("../../node_modules/react/index.js");var esm=__webpack_require__("../../node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),Menu=__webpack_require__("../components/src/Menu/Menu.tsx"),Editor=__webpack_require__("./src/Editor/index.tsx"),defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts");try{Basic.displayName="Basic",Basic.__docgenInfo={description:"",displayName:"Basic",props:{children:{defaultValue:null,description:"A ReactElement that accepts dom props",name:"children",required:!0,type:{name:"ReactElement<MenuDomProps, string | JSXElementConstructor<any>>"}},listRef:{defaultValue:null,description:"The ref to be passed to the list element (`ref` is passed to the triggering element)",name:"listRef",required:!1,type:{name:"Ref<HTMLUListElement>"}},ref:{defaultValue:null,description:"Will be merged with the ref in the return",name:"ref",required:!1,type:{name:"Ref<HTMLElement>"}},id:{defaultValue:null,description:"The id of the dialog (if absent, a random id will be generated)",name:"id",required:!1,type:{name:"string"}},content:{defaultValue:null,description:"Content to render within the Popover surface.",name:"content",required:!0,type:{name:"ReactNode"}},disabled:{defaultValue:null,description:"If true, the Popover will not render",name:"disabled",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:{value:"false"},description:"When true, display Surface and it's contained content",name:"isOpen",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Specify a callback to be called each time this Popover is closed",name:"onClose",required:!1,type:{name:"(() => void)"}},canClose:{defaultValue:null,description:'Specify a callback to be called before trying to close the Popover. This allows for\nuse-cases where the user might lose work (think common "Save before closing warning" type flow)\nSpecify a callback to be called each time this Popover is closed',name:"canClose",required:!1,type:{name:"(() => boolean)"}},pin:{defaultValue:null,description:"By default Popover will reposition itself if they overflow the widow.\nYou can use the pin property to override this behavior.",name:"pin",required:!1,type:{name:"boolean"}},placement:{defaultValue:{value:"bottom"},description:"Can be one of: top, bottom, left, right, auto, with the modifiers: start,\nend. This value comes directly from popperjs. See\nhttps://popper.js.org/popper-documentation.html#Popper.placements for more\ninfo.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"bottom"'},{value:'"top"'},{value:'"right"'},{value:'"left"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},setOpen:{defaultValue:null,description:"Optional, for a controlled version of the component",name:"setOpen",required:!1,type:{name:"((open: boolean) => void)"}},triggerElement:{defaultValue:null,description:"The trigger element to use (alternatively use the ref returned)",name:"triggerElement",required:!1,type:{name:"HTMLElement | null"}},triggerToggle:{defaultValue:{value:"true"},description:"Whether to close the popover when the toggle is clicked again",name:"triggerToggle",required:!1,type:{name:"boolean"}},focusTrap:{defaultValue:{value:"true"},description:"Whether to trap focus within the popover",name:"focusTrap",required:!1,type:{name:"boolean"}},scrollLock:{defaultValue:{value:"true"},description:"Whether to lock scrolling outside the popover",name:"scrollLock",required:!1,type:{name:"boolean"}},cancelClickOutside:{defaultValue:{value:"false"},description:"Whether to honor the first click outside the popover",name:"cancelClickOutside",required:!1,type:{name:"boolean"}},surface:{defaultValue:null,description:"Custom surface component to render the content in\n@private",name:"surface",required:!1,type:{name:"StyledComponent<ForwardRefExoticComponent<OverlaySurfaceProps & RefAttributes<HTMLDivElement>>, DefaultTheme, {}, never>"}},ariaLabel:{defaultValue:null,description:"Optional Aria Label if not using Popover Header for A11Y",name:"ariaLabel",required:!1,type:{name:"string"}},hoverDisclosureRef:{defaultValue:null,description:"The element which hovering on/off of will show/hide the triggering element",name:"hoverDisclosureRef",required:!1,type:{name:"HTMLElement | RefObject<HTMLElement> | null"}},portalElement:{defaultValue:null,description:"",name:"portalElement",required:!1,type:{name:"HTMLDivElement | null"}},disableScrollLock:{defaultValue:null,description:"Set whether to disable scrolling outside the popover",name:"disableScrollLock",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"Replace the normal uiN(1-5) color, when ListItem is selected, with color label passed.\n\nList, ListItem, Tree & TreeItem now theme-based color assignments. Supported colors are:\n\n - key\n - calculation\n - dimension\n - measure\n\nThe color is used a background color (using the `subtle` variant) when the item\nis `selected` or `current`. Items with `calculation` & `measure` will have a text\ncolor applied at all times unless they are `disabled`",name:"color",required:!1,type:{name:"enum",value:[{value:'"key"'},{value:'"calculation"'},{value:'"dimension"'},{value:'"measure"'}]}},fontFamily:{defaultValue:{value:"inherit"},description:"Specify font-family. Can be specified as `brand`, `code` or `body` to explicitly\nspecify theme-controlled font-family.",name:"fontFamily",required:!1,type:{name:"enum",value:[{value:'"body"'},{value:'"code"'},{value:'"brand"'}]}},density:{defaultValue:{value:"0"},description:"Determines how dense a list should be by affecting child item size and spacing.",name:"density",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"-3"},{value:"-2"},{value:"-1"}]}},disableKeyboardNav:{defaultValue:null,description:"Disables the nested List's keyboard nav capabilities\n@private",name:"disableKeyboardNav",required:!1,type:{name:"boolean"}},iconGutter:{defaultValue:null,description:"If true, all ListItem children without an icon will reserve space for an icon\nfor alignment purposes.",name:"iconGutter",required:!1,type:{name:"boolean"}},windowing:{defaultValue:null,description:"Use windowing for long lists (strongly recommended to also define a width on List or its container)\nDefaults to false with children <= 100 and true for > 100",name:"windowing",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Menu/stories/Basic.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"../components/src/Menu/stories/Basic.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.Meta,{component:Menu.v,title:"Docs/Menu",mdxType:"Meta"}),(0,esm.kt)("h1",{id:"menu"},"Menu"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"Menu")," is a specific implementation of ",(0,esm.kt)("a",{parentName:"p",href:"popover"},(0,esm.kt)("inlineCode",{parentName:"a"},"Popover"))," that accepts an array\n(or React Fragment) of ",(0,esm.kt)("a",{parentName:"p",href:"menuitem"},(0,esm.kt)("inlineCode",{parentName:"a"},"MenuItem")),"s in the content prop."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Note:")," The direct child of ",(0,esm.kt)("inlineCode",{parentName:"p"},"Menu")," should be able to accept the following props. TypeScript currently doesn't support the enforcement of this."),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("inlineCode",{parentName:"li"},"onClick")," for toggling the menu"),(0,esm.kt)("li",{parentName:"ul"},(0,esm.kt)("inlineCode",{parentName:"li"},"ref")," for popover placement"),(0,esm.kt)("li",{parentName:"ul"},"aria attributes for accessibility")),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { Menu, MenuItem, Button } from '../..'\nimport type { MenuProps } from '../Menu'\n\nexport default function Basic(props: MenuProps) {\n  const {\n    content = (\n      <>\n        <MenuItem icon={<MaterialIcons.Favorite />}>Gouda</MenuItem>\n        <MenuItem icon={<MaterialIcons.Favorite />}>Swiss</MenuItem>\n      </>\n    ),\n    ...rest\n  } = props\n\n  return (\n    <Menu content={content} {...rest}>\n      <Button>Cheese</Button>\n    </Menu>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"density")," prop to set the size and spacing of your ",(0,esm.kt)("inlineCode",{parentName:"p"},"Menu"),". As ",(0,esm.kt)("inlineCode",{parentName:"p"},"density")," decreases, so does the height and spacing of child ",(0,esm.kt)("inlineCode",{parentName:"p"},"MenuItem"),"s."),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"density")," values range from -3 to 1."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { Menu, MenuItem, Button } from '../..'\n\nexport default function Density() {\n  return (\n    <Menu\n      content={\n        <>\n          <MenuItem icon={<MaterialIcons.Favorite />}>Gouda</MenuItem>\n          <MenuItem icon={<MaterialIcons.Favorite />}>Swiss</MenuItem>\n        </>\n      }\n      density={-3}\n    >\n      <Button>Cheese</Button>\n    </Menu>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"tooltip"},"Tooltip"),(0,esm.kt)("p",null,"To add a tooltip to the menu button, nest a ",(0,esm.kt)("inlineCode",{parentName:"p"},"Tooltip")," inside ",(0,esm.kt)("inlineCode",{parentName:"p"},"Menu"),"."),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { Menu, MenuItem, Button, Tooltip } from \'../..\'\n\nexport default function WithTooltip() {\n  return (\n    <Menu\n      content={\n        <>\n          <MenuItem icon={<MaterialIcons.Favorite />}>Gouda</MenuItem>\n          <MenuItem icon={<MaterialIcons.Favorite />}>Swiss</MenuItem>\n        </>\n      }\n    >\n      <Tooltip placement="top" content="Select your favorite kind">\n        <Button>Cheese</Button>\n      </Tooltip>\n    </Menu>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"placement"},"Placement"),(0,esm.kt)("p",null,"Use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"placement")," prop to position the overlay that contains the list.\nThe ",(0,esm.kt)("inlineCode",{parentName:"p"},"pin")," props allow you to enforce the placement to varying degrees."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { Menu, MenuItem, Button } from '../..'\n\nexport default function Placement() {\n  return (\n    <Menu\n      placement={'left'}\n      content={\n        <>\n          <MenuItem icon={<MaterialIcons.Favorite />}>Gouda</MenuItem>\n          <MenuItem icon={<MaterialIcons.Favorite />}>Swiss</MenuItem>\n        </>\n      }\n    >\n      <Button>Cheese</Button>\n    </Menu>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"nested-menu"},"Nested Menu"),(0,esm.kt)("p",null,"Add ",(0,esm.kt)("inlineCode",{parentName:"p"},"nestedMenu")," to a ",(0,esm.kt)("inlineCode",{parentName:"p"},"MenuItem")," to create a nested menu."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport { Menu, MenuItem, Button } from '../..'\n\nexport default function Nested() {\n  return (\n    <Menu\n      content={\n        <>\n          <MenuItem\n            nestedMenu={\n              <>\n                <MenuItem>Camembert</MenuItem>\n                <MenuItem>Comté</MenuItem>\n              </>\n            }\n          >\n            French\n          </MenuItem>\n          <MenuItem\n            nestedMenu={\n              <>\n                <MenuItem>Gouda</MenuItem>\n                <MenuItem>Limburger</MenuItem>\n              </>\n            }\n          >\n            Dutch\n          </MenuItem>\n        </>\n      }\n    >\n      <Button>Cheese</Button>\n    </Menu>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"controlled-menu"},"Controlled Menu"),(0,esm.kt)("p",null,"Control the state of the menu with the React ",(0,esm.kt)("inlineCode",{parentName:"p"},"useState")," hook."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React, { useState } from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { Menu, MenuItem, Space, Text, Button } from '../../..'\n\nexport default function Controlled() {\n  const [isOpen, setOpen] = useState(false)\n\n  return (\n    <Space>\n      <Menu\n        isOpen={isOpen}\n        setOpen={setOpen}\n        content={\n          <>\n            <MenuItem icon={<MaterialIcons.Email />}>Email</MenuItem>\n            <MenuItem icon={<MaterialIcons.TableChart />}>Spreadsheet</MenuItem>\n          </>\n        }\n      >\n        <Button>Export</Button>\n      </Menu>\n      <Text>{isOpen ? 'Menu Open' : 'Menu Closed'}</Text>\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"toggling-the-menu-button-on-hover"},"Toggling the menu button on hover"),(0,esm.kt)(Editor.Editor,{code:'/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the "Software"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React, { useRef } from \'react\'\nimport * as MaterialIcons from \'@styled-icons/material\'\nimport { Menu, MenuItem, Card, Flex, Paragraph, IconButton } from \'../..\'\n\nexport default function Hover() {\n  const hoverRef = useRef<HTMLDivElement>(null)\n  return (\n    <Card ref={hoverRef} p="u5">\n      <Flex justifyContent="space-between">\n        <Paragraph>Hovering in this card will show the menu button.</Paragraph>\n        <Menu\n          hoverDisclosureRef={hoverRef}\n          content={\n            <>\n              <MenuItem>Edit item</MenuItem>\n              <MenuItem>Create new sub-item</MenuItem>\n            </>\n          }\n        >\n          <IconButton icon={<MaterialIcons.MoreVert />} label="More Options" />\n        </Menu>\n      </Flex>\n    </Card>\n  )\n}\n',mdxType:"Editor"}),(0,esm.kt)("h2",{id:"adding-icon-placeholder-space"},"Adding icon placeholder space"),(0,esm.kt)("p",null,"If a ",(0,esm.kt)("inlineCode",{parentName:"p"},"Menu")," contains some number of ",(0,esm.kt)("inlineCode",{parentName:"p"},"MenuItem"),"s with icons and some without, use the ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconGutter")," prop to properly align all item labels with each other."),(0,esm.kt)("p",null,"More specifically, when ",(0,esm.kt)("inlineCode",{parentName:"p"},"iconGutter")," is true on a ",(0,esm.kt)("inlineCode",{parentName:"p"},"Menu"),", all ",(0,esm.kt)("inlineCode",{parentName:"p"},"MenuItem"),"s without ",(0,esm.kt)("inlineCode",{parentName:"p"},"icon")," prop values will allocate icon placeholder space."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { Menu, MenuItem, Button, Space } from '../..'\n\nexport default function IconPlaceholder() {\n  return (\n    <Space>\n      <Menu\n        content={\n          <>\n            <MenuItem icon={<MaterialIcons.DateRange />}>Calendar</MenuItem>\n            <MenuItem>No icon</MenuItem>\n            <MenuItem icon={<MaterialIcons.PivotTableChart />}>Pivot</MenuItem>\n          </>\n        }\n      >\n        <Button>No Icon Gutter</Button>\n      </Menu>\n      <Menu\n        iconGutter\n        content={\n          <>\n            <MenuItem icon={<MaterialIcons.DateRange />}>Calendar</MenuItem>\n            <MenuItem>No icon</MenuItem>\n            <MenuItem icon={<MaterialIcons.PivotTableChart />}>Pivot</MenuItem>\n          </>\n        }\n      >\n        <Button>Icon Gutter</Button>\n      </Menu>\n    </Space>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"menuheading-and-menudivider"},"MenuHeading and MenuDivider"),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"MenuHeading")," is typically used as a title for a group of ",(0,esm.kt)("inlineCode",{parentName:"p"},"MenuItem"),"s. ",(0,esm.kt)("inlineCode",{parentName:"p"},"MenuHeading")," children must be of type string."),(0,esm.kt)("p",null,(0,esm.kt)("inlineCode",{parentName:"p"},"MenuDivider")," is a divider element used to separate groups of ",(0,esm.kt)("inlineCode",{parentName:"p"},"MenuItem"),"s."),(0,esm.kt)("p",null,(0,esm.kt)("strong",{parentName:"p"},"Note:")," As a convenience feature, ",(0,esm.kt)("inlineCode",{parentName:"p"},"MenuDivider")," will not render a divider if it is the first or last child of a ",(0,esm.kt)("inlineCode",{parentName:"p"},"Menu"),"."),(0,esm.kt)(Editor.Editor,{code:"/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport React from 'react'\nimport { Menu, MenuItem, Button, MenuHeading, MenuDivider } from '../..'\n\nexport default function HeadingDivider() {\n  return (\n    <Menu\n      content={\n        <>\n          <MenuHeading>Good Cheeses</MenuHeading>\n          <MenuItem>Cheddar</MenuItem>\n          <MenuItem>Swiss</MenuItem>\n          <MenuItem>Brie</MenuItem>\n          <MenuDivider></MenuDivider>\n          <MenuHeading>Great Cheeses</MenuHeading>\n          <MenuItem>Pepper Jack</MenuItem>\n          <MenuItem>String Cheese</MenuItem>\n        </>\n      }\n    >\n      <Button>Menu with headings and dividers</Button>\n    </Menu>\n  )\n}\n",mdxType:"Editor"}),(0,esm.kt)("h2",{id:"props"},"Props"),(0,esm.kt)(dist_esm.ArgsTable,{of:Menu.v,exclude:defaultArgTypes.q,mdxType:"ArgsTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Menu",component:Menu.v,includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(MDXContent,null)};const index_stories=componentMeta,__namedExportsOrder=["__page"]}}]);