"use strict";(globalThis.webpackChunk_looker_storybook=globalThis.webpackChunk_looker_storybook||[]).push([[4266],{"../components/src/Text/Heading/stories/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Color:()=>Color,Default:()=>Default,FontSize:()=>FontSize,FontWeight:()=>FontWeight,Level:()=>Level,MultilineTruncate:()=>MultilineTruncate,TextAlign:()=>TextAlign,TextTransform:()=>TextTransform,Truncate:()=>Truncate,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var defaultArgTypes=__webpack_require__("./src/defaultArgTypes.ts"),Heading=__webpack_require__("../components/src/Text/Heading/Heading.tsx"),react=__webpack_require__("../../node_modules/react/index.js");function Default(){return react.createElement(Heading.X,null,"Heading Text")}function Color(){return react.createElement(Heading.X,{color:"text1"},"Heading Text")}function FontSize(){return react.createElement(Heading.X,{fontSize:"large"},"Heading Text")}function FontWeight(){return react.createElement(Heading.X,{fontWeight:"bold"},"Heading Text")}function MultilineTruncate(){return react.createElement(Heading.X,{truncateLines:2},"This is a really long title that will need to truncate. It's gotta get real long so it hits the edge of the jest-dom virtual window size so I'm going to just keep typing and typing to make sure it triggers overflow as needed to prove that this is work properly. Are we there yet? Maybe? I sure hope so!")}function Level(){return react.createElement(Heading.X,{as:"h4"},"Heading Text")}function Truncate(){return react.createElement(Heading.X,{truncate:!0},"This is a really long title that will need to truncate. It's gotta get real long so it hits the edge of the jest-dom virtual window size so I'm going to just keep typing and typing to make sure it triggers overflow as needed to prove that this is work properly. Are we there yet? Maybe? I sure hope so!")}function TextAlign(){return react.createElement(react.Fragment,null,react.createElement(Heading.X,{textAlign:"left"},"◀️ Align left (Default) "),react.createElement(Heading.X,{textAlign:"center"},"◀️ Align Center ▶️"),react.createElement(Heading.X,{textAlign:"right"},"Align Right ▶️"))}function TextTransform(){return react.createElement(Heading.X,{textTransform:"uppercase"},"Heading Text")}const index_stories={argTypes:defaultArgTypes.W,component:Heading.X,parameters:{storyshots:{disable:!0}},title:"Stories/Heading"},__namedExportsOrder=["Default","Color","FontSize","FontWeight","MultilineTruncate","Level","Truncate","TextAlign","TextTransform"]},"./src/defaultArgTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>defaultArgTypes,q:()=>excludedProps});const defaultArgTypes={as:{table:{disable:!0}},forwardedAs:{table:{disable:!0}},ref:{table:{disable:!0}},theme:{table:{disable:!0}}},excludedProps=Object.keys(defaultArgTypes)}}]);